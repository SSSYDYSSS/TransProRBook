[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TransProRBook",
    "section": "",
    "text": "Preface\nAnalysis and visualization of transcriptomic data are currently in progress. Future directions include multi-modal fusion, sparse learning, and the investigation of spatio-temporal effects."
  },
  {
    "objectID": "index.html#transpror-installation",
    "href": "index.html#transpror-installation",
    "title": "TransProRBook",
    "section": "TransProR Installation",
    "text": "TransProR Installation\nYou can install the released version of TransProR from CRAN with:\ninstall.packages(\"TransProR\")\nYou can install the development version of TransProR like so:\ninstall.packages(\"devtools\")\ndevtools::install_github(\"SSSYDYSSS/TransProR\")\n\ninstall.packages(\"remotes\")\ndevtools::install_github(\"SSSYDYSSS/TransProR\")"
  },
  {
    "objectID": "index.html#system-requirements",
    "href": "index.html#system-requirements",
    "title": "TransProRBook",
    "section": "System Requirements",
    "text": "System Requirements\n\nR (&gt;= 2.10)"
  },
  {
    "objectID": "index.html#citation",
    "href": "index.html#citation",
    "title": "TransProRBook",
    "section": "Citation",
    "text": "Citation\nYu Dongyue (2023). TransProR: Analysis and visualization of transcriptomic data are currently in progress. Future directions include multi-modal fusion, sparse learning, and the investigation of spatio-temporal effects. https://github.com/SSSYDYSSS/TransProR, https://sssydysss.github.io/TransProRBook/."
  },
  {
    "objectID": "index.html#contributing",
    "href": "index.html#contributing",
    "title": "TransProRBook",
    "section": "Contributing",
    "text": "Contributing\nThis manual is free and open source, so please do open an issue if you notice a problem!"
  },
  {
    "objectID": "Data Source and Introduction.html",
    "href": "Data Source and Introduction.html",
    "title": "1  Data Source and Introduction",
    "section": "",
    "text": "2 Data Download and Processing Statement"
  },
  {
    "objectID": "Data Source and Introduction.html#characteristics-of-the-tcga-database",
    "href": "Data Source and Introduction.html#characteristics-of-the-tcga-database",
    "title": "1  Data Source and Introduction",
    "section": "1.1 Characteristics of the TCGA Database:",
    "text": "1.1 Characteristics of the TCGA Database:\n\nRich Cancer Tissue Sample Data:\n\n\nThe TCGA (The Cancer Genome Atlas) database amasses a substantial volume of tissue sample data across a variety of cancer types, encompassing multi-dimensional data such as genomics, transcriptomics, and proteomics. This repository serves as a valuable resource for cancer research, enabling researchers to delve into the biological mechanisms of cancer at multiple levels.\n\n\nPrimary Focus on Cancer Types:\n\n\nThe core objective of TCGA is to unveil the molecular mechanisms, pathogenic genes, and mutation frequencies of different cancer types through integrative analysis, thereby providing a robust scientific basis for the diagnosis, treatment, and prevention of cancer.\n\n\nLimited Quantity of Normal Tissue Samples:\n\n\nDespite the richness of cancer sample data, TCGA has a relatively limited number of normal tissue samples, which to some extent, restricts its application in comparative studies between normal and cancerous tissues."
  },
  {
    "objectID": "Data Source and Introduction.html#characteristics-of-the-gtex-database",
    "href": "Data Source and Introduction.html#characteristics-of-the-gtex-database",
    "title": "1  Data Source and Introduction",
    "section": "1.2 Characteristics of the GTEx Database:",
    "text": "1.2 Characteristics of the GTEx Database:\n\nCovers Normal Tissue Sample Data from Multiple Organs and Tissues:\n\n\nThe GTEx (Genotype-Tissue Expression) database, by collecting samples from a variety of organs and tissues, offers an extensive gene expression data resource. This is crucial for understanding the heterogeneity of gene expression across different tissues and the functionality of genes under normal physiological conditions.\n\n\nFocus on Gene Expression Patterns in Normal Tissues:\n\n\nGTEx aims to reveal the patterns and variations of gene expression in normal tissues, providing a valuable foundation for researching gene functionality and regulatory mechanisms."
  },
  {
    "objectID": "Data Source and Introduction.html#demands-and-challenges-of-joint-analysis",
    "href": "Data Source and Introduction.html#demands-and-challenges-of-joint-analysis",
    "title": "1  Data Source and Introduction",
    "section": "1.3 Demands and Challenges of Joint Analysis:",
    "text": "1.3 Demands and Challenges of Joint Analysis:\n\nNeed to Augment Normal Tissue Sample Volume:\n\n\nGiven the limited number of normal tissue samples in the TCGA database, it’s essential to source additional normal tissue samples from other databases like GTEx, for a more comprehensive and accurate cancer research.\n\n\nComplexity of Data Integration:\n\n\nThe joint analysis of the TCGA and GTEx databases entails data integration and standardization, requiring a meticulous and scientific approach to ensure the efficacy of data integration and the accuracy of analysis results. This may include data cleansing, standardization, and a unified analysis workflow to ensure that data obtained from different databases can be accurately and effectively combined for analysis."
  },
  {
    "objectID": "Data Source and Introduction.html#ucsc-xena-data-download-pipeline",
    "href": "Data Source and Introduction.html#ucsc-xena-data-download-pipeline",
    "title": "1  Data Source and Introduction",
    "section": "2.1 UCSC Xena Data Download pipeline：",
    "text": "2.1 UCSC Xena Data Download pipeline：\n\n\nLog in to the official website: http://xena.ucsc.edu/\nClick “Launch Xena” to enter the main interface: https://xenabrowser.net/\nClick “DATA SETS” to enter the dataset interface: https://xenabrowser.net/datapages/\nTCGA and GTEX Data Download:\n\nGDC TCGA Breast Cancer (BRCA) (20 datasets)\n\nHTSeq - Counts (n=1,217) GDC Hub\n\ndownload (Download link, copyable)\nID/Gene Mapping (Download link, copyable)\n\nPhenotype (n=1,284) GDC Hub\n\ndownload (Download link, copyable)\n\nsurvival data (n=1,260) GDC Hub\n\ndownload (Download link, copyable)\n\n\nGDC TCGA Melanoma (SKCM) (14 datasets)\n\nHTSeq - Counts (n=472) GDC Hub\n\ndownload (Download link, copyable)\nID/Gene Mapping (Download link, copyable)\n\nPhenotype (n=477) GDC Hub\n\ndownload (Download link, copyable)\n\nsurvival data (n=463) GDC Hub\n\ndownload (Download link, copyable)\n\n\nGTEX\n\nTOIL RSEM expected_count (n=7,845) UCSC Toil RNA-seq Recompute\n\ndownload (Download link, copyable)\nID/Gene Mapping (Download link, copyable)\n\nGTEX phenotype (n=9,783) UCSC Toil RNA-seq Recompute\n\ndownload (Download link, copyable)"
  },
  {
    "objectID": "Data Source and Introduction.html#data-type",
    "href": "Data Source and Introduction.html#data-type",
    "title": "1  Data Source and Introduction",
    "section": "2.2 Data Type",
    "text": "2.2 Data Type\n\n2.2.1 count\nIn the context of RNA-seq data analysis, “Count” is an important concept. It represents the number of times each gene or transcript is measured in an RNA-seq experiment. Typically, these counts are obtained through sequencing machines, which measure the number of fragments associated with each gene or transcript, also known as “reads count” or “fragment count,” which indicates how many times each gene or transcript is covered or mapped in the sequencing data. These count data serve as the starting point for RNA-seq data analysis, providing raw information about the expression of genes or transcripts in different samples.\n\n2.2.1.1 Use Cases:\n\nGene Expression Analysis:\n\n\nCount data can be used to compare the relative expression levels of different genes. By tallying the counts for each gene, we can determine which genes are expressed more or less in various samples, identifying key genes.\n\n\nDifferential Expression Analysis:\n\n\nDifferential expression analysis aims to study changes in gene expression levels between different conditions or groups. In this context, count data is employed to compare gene expression levels under different conditions, often requiring statistical models to identify genes with significant differences.\n\n\nClustering Analysis:\n\n\nCount data can also be used for clustering analysis to identify groups of genes or samples with similar expression patterns. Through clustering analysis, genes with similar expression patterns can be grouped together.\n\n\nGene Annotation:\n\n\nCount data helps determine which genes or transcripts have evidence of measurement in the sequencing data, which is crucial for gene annotation.\n\n\n\n2.2.1.2 Advantages:\n\nIntuitiveness:\n\n\nCount data is obtained directly from RNA-seq experiments, providing an intuitive and straightforward representation of gene expression.\n\n\nFlexibility:\n\n\nCount data is versatile and applicable to various RNA-seq data analysis tasks, including basic gene expression analysis and more complex differential expression analysis.\n\n\n\n2.2.1.3 Disadvantages:\n\nImpact of Sequencing Depth and Gene Length:\n\n\nCount data is influenced by sequencing depth and gene length, necessitating standardization when comparing expression levels between different samples or genes.\n\n\nZero Inflation:\n\n\nFor lowly expressed genes, count data may exhibit zero inflation, where counts are predominantly zero. Specialized statistical methods are required to address this issue.\n\n\nResource-Intensive:\n\n\nHandling raw count data can demand significant computational resources and storage space, particularly for large-scale RNA-seq datasets.\n\nIn summary, count data plays a pivotal role in RNA-seq data analysis but typically requires further standardization and analysis to derive meaningful results. It is suitable for use with RNA-seq data types, particularly for gene expression analysis and differential expression analysis.\n\n\n\n2.2.2 RPKM\nRPKM (Reads Per Kilobase of transcript per Million mapped reads) is a method used for quantifying gene expression. This technique overcomes two major barriers: the differences in sequencing depth between samples and the comparison of genes of different lengths. Below is a deeper analysis of the concept, calculation, and application of RPKM, as well as some of its limitations.\n\n2.2.2.1 Principle and Calculation of RPKM:\n\nPrinciple:\n\n\nThe RPKM method corrects the read data in sequencing experiments, making it unaffected by sequencing depth and gene length differences, thereby allowing for a more accurate comparison of gene expression levels under different conditions.\n\n\nCalculation Formula: \\[\nRPKM = \\frac{10^9 \\times C}{N \\times L}\n\\]\nWhere:\n\n\nC is the read count for a specific gene.\nN is the total number of mapped reads in the sequencing experiment.\nL is the transcript length (gene length in base pairs).\nThe \\(\\boldsymbol{10^9}\\) in the formula is a standardization factor used to adjust the units, making the results more comprehensible.\n\n\n\n2.2.2.2 Application Scenarios:\n\nTranscriptomic Studies:\n\n\nIn transcriptome sequencing (RNA-seq), researchers often use RPKM to quantify gene expression, especially when comparing samples from different species, different tissues, or under different treatment conditions.\n\n\nQuantitative Studies of Gene Expression:\n\n\nRPKM provides a way to standardize gene expression data, allowing data obtained from different experiments or under different conditions to be compared.\n\n\n\n\n2.2.3 Advantages:\n\nCorrection for Gene Length:\n\n\nRPKM takes into account the length of the genes, allowing for a fair comparison of expression levels between long and short genes, resolving the issue of read count bias. - Normalization for Sequencing Depth:\n\n\nBy standardizing the total mapped reads, RPKM allows researchers to compare data from different sequencing experiments.\n\n\n2.2.3.1 Challenges:\n\nBias in Low-Abundance Transcripts:\n\n\nRPKM may overestimate the expression levels for genes with low expression because their expression could be amplified due to statistical fluctuations or limitations in sequencing depth.\n\n\nNo Correction for Technical Variations:\n\n\nRPKM does not correct for technical biases that may occur during library preparation or sequencing, and additional statistical methods may be required to correct these biases.\n\n\nNot Suitable for Transcript Diversity:\n\n\nIf a gene has multiple isoforms, RPKM calculation may not reflect the true expression status of each transcript variant.\n\nTherefore, while RPKM is an important tool in RNA-seq data analysis, researchers need to consider its limitations when using it and consider employing other complementary methods, such as TPM (Transcripts Per Million) or more advanced quantification methods like model-based methods (e.g., DESeq2 or edgeR), which can handle differences and variations in data under different samples and conditions more effectively.\n\n\n\n2.2.4 FPKM\nFPKM (Fragments Per Kilobase of transcript, per Million mapped fragments) is an enhancement over RPKM, accounting for the number of sequenced fragments instead of just read counts. This modification is crucial, particularly when a single read might encompass multiple fragments due to events like “split reads” or “spliced reads” in sequencing data.\n\n2.2.4.1 FPKM Calculation:\n\nThe formula for calculating FPKM is: \\[\nFPKM = \\frac{\\text{Number of fragments mapped to a gene}}{(\\frac{\\text{Total mapped fragments}}{1,000,000}) \\times (\\frac{\\text{Length of the gene}}{1,000})}\n\\]\nWhere:\n\n\n“Fragment count of gene” refers to the number of fragments for a specific gene.\n“Gene length in kilobases” is the measurement of the gene length, using kilobases (thousands of base pairs) as the unit.\n“Total mapped fragments in millions” represents the summation of all fragments aligned with the reference genome, expressed in millions.\n\n\n\n2.2.4.2 Suitability:\nFPKM is utilized in situations similar to RPKM, primarily in RNA-seq data analysis, especially when comparing expression levels across genes or between different samples. FPKM allows a more equitable comparison of gene expression by taking into account both gene length and sequencing depth.\n\n\n2.2.4.3 Advantages:\n\nRecognizes gene length, making it suitable for comparing expression levels across genes of diverse lengths.By normalizing per million mapped fragments, FPKM enables more fair comparisons between different samples.\n\n\n\n2.2.4.4 Disadvantages:\n\nIt may misrepresent low-abundance genes, as the total number of mapped fragments in the denominator could lead to inflated FPKM values for these genes.It doesn’t account for potential biases, such as discrepancies in sequencing depth, necessitating further adjustments.\n\n\n\n2.2.4.5 RPKM vs. FPKM:\nThough they appear similar, the necessity for FPKM in addition to RPKM comes from their unique applications and methods of calculation.\n\nDifferences:\nCalculation Basis:\n\n\nWhile RPKM normalizes gene expression levels based on read counts, gene length, and total reads, FPKM does so using fragment counts. This approach is essential for instances where a single read may correspond to multiple fragments.\n\n\nReads vs. Fragments:\n\n\nRPKM, the earlier introduced method, accounts for read counts. FPKM, an advancement over RPKM, considers fragment counts, which is vital for scenarios involving “split reads” or “spliced reads.”\n\n\nNomenclature:\n\n\nRPKM (Reads Per Kilobase of transcript, per Million mapped reads) emphasizes normalization using read counts, whereas FPKM highlights normalization based on fragment counts.\n\n\n\n2.2.4.6 Why FPKM?\n\n\nRPKM is tailored for single-end sequencing, whereas FPKM is more applicable for paired-end RNA-seq because it takes into account that two reads can map to a single fragment, thus avoiding duplication in counting.\nFPKM is generally preferred over RPKM as it offers more precision by including fragment counts, which is particularly important for genes undergoing splicing events.\n\n\n\n\n2.2.4.7 Choosing Between RPKM and FPKM:\nWhile FPKM is generally a better choice due to its enhanced accuracy, the advent of more modern methods like TPM (Transcripts Per Million) has overshadowed both RPKM and FPKM in RNA-seq data analysis. TPM normalizes expression levels based on every million mapped transcripts and is not influenced by gene length or sequencing depth, providing a more reliable reflection of relative expression levels.\n\n\n\n2.2.5 TPM\nTPM (Transcripts Per Million) is an accurate method for measuring gene expression levels, capable of eliminating the effects of sequencing depth and transcript length differences between various samples.\nTo calculate TPM, we first need to obtain the normalized read counts for each transcript, which are then standardized per million transcripts. The steps are as follows:\nCalculate the read counts for each transcript, considering the effective length of the transcript (i.e., excluding the length of non-coding regions).\nCompute the ratio of each transcript’s read count to its effective length, then multiply this ratio by a normalization factor to enable comparisons between samples.\n\n2.2.5.1 TPM calculation formula is as follows:\n\\[\nTPM_i = \\left( \\frac{x_i}{l_i} \\right) \\left( \\frac{1}{\\sum_j \\frac{x_j}{l_j}} \\right) 10^6\n\\]\n\n\n2.2.5.2 Where:\n\n\\(\\boldsymbol{x_i}\\) represents the read count of a specific transcript.\n\\(\\boldsymbol{l_i}\\) is the effective length of the transcript (in kilobases).\nSubscripts \\(\\boldsymbol{i}\\) and \\(\\boldsymbol{j}\\) denote different transcripts.\n\\(\\boldsymbol{\\sum_j \\frac{x_j}{l_j}}\\) is the sum of all transcript read counts ratios to their effective lengths.\n\n\n\n2.2.5.3 The main differences between TPM and RPKM/FPKM:\n\nCalculation method:\n\n\nWith TPM, the expression level of each transcript is first normalized to the length of the transcript, then standardized to the total transcript expression in the sample. In contrast, RPKM/FPKM directly utilize the read counts of transcripts or fragments, normalizing based on transcript length and total read counts.\n\n\nNormalization target:\n\n\nAfter calculating TPM, the total of the TPM values for all transcripts will be 1,000,000, facilitating comparisons between different samples. The total for RPKM/FPKM is not consistent, as they are based on read counts.\n\n\nImpact of gene length:\n\n\nTPM normalizes the effect of gene length on expression level calculations by considering transcript length, making comparisons between transcripts of varying lengths more equitable. Although RPKM/FPKM also standardize based on length, they do not entirely eliminate the influence of gene length when comparing between samples.\n\n\n\n2.2.5.4 The preference for TPM is primarily based on the following reasons:\n\nAccuracy:\n\n\nTPM more accurately reflects the actual expression levels of transcripts, without biases due to differences in sequencing depth or gene length between samples.\n\n\nComparability:\n\n\nTPM values, after standardization, allow for direct comparisons of transcript expression levels between different samples and experiments.\n\n\nUniversality:\n\n\nThe TPM calculation method is suitable for various transcriptomic studies, including gene expression quantification, differential expression analysis, and more.\n\nIn summary, while RPKM/FPKM remain useful in certain contexts, TPM is more widely accepted and utilized in modern transcriptomic analyses due to its accuracy and comparability.\n\n\n\n2.2.6 CPM\nCPM (Counts Per Million) is another prevalent normalization method for assessing gene or transcript expression levels, alongside other techniques such as RPKM, FPKM, and TPM. The principle behind CPM is to standardize the number of times a gene or transcript is measured (counts), allowing for the comparison of expression levels across different genes or transcripts while accounting for the total number of measurements. By normalizing each gene or transcript’s expression levels to per million measurements, CPM minimizes the impact of sequencing depth and differences between samples.\nThe calculation formula for CPM is as follows: \\[\nCPM = \\frac{\\text{Counts of gene/transcript} \\times 10^6}{\\sum (\\text{Counts of all genes/transcripts})}\n\\]\n\n2.2.6.1 Where:\n\n“Counts of gene/transcript” refers to the number of measurements (counts) for a particular gene or transcript.\n“\\(\\boldsymbol{\\sum}\\)” represents the summation symbol, calculating the total counts for all genes or transcripts.\n\n\n\n2.2.6.2 CPM is applicable for:\n\nComparing relative expression levels of different genes or transcripts.\nComparing gene expression levels between samples, particularly when considering variations in sequencing depth and among samples.\n\n\n\n2.2.6.3 Advantages:\n\n\nCPM is a straightforward and intuitive method of normalization, easy to understand and compute.\nIt’s suitable for comparisons between different samples, enabling a fairer assessment of gene expression differences.\n\n\n\n\n2.2.6.4 Disadvantages:\n\n\nCPM may encounter issues with lowly expressed genes because the denominator includes the total counts. For these genes, a smaller denominator might inflate the CPM value, leading to inaccuracies.\nCPM does not account for factors like gene length and sequencing depth, potentially compromising accuracy in certain scenarios.\n\n\nDespite its limitations, CPM stands as a relatively rapid and simplistic normalization technique, fitting for basic RNA-seq data analysis tasks. For instance, during differential analysis, it’s sometimes necessary to eliminate low-expression genes. Here, CPM calculations become relevant, aiding in the exclusion of these genes based on set criteria. For straightforward adjustments of counts, one can utilize the cpm() function within the edgeR package.\n\n\n\n2.2.7 RSEM\nHere, we delve further into the core principles and computational methods of RSEM (RNA-Seq by Expectation-Maximization). RSEM stands as a powerful tool for accurately estimating the expression levels of genes or transcripts. It is particularly proficient in handling RNA sequencing data, resolving issues of multimapping and accounting for sequence mismatches. At the heart of RSEM is the Expectation-Maximization (EM) algorithm, a statistical technique used for estimating the parameters of a probability model, especially in cases where the model involves latent variables that are not directly observable. By maximizing the log-likelihood function of the data, RSEM enables more accurate inference of the relative abundance of transcripts.\n\n2.2.7.1 The computation process of RSEM:\n\n1.E-step (Expectation):\n\n\nUtilizing the current estimates of the parameters, RSEM calculates the expected value of each transcript being sequenced. This step takes into account the sequencing error rate and the multimapping of reads.\n\n\n2.M-step (Maximization):\n\n\nBased on the data generated in the E-step, RSEM updates the parameter estimates to maximize the likelihood of the read data.\n\nGiven the complexity of the calculations and models involved in RSEM, specialized software tools are usually employed for execution. These tools have built-in necessary mathematical models and numerical optimization methods, relieving the user from delving into the intricate details behind them.\n\n\n2.2.7.2 Scope of Application:\n\n\nHigh-precision estimation of transcript abundance, suitable for complex samples with a large number of genes and transcripts, and high heterogeneity.\nQuantitative comparison of gene expression differences between different samples and studying variations between isoforms of transcripts.\n\n\n\n\n2.2.7.3 Advantages:\n\n\nRSEM accurately handles multimapped reads, offering a more precise expression level estimate compared to traditional methods.\nThrough sophisticated statistical models, RSEM fully considers the uncertainties of reads and potential errors during the sequencing process.\n\n\n\n\n2.2.7.4 Disadvantages:\n\n\nThe RSEM calculation process is resource-intensive and time-consuming, potentially unsuitable for large-scale samples or rapid analysis workflows.\nIt requires high-quality data input and is sensitive to low-quality or highly biased data.\n\n\nIn practice, there’s an essential distinction between RSEM’s “expected_count” and the conventional raw “count.” The “expected_count” in RSEM is a statistically estimated floating-point number considering the uncertainties of read assignment, while traditional “count” is merely an integer read count based on raw sequencing data. This difference enables RSEM to provide more in-depth and accurate information on transcript abundance in certain scenarios."
  },
  {
    "objectID": "Data Source and Introduction.html#tcga-count-data",
    "href": "Data Source and Introduction.html#tcga-count-data",
    "title": "1  Data Source and Introduction",
    "section": "4.1 TCGA Count Data",
    "text": "4.1 TCGA Count Data\n\n\nSTAR Alignment and Counting: The primary counting data in TCGA is generated by STAR, which provides gene ID, unstranded, and stranded counts data following alignment.\nMulti-dimensional Data Collection: TCGA collects many types of data including molecular characterization data for over 20,000 tumor and normal samples, contributing to the count data."
  },
  {
    "objectID": "Data Source and Introduction.html#gtex-expected-count-data",
    "href": "Data Source and Introduction.html#gtex-expected-count-data",
    "title": "1  Data Source and Introduction",
    "section": "4.2 GTEx Expected Count Data",
    "text": "4.2 GTEx Expected Count Data\n\n\nPipeline Components for RNA-seq Alignment, Quantification: GTEx utilizes a pipeline for RNA-seq alignment, quantification, and quality control among other analysis tasks, which lead to the generation of expected count data.\nAlignment and Expression Quantification: GTEx RNA-seq pipeline involves alignment (STAR), QC (RNA-SeQC), and expression quantification (RSEM & RNA-SeQC) for generating expected count data.\n76-base, Paired-end Illumina TruSeq RNA Protocol: GTEx uses a 76-base, paired-end Illumina TruSeq RNA protocol, averaging around 50 million aligned reads per sample for RNA sequencing."
  },
  {
    "objectID": "Extract Rawdata from TCGA and GTEX.html#library-package",
    "href": "Extract Rawdata from TCGA and GTEX.html#library-package",
    "title": "2  Extract Rawdata from TCGA and GTEX",
    "section": "2.1 Library Package",
    "text": "2.1 Library Package\n\nlibrary(TransProR)\n\nRegistered S3 methods overwritten by 'ggalt':\n  method                  from   \n  grid.draw.absoluteGrob  ggplot2\n  grobHeight.absoluteGrob ggplot2\n  grobWidth.absoluteGrob  ggplot2\n  grobX.absoluteGrob      ggplot2\n  grobY.absoluteGrob      ggplot2\n\n\n            _______ _____            _   _  _____ _____  _____   ____  _____  \n           |__   __|  __ \\     /\\   | \\ | |/ ____|  __ \\|  __ \\ / __ \\|  __ \\ \n              | |  | |__) |   /  \\  |  \\| | (___ | |__) | |__) | |  | | |__) |\n              | |  |  _  /   / /\\ \\ | . ` |\\___ \\|  ___/|  _  /| |  | |  _  / \n              | |  | | \\ \\  / ____ \\| |\\  |____) | |    | | \\ \\| |__| | | \\ \\ \n              |_|  |_|  \\_\\/_/    \\_\\_| \\_|_____/|_|    |_|  \\_\\\\____/|_|  \\_\\\n                                                                   \n                                                                   \n                                                            \n                                                            \n         _    _ _______       _____ _____ _______     _________     _______ _____ _____ \n    /\\  | |  | |__   __|     / ____/ ____/ ____\\ \\   / /  __ \\ \\   / / ____/ ____/ ____|\n   /  \\ | |  | |  | |       | (___| (___| (___  \\ \\_/ /| |  | \\ \\_/ / (___| (___| (___  \n  / /\\ \\| |  | |  | |        \\___ \\\\___ \\\\___ \\  \\   / | |  | |\\   / \\___ \\\\___ \\\\___ \\ \n / ____ \\ |__| |  | |        ____) |___) |___) |  | |  | |__| | | |  ____) |___) |___) |\n/_/    \\_\\____/   |_|       |_____/_____/_____/   |_|  |_____/  |_| |_____/_____/_____/ \n                                                                                        \n                                                                                        \n\nprint(paste(\"TransProR version:\", packageVersion(\"TransProR\")))\n\n[1] \"TransProR version: 0.0.1\"\n\nlibrary(grid)"
  },
  {
    "objectID": "Extract Rawdata from TCGA and GTEX.html#seek-gtex-organ",
    "href": "Extract Rawdata from TCGA and GTEX.html#seek-gtex-organ",
    "title": "2  Extract Rawdata from TCGA and GTEX",
    "section": "2.2 Seek Gtex Organ",
    "text": "2.2 Seek Gtex Organ\n\nSeekGtexOrgan &lt;- seek_gtex_organ(path = \"../test_TransProR/download_data/GTEX_phenotype\")\nprint(SeekGtexOrgan)\n\n\n &lt;not provided&gt;  Adipose Tissue   Adrenal Gland         Bladder           Blood \n              5             621             161              13             595 \n   Blood Vessel     Bone Marrow           Brain          Breast    Cervix Uteri \n            753             102            1426             221              11 \n          Colon       Esophagus  Fallopian Tube           Heart          Kidney \n            384             805               7             493              38 \n          Liver            Lung          Muscle           Nerve           Ovary \n            141             381             478             335             112 \n       Pancreas       Pituitary        Prostate  Salivary Gland            Skin \n            203             126             122              71             977 \nSmall Intestine          Spleen         Stomach          Testis         Thyroid \n            106             121             209             208             366 \n         Uterus          Vagina \n             93              99"
  },
  {
    "objectID": "Extract Rawdata from TCGA and GTEX.html#get-tcga-exp",
    "href": "Extract Rawdata from TCGA and GTEX.html#get-tcga-exp",
    "title": "2  Extract Rawdata from TCGA and GTEX",
    "section": "2.3 Get Tcga Exp",
    "text": "2.3 Get Tcga Exp\n\n2.3.1 SKCM-Skin-TCGA\n\nSKCM_exp &lt;- get_tcga_exp(\n  counts_file_path = \"../test_TransProR/download_data/TCGA-SKCM.htseq_counts.tsv\", \n  gene_probes_file_path = \"../test_TransProR/download_data/TCGA_gencode.v22.annotation.gene.probeMap\",\n  phenotype_file_path = \"../test_TransProR/download_data/TCGA-skcm.GDC_phenotype.tsv\", \n  output_file_path = '../test_TransProR/generated_data1/SKCM_Skin_TCGA_exp.rds'\n)\n\nNumber of 'Primary Tumor' or 'Metastatic' samples:  474 \nNumber of 'normal' samples: 3 \n\nhead(SKCM_exp[[\"tumor_tcga_data\"]])[1:5, 1:5]\n\n         TCGA-D9-A4Z2-01A TCGA-ER-A2NH-06A TCGA-BF-A5EO-01A TCGA-D9-A6EA-06A\nTSPAN6          12.107871        10.504819        10.055282        10.642052\nTNMD             0.000000         1.584963         0.000000         1.584963\nDPM1            10.992938        10.378295         8.945444        11.236014\nSCYL3           10.126704         9.121534         7.930737         9.562242\nC1orf112         9.861087         8.629357         7.918863         9.221587\n         TCGA-D9-A4Z3-01A\nTSPAN6          10.516685\nTNMD             0.000000\nDPM1             9.981567\nSCYL3            8.754888\nC1orf112         8.854868\n\nhead(SKCM_exp[[\"normal_tcga_data\"]], n = 10) # Because there is only one column.\n\n         TCGA-GN-A4U8-11A\nTSPAN6           8.344296\nTNMD             1.000000\nDPM1            11.171177\nSCYL3           10.159871\nC1orf112         9.250298\nFGR             11.024447\nCFH             11.387479\nFUCA2           11.595724\nGCLC            10.848623\nNFYA            11.457381\n\n\n\n\n2.3.2 BRCA-Breast-TCGA\n\nBRCA_exp &lt;- get_tcga_exp(\n  counts_file_path = \"../test_TransProR/download_data/TCGA-BRCA.htseq_counts.tsv\", \n  gene_probes_file_path = \"../test_TransProR/download_data/TCGA_gencode.v22.annotation.gene.probeMap\",\n  phenotype_file_path = \"../test_TransProR/download_data/TCGA-BRCA.GDC_phenotype.tsv\", \n  output_file_path = '../test_TransProR/generated_data1/BRCA_Breast_TCGA_exp.rds'\n)\n\nNumber of 'Primary Tumor' or 'Metastatic' samples:  1121 \nNumber of 'normal' samples: 162 \n\nhead(BRCA_exp[[\"tumor_tcga_data\"]])[1:5, 1:5]\n\n         TCGA-A2-A0CY-01A TCGA-B6-A40B-01A TCGA-AO-A0J8-01A TCGA-A8-A08J-01A\nTSPAN6           11.62890        11.924813        11.921469        11.209453\nTNMD              0.00000         5.392317         5.087463         3.000000\nDPM1             10.29921        11.054604        11.068106        12.284246\nSCYL3            10.13443        11.045077        12.086800        11.473706\nC1orf112          8.80090         9.413628        10.357552         8.988685\n         TCGA-E2-A14N-01A\nTSPAN6          11.400346\nTNMD             3.584963\nDPM1            11.253257\nSCYL3            9.873444\nC1orf112        10.255029\n\nhead(BRCA_exp[[\"normal_tcga_data\"]])[1:5, 1:5]\n\n         TCGA-BH-A1F0-11B TCGA-BH-A0BZ-11A TCGA-AC-A2FM-11B TCGA-BH-A0HA-11A\nTSPAN6          12.782998        12.245256        11.983706        12.296916\nTNMD             9.766529        12.024101         8.693487         7.882643\nDPM1            11.373409        10.696098        10.894818        10.788718\nSCYL3           10.772315        10.560333         9.539159        11.275543\nC1orf112         8.700440         8.299208         7.721099         8.724514\n         TCGA-BH-A1FU-11A\nTSPAN6          11.288289\nTNMD             6.942515\nDPM1            10.023754\nSCYL3           10.309476\nC1orf112         8.290019\n\n\n\n\n2.3.3 LGG-Brain-TCGA\n\nLGG_exp &lt;- get_tcga_exp(\n  counts_file_path = \"../test_TransProR/download_data/TCGA-LGG.htseq_counts.tsv\", \n  gene_probes_file_path = \"../test_TransProR/download_data/TCGA_gencode.v22.annotation.gene.probeMap\",\n  phenotype_file_path = \"../test_TransProR/download_data/TCGA-LGG.GDC_phenotype.tsv\", \n  output_file_path = '../test_TransProR/generated_data1/LGG_Brain_TCGA_exp.rds'\n)\n\nNumber of 'Primary Tumor' or 'Metastatic' samples:  516 \nNumber of 'normal' samples: 2 \n\nhead(LGG_exp[[\"tumor_tcga_data\"]])[1:5, 1:5]\n\n         TCGA-VM-A8C8-01A TCGA-VV-A829-01A TCGA-DH-5141-01A TCGA-RY-A840-01A\nTSPAN6          10.797662        11.439311        11.856815        11.157978\nTNMD             0.000000         1.584963         4.247928         1.000000\nDPM1            10.036174        10.108524        10.130571         9.896332\nSCYL3            8.810572         9.566054         9.030667         9.147205\nC1orf112         7.607330         8.118941         6.845490         7.285402\n         TCGA-DB-A64V-01A\nTSPAN6          11.401946\nTNMD             2.000000\nDPM1            10.193525\nSCYL3            9.105909\nC1orf112         7.584963\n\nLGG_exp[[\"normal_tcga_data\"]]\n\ndata frame with 0 columns and 58387 rows\n\n\n\n\n2.3.4 THCA-Thyroid-TCGA\n\nTHCA_exp &lt;- get_tcga_exp(\n  counts_file_path = \"../test_TransProR/download_data/TCGA-THCA.htseq_counts.tsv\", \n  gene_probes_file_path = \"../test_TransProR/download_data/TCGA_gencode.v22.annotation.gene.probeMap\",\n  phenotype_file_path = \"../test_TransProR/download_data/TCGA-THCA.GDC_phenotype.tsv\", \n  output_file_path = '../test_TransProR/generated_data1/THCA_Thyroid_TCGA_exp.rds'\n)\n\nNumber of 'Primary Tumor' or 'Metastatic' samples:  515 \nNumber of 'normal' samples: 100 \n\nhead(THCA_exp[[\"tumor_tcga_data\"]])[1:5, 1:5]\n\n         TCGA-BJ-A28W-01A TCGA-EM-A1CT-01A TCGA-EL-A4JZ-01A TCGA-EL-A3CT-01A\nTSPAN6          10.029287        10.314017        11.273796        12.054943\nTNMD             2.000000         0.000000         1.000000         3.000000\nDPM1            10.148477         9.485829        10.704768        10.770664\nSCYL3            8.820179         9.287712         9.594325         9.092757\nC1orf112         6.954196         7.383704         7.820179         7.629357\n         TCGA-ET-A2MY-01A\nTSPAN6          11.271463\nTNMD             0.000000\nDPM1            10.754052\nSCYL3           10.034799\nC1orf112         7.912889\n\nhead(THCA_exp[[\"normal_tcga_data\"]])[1:5, 1:5]\n\n         TCGA-BJ-A28W-11A TCGA-EM-A1CT-11A TCGA-EL-A3MX-11A TCGA-DO-A1JZ-11A\nTSPAN6           9.946906        12.236612        12.162706        11.880349\nTNMD             1.000000         3.000000         3.459432         2.807355\nDPM1             9.923327        11.420487        11.103943        10.531381\nSCYL3            8.005625        10.169925        10.740624         9.812177\nC1orf112         5.554589         7.768184         8.022368         6.977280\n         TCGA-EL-A3TA-11A\nTSPAN6          12.423116\nTNMD             3.169925\nDPM1            11.236612\nSCYL3           10.586840\nC1orf112         7.800900"
  },
  {
    "objectID": "Extract Rawdata from TCGA and GTEX.html#get-gtex-exp",
    "href": "Extract Rawdata from TCGA and GTEX.html#get-gtex-exp",
    "title": "2  Extract Rawdata from TCGA and GTEX",
    "section": "2.4 Get Gtex Exp",
    "text": "2.4 Get Gtex Exp\n\n2.4.1 Skin-SKCM-Gtex\n\nSkin_SKCM_gtex &lt;- get_gtex_exp(\n  organ_specific = \"Skin\",\n  file_path = \"../test_TransProR/download_data/gtex_gene_expected_count\", \n  probe_map_path = \"../test_TransProR/download_data/gtex_probeMap_gencode.v23.annotation.gene.probemap\",\n  pheno_path = \"../test_TransProR/download_data/GTEX_phenotype\", \n  output_path = '../test_TransProR/generated_data1/Skin_SKCM_Gtex.rds'\n)\n\nNumber of samples for Skin : 977 \n\nhead(Skin_SKCM_gtex)[1:5, 1:5]\n\n         GTEX-111CU-1126-SM-5EGIM GTEX-111CU-1926-SM-5GZYZ\nTSPAN6                     7.9715                   9.6935\nTNMD                       3.3219                   6.4757\nDPM1                       8.5078                   9.3619\nSCYL3                      8.1741                   9.6454\nC1orf112                   6.1930                   8.0506\n         GTEX-111FC-0126-SM-5N9DL GTEX-111FC-2526-SM-5GZXU\nTSPAN6                     8.0821                   8.8329\nTNMD                       6.7944                   7.4838\nDPM1                       9.6865                   9.0580\nSCYL3                     10.0769                   9.2662\nC1orf112                   7.9006                   7.5869\n         GTEX-111VG-0008-SM-5Q5BG\nTSPAN6                     8.7649\nTNMD                       0.0000\nDPM1                      10.0126\nSCYL3                      7.9960\nC1orf112                   8.1122\n\n\n\n\n2.4.2 Brain-LGG-Gtex\n\nBrain_LGG_gtex &lt;- get_gtex_exp(\n  organ_specific = \"Brain\",\n  file_path = \"../test_TransProR/download_data/gtex_gene_expected_count\", \n  probe_map_path = \"../test_TransProR/download_data/gtex_probeMap_gencode.v23.annotation.gene.probemap\",\n  pheno_path = \"../test_TransProR/download_data/GTEX_phenotype\", \n  output_path = '../test_TransProR/generated_data1/Brain_LGG_Gtex.rds'\n)\n\nNumber of samples for Brain : 1426 \n\nhead(Brain_LGG_gtex)[1:5, 1:5]\n\n         GTEX-1117F-3226-SM-5N9CT GTEX-111FC-3126-SM-5GZZ2\nTSPAN6                     9.3354                   7.9189\nTNMD                       2.0000                   2.5850\nDPM1                       8.6475                   9.0471\nSCYL3                      7.5673                   8.7225\nC1orf112                   6.8245                   7.3181\n         GTEX-111FC-3326-SM-5GZYV GTEX-1128S-2726-SM-5H12C\nTSPAN6                     6.9307                   8.0389\nTNMD                       0.0000                   2.0000\nDPM1                       8.4757                   8.8392\nSCYL3                      8.6133                   8.0100\nC1orf112                   8.2355                   6.5732\n         GTEX-1128S-2826-SM-5N9DI\nTSPAN6                     5.8580\nTNMD                       0.0000\nDPM1                       8.2574\nSCYL3                      7.7710\nC1orf112                   7.9459\n\n\n\n\n2.4.3 Breast-BRCA-Gtex\n\nBreast_BRCA_gtex &lt;- get_gtex_exp(\n  organ_specific = \"Breast\",\n  file_path = \"../test_TransProR/download_data/gtex_gene_expected_count\", \n  probe_map_path = \"../test_TransProR/download_data/gtex_probeMap_gencode.v23.annotation.gene.probemap\",\n  pheno_path = \"../test_TransProR/download_data/GTEX_phenotype\", \n  output_path = '../test_TransProR/generated_data1/Breast_BRCA_Gtex.rds'\n)\n\nNumber of samples for Breast : 221 \n\nhead(Breast_BRCA_gtex)[1:5, 1:5]\n\n         GTEX-1117F-2826-SM-5GZXL GTEX-111YS-1926-SM-5GICC\nTSPAN6                    11.1799                  11.3761\nTNMD                       9.7465                   7.2854\nDPM1                       9.3015                   9.7879\nSCYL3                      9.0717                  10.1061\nC1orf112                   7.8004                   8.3124\n         GTEX-117XS-1926-SM-5GICO GTEX-117YX-1426-SM-5H12H\nTSPAN6                    11.9826                  10.2842\nTNMD                      10.3805                   6.9307\nDPM1                       9.9099                   9.4367\nSCYL3                      9.4578                   8.9093\nC1orf112                   6.9977                   7.7427\n         GTEX-1192X-2326-SM-5987X\nTSPAN6                    11.0505\nTNMD                       8.1849\nDPM1                       9.9614\nSCYL3                     10.0083\nC1orf112                   8.7283\n\n\n\n\n2.4.4 Thyroid-THCA-Gtex\n\nThyroid_THCA_gtex &lt;- get_gtex_exp(\n  organ_specific = \"Thyroid\",\n  file_path = \"../test_TransProR/download_data/gtex_gene_expected_count\", \n  probe_map_path = \"../test_TransProR/download_data/gtex_probeMap_gencode.v23.annotation.gene.probemap\",\n  pheno_path = \"../test_TransProR/download_data/GTEX_phenotype\", \n  output_path = '../test_TransProR/generated_data1/Thyroid_THCA_Gtex.rds'\n)\n\nNumber of samples for Thyroid : 366 \n\nhead(Thyroid_THCA_gtex)[1:5, 1:5]\n\n         GTEX-111CU-0226-SM-5GZXC GTEX-111FC-1026-SM-5GZX1\nTSPAN6                    10.0553                  10.0701\nTNMD                       2.0000                   4.3923\nDPM1                      10.0993                   9.5774\nSCYL3                      9.6425                   9.5058\nC1orf112                   7.4736                   7.6001\n         GTEX-111VG-0526-SM-5N9BW GTEX-111YS-0726-SM-5GZY8\nTSPAN6                     8.9658                   9.1674\nTNMD                       2.0000                   3.0000\nDPM1                       9.2668                   9.3859\nSCYL3                      8.9591                   9.2350\nC1orf112                   7.6817                   7.5346\n         GTEX-1122O-0226-SM-5N9DA\nTSPAN6                     9.4533\nTNMD                       2.8074\nDPM1                       9.2668\nSCYL3                      9.3993\nC1orf112                   7.1872"
  },
  {
    "objectID": "Remove Batch Effect.html#different-tumor-types-in-tcga",
    "href": "Remove Batch Effect.html#different-tumor-types-in-tcga",
    "title": "3  Remove Batch Effect",
    "section": "3.1 Different tumor types in TCGA",
    "text": "3.1 Different tumor types in TCGA\nPlease note: The TumorHistologicalTypes/NormalHistologicalTypes classifications are specific to the data in the TCGA database.\n\n3.1.1 SKCM_combat_count\n\nSKCM_combat_count &lt;- combat_tumor(\n    tumor_data_path = \"../test_TransProR/generated_data1/SKCM_Skin_TCGA_exp_tumor.rds\", \n    CombatTumor_output_path = \"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\",\n    auto_mode = T,\n    default_input = \"01,06\"\n)\n\nTumorHistologicalTypes\n 01  06  07 \n103 367   1 \nFound 2 batches\nUsing null model in ComBat-seq.\nAdjusting for 0 covariate(s) or covariate level(s)\nEstimating dispersions\nFitting the GLM model\nShrinkage off - using GLM estimates for parameters\nAdjusting the data\n\nhead(SKCM_combat_count)[1:5, 1:5]\n\n         TCGA-D9-A4Z2-01A TCGA-ER-A2NH-06A TCGA-BF-A5EO-01A TCGA-D9-A6EA-06A\nTSPAN6               5707             1447             1049             1636\nTNMD                    0                2                0                2\nDPM1                 2201             1296              624             2482\nSCYL3                1261              524              307              714\nC1orf112             1107              373              295              564\n         TCGA-D9-A4Z3-01A\nTSPAN6               1511\nTNMD                    0\nDPM1                 1180\nSCYL3                 522\nC1orf112              557\n\n\n\n\n3.1.2 BRCA_combat_count\n\nBRCA_combat_count &lt;- combat_tumor(\n    tumor_data_path = \"../test_TransProR/generated_data1/BRCA_Breast_TCGA_exp_tumor.rds\", \n    CombatTumor_output_path = \"../test_TransProR/generated_data1/removebatch_BRCA_Breast_TCGA_exp_tumor.rds\",\n    auto_mode = T,\n    default_input = \"01\"\n)\n\nTumorHistologicalTypes\n  01   06 \n1097    7 \n\nhead(BRCA_combat_count)[1:5, 1:5]\n\n         TCGA-A2-A0CY-01A TCGA-B6-A40B-01A TCGA-AO-A0J8-01A TCGA-A8-A08J-01A\nTSPAN6               3166             3886             3878             2366\nTNMD                    0               41               32                7\nDPM1                 1259             2126             2146             4987\nSCYL3                1123             2112             4348             2843\nC1orf112              445              681             1311              506\n         TCGA-E2-A14N-01A\nTSPAN6               2701\nTNMD                   11\nDPM1                 2439\nSCYL3                 936\nC1orf112             1221\n\n\n\n\n3.1.3 LGG_combat_count\n\nLGG_combat_count &lt;- combat_tumor(\n    tumor_data_path = \"../test_TransProR/generated_data1/LGG_Brain_TCGA_exp_tumor.rds\", \n    CombatTumor_output_path = \"../test_TransProR/generated_data1/removebatch_LGG_Brain_TCGA_exp_tumor.rds\",\n    auto_mode = T,\n    default_input = \"01\"\n)\n\nTumorHistologicalTypes\n 01 \n511 \n\nhead(LGG_combat_count)[1:5, 1:5]\n\n         TCGA-VM-A8C8-01A TCGA-VV-A829-01A TCGA-DH-5141-01A TCGA-RY-A840-01A\nTSPAN6               1779             2776             3708             2284\nTNMD                    0                2               17                1\nDPM1                 1049             1102             1119              951\nSCYL3                 447              757              522              565\nC1orf112              193              276              113              155\n         TCGA-DB-A64V-01A\nTSPAN6               2704\nTNMD                    3\nDPM1                 1170\nSCYL3                 550\nC1orf112              191\n\n\n\n\n3.1.4 THCA_combat_count\n\nTHCA_combat_count&lt;-combat_tumor(\n    tumor_data_path = \"../test_TransProR/generated_data1/THCA_Thyroid_TCGA_exp_tumor.rds\", \n    CombatTumor_output_path = \"../test_TransProR/generated_data1/removebatch_THCA_Thyroid_TCGA_exp_tumor.rds\",\n    auto_mode = T,\n    default_input = \"01\"\n)\n\nTumorHistologicalTypes\n 01  06 \n502   8 \n\nhead(THCA_combat_count)[1:5, 1:5]\n\n         TCGA-BJ-A28W-01A TCGA-EM-A1CT-01A TCGA-EL-A4JZ-01A TCGA-EL-A3CT-01A\nTSPAN6               1044             1271             2474             4254\nTNMD                    3                0                1                7\nDPM1                 1134              715             1668             1746\nSCYL3                 451              623              772              545\nC1orf112              122              165              225              196\n         TCGA-ET-A2MY-01A\nTSPAN6               2471\nTNMD                    0\nDPM1                 1726\nSCYL3                1048\nC1orf112              240"
  },
  {
    "objectID": "Remove Batch Effect.html#gtex-and-tgcas-normal-tissue",
    "href": "Remove Batch Effect.html#gtex-and-tgcas-normal-tissue",
    "title": "3  Remove Batch Effect",
    "section": "3.2 GTEX and TGCA’s normal tissue",
    "text": "3.2 GTEX and TGCA’s normal tissue\n\n3.2.1 SKCM_Skin_Combat_Normal_TCGA_GTEX_count\n\nSKCM_Skin_Combat_Normal_TCGA_GTEX_count &lt;- Combat_Normal(\n    TCGA_normal_data_path = \"../test_TransProR/generated_data1/SKCM_Skin_TCGA_exp_normal.rds\", \n    gtex_data_path = '../test_TransProR/generated_data1/Skin_SKCM_Gtex.rds', \n    CombatNormal_output_path = '../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds',\n    auto_mode = T,\n    default_input = \"skip\"\n)\n\nNormalHistologicalTypes\n11 \n 1 \n\nhead(SKCM_Skin_Combat_Normal_TCGA_GTEX_count)[1:5, 1:5]\n\n         GTEX-111CU-1126-SM-5EGIM GTEX-111CU-1926-SM-5GZYZ\nTSPAN6                        249                      827\nTNMD                            8                       87\nDPM1                          363                      656\nSCYL3                         287                      799\nC1orf112                       72                      264\n         GTEX-111FC-0126-SM-5N9DL GTEX-111FC-2526-SM-5GZXU\nTSPAN6                        269                      455\nTNMD                          109                      177\nDPM1                          822                      532\nSCYL3                        1079                      614\nC1orf112                      237                      191\n         GTEX-111VG-0008-SM-5Q5BG\nTSPAN6                        434\nTNMD                            0\nDPM1                         1031\nSCYL3                         254\nC1orf112                      275\n\n\n\n\n3.2.2 BRCA_Breast_Combat_Normal_TCGA_GTEX_count\n\nBRCA_Breast_Combat_Normal_TCGA_GTEX_count &lt;- Combat_Normal(\n    TCGA_normal_data_path = \"../test_TransProR/generated_data1/BRCA_Breast_TCGA_exp_normal.rds\", \n    gtex_data_path = '../test_TransProR/generated_data1/Breast_BRCA_Gtex.rds', \n    CombatNormal_output_path = '../test_TransProR/generated_data1/removebatch_BRCA_Breast_Normal_TCGA_GTEX_count.rds',\n    auto_mode = T,\n    default_input = \"11\"\n)\n\nNormalHistologicalTypes\n 11 \n113 \nFound 2 batches\nUsing null model in ComBat-seq.\nAdjusting for 0 covariate(s) or covariate level(s)\nEstimating dispersions\nFitting the GLM model\nShrinkage off - using GLM estimates for parameters\nAdjusting the data\n\nhead(BRCA_Breast_Combat_Normal_TCGA_GTEX_count)[1:5, 1:5]\n\n          TCGA-BH-A1F0-11B TCGA-BH-A0BZ-11A TCGA-AC-A2FM-11B TCGA-BH-A0HA-11A\n5_8S_rRNA                0                0                0                0\n5S_rRNA                  0                0                0                0\n7SK                      0                0                0                0\nA1BG                   113               41              246              175\nA1BG-AS1               250              147              381              239\n          TCGA-BH-A1FU-11A\n5_8S_rRNA                0\n5S_rRNA                  0\n7SK                      0\nA1BG                   147\nA1BG-AS1               150\n\n\n\n\n3.2.3 LGG_Brain_Combat_Normal_TCGA_GTEX_count\n\nLGG_Brain_Combat_Normal_TCGA_GTEX_count &lt;- Combat_Normal(\n    TCGA_normal_data_path = \"../test_TransProR/generated_data1/LGG_Brain_TCGA_exp_normal.rds\", \n    gtex_data_path = '../test_TransProR/generated_data1/Brain_LGG_Gtex.rds', \n    CombatNormal_output_path = '../test_TransProR/generated_data1/removebatch_LGG_Brain_Normal_TCGA_GTEX_count.rds',\n    auto_mode = T,\n    default_input = \"skip\"\n)\n\n&lt; table of extent 0 &gt;\n\nhead(LGG_Brain_Combat_Normal_TCGA_GTEX_count)[1:5, 1:5]\n\n         GTEX-1117F-3226-SM-5N9CT GTEX-111FC-3126-SM-5GZZ2\nTSPAN6                        645                      241\nTNMD                            3                        5\nDPM1                          400                      527\nSCYL3                         188                      421\nC1orf112                      112                      158\n         GTEX-111FC-3326-SM-5GZYV GTEX-1128S-2726-SM-5H12C\nTSPAN6                        120                      261\nTNMD                            0                        3\nDPM1                          354                      456\nSCYL3                         390                      256\nC1orf112                      300                       94\n         GTEX-1128S-2826-SM-5N9DI\nTSPAN6                         57\nTNMD                            0\nDPM1                          305\nSCYL3                         217\nC1orf112                      245\n\n\n\n\n3.2.4 THCA_Thyroid_Combat_Normal_TCGA_GTEX_count\n\nTHCA_Thyroid_Combat_Normal_TCGA_GTEX_count &lt;- Combat_Normal(\n    TCGA_normal_data_path = \"../test_TransProR/generated_data1/THCA_Thyroid_TCGA_exp_normal.rds\", \n    gtex_data_path = '../test_TransProR/generated_data1/Thyroid_THCA_Gtex.rds', \n    CombatNormal_output_path = '../test_TransProR/generated_data1/removebatch_THCA_Thyroid_Normal_TCGA_GTEX_count.rds',\n    auto_mode = T,\n    default_input = \"11\"\n)\n\nNormalHistologicalTypes\n11 \n58 \nFound 2 batches\nUsing null model in ComBat-seq.\nAdjusting for 0 covariate(s) or covariate level(s)\nEstimating dispersions\nFitting the GLM model\nShrinkage off - using GLM estimates for parameters\nAdjusting the data\n\nhead(THCA_Thyroid_Combat_Normal_TCGA_GTEX_count)[1:5, 1:5]\n\n          TCGA-BJ-A28W-11A TCGA-EM-A1CT-11A TCGA-EL-A3MX-11A TCGA-DO-A1JZ-11A\n5_8S_rRNA                0                0                0                0\n5S_rRNA                  0                0                0                0\n7SK                      0                0                0                0\nA1BG                   203              233              206              148\nA1BG-AS1               240              323              360              324\n          TCGA-EL-A3TA-11A\n5_8S_rRNA                0\n5S_rRNA                  0\n7SK                      0\nA1BG                   154\nA1BG-AS1               249"
  },
  {
    "objectID": "Select DEGs.html#performing-differential-analysis-using-deseq2",
    "href": "Select DEGs.html#performing-differential-analysis-using-deseq2",
    "title": "4  Select DEGs",
    "section": "4.1 Performing differential analysis using DESeq2",
    "text": "4.1 Performing differential analysis using DESeq2\nDESeq2(Differential Expression using DESeq2)\n\nPrinciple: DESeq2 is based on a negative binomial distribution model, taking into account the discreteness and variability of gene expression data, as well as the impact of library size differences on differential analysis. DESeq2 reduces technical variation between samples through normalization transformations and scaling factors, then estimates the dispersion of gene expression. It employs the negative binomial distribution model to identify differentially expressed genes and corrects for multiple testing issues. DESeq2 is suitable for small sample RNA sequencing data and performs particularly well with a small number of samples, effectively handling inter-sample variability, technical noise, and batch effects.\nInput Data Type: DESeq2 is designed for RNA-seq data and requires count data for each gene. It typically uses raw count matrices without the need for pre-normalization or scaling. DESeq2 requires the input data to be a matrix composed of integers. In addition to importing counts, DESeq2 officially provides a method to directly import txi objects generated by tximport if salmon was used upstream.\n\n\nDEG_deseq2 &lt;- DESeq2_analyze(\n    tumor_file = \"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\", \n    normal_file = '../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds',\n    output_file = '../test_TransProR/Select DEGs/DEG_deseq2.Rdata',\n    logFC = 2.5,\n    p_value = 0.01\n)\n\nGroup Table:\ngroup\nnormal  tumor \n   811    470 \n\n\nconverting counts to integer mode\n\n\nestimating size factors\n\n\nestimating dispersions\n\n\ngene-wise dispersion estimates\n\n\nmean-dispersion relationship\n\n\nfinal dispersion estimates\n\n\nfitting model and testing\n\n\n-- replacing outliers and refitting for 4831 genes\n-- DESeq argument 'minReplicatesForReplace' = 7 \n-- original counts are preserved in counts(dds)\n\n\nestimating dispersions\n\n\nfitting model and testing\n\n\nChange Table:\n\n  down stable     up \n  3824  48356   4199 \n\nhead(DEG_deseq2, 5)\n\n          baseMean log2FoldChange      lfcSE      stat pvalue padj change\nA1BG      134.6084      -2.549682 0.05677219 -44.91075      0    0   down\nA2M     30208.9912       3.251168 0.08394645  38.72907      0    0     up\nAADACL2   801.4538      -8.229956 0.18969649 -43.38486      0    0   down\nAARS2    1153.5493       1.624753 0.03283522  49.48202      0    0 stable\nAARSD1    567.8672      -2.082289 0.02275703 -91.50088      0    0 stable"
  },
  {
    "objectID": "Select DEGs.html#performing-differential-analysis-using-edger",
    "href": "Select DEGs.html#performing-differential-analysis-using-edger",
    "title": "4  Select DEGs",
    "section": "4.2 Performing differential analysis using edgeR",
    "text": "4.2 Performing differential analysis using edgeR\nedgeR(Empirical Analysis of Digital Gene Expression Data in R)\n\nPrinciple: Similar to DESeq2, edgeR also accounts for the dispersion in data. It utilizes a negative binomial distribution model and different normalization methods, such as TMM (Trimmed Mean of M values), to address technical variations between samples. edgeR employs a hypothesis-testing framework to identify differentially expressed genes and uses multiple testing correction akin to the Benjamini-Hochberg method. edgeR performs better with a larger number of samples and is suitable for medium-scale RNA sequencing data, offering high sensitivity and accuracy.\nInput Data Type: edgeR is also applicable to RNA-seq data, requiring expression counts for each gene. It uses the raw count matrix and does not require normalization or standardization. When using edgeR, it is important to select the appropriate analysis algorithm; the official recommendation for bulk RNA-seq is the quasi-likelihood (QL) F-test tests, and for scRNA-seq or data without replicates, the likelihood ratio test is suggested.\n\n\nDEG_edgeR &lt;- edgeR_analyze(\n    tumor_file = \"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\", \n    normal_file = '../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds',\n    output_file = '../test_TransProR/Select DEGs/DEG_edgeR.Rdata',\n    logFC_threshold = 2.5,\n    p_value_threshold = 0.01\n)\n\nGroup Table:\ngroup\nnormal  tumor \n   811    470 \nChange Table:\n\n  down stable     up \n  2984  20294   3842 \n\nhead(DEG_edgeR, 5)\n\n                  logFC   logCPM        LR PValue FDR change\nCH507-513H4.4 -16.46830 8.739277  9184.402      0   0   down\nCH507-513H4.3 -16.18797 8.739279  8829.571      0   0   down\nXBP1          -15.00117 5.932264 40023.604      0   0   down\nCH507-513H4.6 -14.81025 8.739297  7042.096      0   0   down\nKREMEN1       -14.45332 5.384819 22028.487      0   0   down"
  },
  {
    "objectID": "Select DEGs.html#performing-differential-analysis-using-limma",
    "href": "Select DEGs.html#performing-differential-analysis-using-limma",
    "title": "4  Select DEGs",
    "section": "4.3 Performing differential analysis using limma",
    "text": "4.3 Performing differential analysis using limma\nlimma(Linear Models for Microarray Data)\n\nPrinciple: Initially developed for gene chip data, limma was later adapted for RNA sequencing data. It is based on linear models and employs weighted least squares for estimating differences in gene expression, and a Bayesian approach for correcting multiple testing issues. Limma excels in handling large-scale data and is suitable for high-throughput data analysis, such as chip and large-scale RNA sequencing data, effectively controlling the false positive rate.\nInput Data Type: limma is applicable to various types of high-throughput data, including chip data and RNA-seq. It requires the expression values for each gene, which can be either raw counts or already normalized values. There are two methods for differential analysis in limma: limma-trend and voom. The difference between these two methods is minimal when the sequencing depth of samples is similar, but voom has advantages when there is a significant difference in sequencing depth, hence voom is generally the preferred method for differential analysis.\n\n\nDEG_limma_voom &lt;- limma_analyze(\n    tumor_file = \"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\", \n    normal_file = '../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds',\n    output_file = '../test_TransProR/Select DEGs/DEG_limma_voom.Rdata',\n    logFC_threshold = 2.5,\n    p_value_threshold = 0.01\n)\n\nGroup Table:\ngroup\nnormal  tumor \n   811    470 \nChange Table:\n\n  down stable     up \n  1874  16990   1611 \n\nhead(DEG_limma_voom, 5)\n\n             logFC    AveExpr         t P.Value adj.P.Val        B change\nTOMM6   -11.347906  1.6560534 -319.5710       0         0 2790.496   down\nEEF1G   -11.484561  6.6305909 -218.5213       0         0 2324.291   down\nXBP1    -12.063108  2.1101301 -192.0646       0         0 2162.558   down\nARL6IP4  -5.415435  4.6609716 -189.5647       0         0 2149.674   down\nCMC4     -7.768105 -0.5940984 -187.1232       0         0 2129.708   down"
  },
  {
    "objectID": "Select DEGs.html#wilcoxon-rank-sum-test",
    "href": "Select DEGs.html#wilcoxon-rank-sum-test",
    "title": "4  Select DEGs",
    "section": "4.4 Wilcoxon Rank-Sum Test",
    "text": "4.4 Wilcoxon Rank-Sum Test\n\nExperiments indicate that the Wilcoxon rank-sum test, as a non-parametric test, is not recommended when the sample size per condition is less than eight. However, once the sample size per condition exceeds eight, the Wilcoxon rank-sum test performs comparably or better than the three parametric testing methods (DESeq2, edgeR, and limma-voom) or other non-parametric testing methods.\nThe three parametric testing methods DESeq2, edgeR, and limma were all initially developed to address the problem of analysis with small sample sizes. In population-level studies, which typically have larger sample sizes (at least several dozen), parametric assumptions are often unnecessary. Additionally, larger sample sizes are more likely to include several outliers that, when they violate assumptions, can lead to unstable p-values and consequently invalidate FDR.\nUnlike DESeq2, edgeR, and limma, the Wilcoxon rank-sum test, as a non-regression method, cannot adjust for various potential confounding factors (such as differences in sequencing depth). To use the Wilcoxon rank-sum test, it is generally recommended that RNA-seq samples first be normalized to eliminate batch effects before computation.\nNote: The method selected for function implementation in this section is: edgeR TMM + wilcox.test analysis\n\n\noutRst &lt;- Wilcoxon_analyze(\n    tumor_file = \"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\", \n    normal_file = '../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds',\n    output_file = '../test_TransProR/Select DEGs/Wilcoxon_rank_sum_testoutRst.Rdata',\n    logFC_threshold = 2.5,\n    fdr_threshold = 0.01\n)\n\nGroup Table:\ngroup\nnormal  tumor \n   811    470 \nChange Table:\n\n  down stable     up \n  2252  16954   1269 \n\nhead(outRst, 5)\n\n         log2foldChange       pValues           FDR change\nA1BG        -2.51276182 1.483409e-169 2.270014e-168   down\nA1BG-AS1    -0.03966404  2.557352e-09  3.168066e-09 stable\nA2M          3.39825855 2.364713e-144 1.946823e-143     up\nA2M-AS1      1.70962233  2.001256e-47  3.931655e-47 stable\nA2ML1       -5.14816236 3.597150e-115 1.712431e-114   down"
  },
  {
    "objectID": "Select DEGs.html#four-degs-venn",
    "href": "Select DEGs.html#four-degs-venn",
    "title": "4  Select DEGs",
    "section": "4.5 four degs venn",
    "text": "4.5 four degs venn\n\nall_degs_venn &lt;- list(\n    DESeq2 = deg_filter(DEG_deseq2), \n    edgeR = deg_filter(DEG_edgeR), \n    limma = deg_filter(DEG_limma_voom), \n    Wilcoxon_test = deg_filter(outRst)\n)\nfour_degs_venn &lt;- four_degs_venn(all_degs_venn)\nfour_degs_venn"
  },
  {
    "objectID": "Select DEGs.html#reference",
    "href": "Select DEGs.html#reference",
    "title": "4  Select DEGs",
    "section": "4.6 Reference",
    "text": "4.6 Reference\n\n\nDESeq2:\n\n\nDifferential gene expression analysis based on the negative binomial distribution\nLove, M. I., Huber, W., & Anders, S. (2014). Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2. Genome Biology, 15(12), 550.\n\n\nedgeR:\n\n\nedgeR: differential analysis of sequence read count data\nRobinson, M. D., McCarthy, D. J., & Smyth, G. K. (2010). edgeR: a Bioconductor package for differential expression analysis of digital gene expression data. Bioinformatics, 26(1), 139-140. \n\n\nlimma:\n\n\nLinear Models for Microarray and RNA-Seq Data User’s Guide\nRitchie, M. E., Phipson, B., Wu, D., Hu, Y., Law, C. W., Shi, W., & Smyth, G. K. (2015). limma powers differential expression analyses for RNA-sequencing and microarray studies. Nucleic Acids Research, 43(7),e47-e47.\n\n\nWilcoxon Rank-Sum Test:\n\n\nLi, Y., Ge, X., Peng, F., Li, W., & Li, J. J. (2022). Exaggerated false positives by popular differential expression methods when analyzing human population samples. Genome Biology, 23(1), 79."
  },
  {
    "objectID": "Comparison of Four Methods.html#data-preprocessing",
    "href": "Comparison of Four Methods.html#data-preprocessing",
    "title": "5  Comparison of Four Methods",
    "section": "5.1 Data Preprocessing",
    "text": "5.1 Data Preprocessing\n\nDEG_deseq2 &lt;- prep_deseq2(\n    \"../test_TransProR/Select DEGs/DEG_deseq2.Rdata\"\n)\nhead(DEG_deseq2, 5)\n\n           logFC   Pvalue change    Gene\nA1BG    2.549682 15.65356   down    A1BG\nA2M     3.251168 15.65356     up     A2M\nAADACL2 8.229956 15.65356   down AADACL2\nABCA12  6.392086 15.65356   down  ABCA12\nABCB5   5.644108 15.65356     up   ABCB5\n\n\n\nDEG_edgeR &lt;- prep_edgeR(\n    \"../test_TransProR/Select DEGs/DEG_edgeR.Rdata\"\n)\nhead(DEG_edgeR, 5)\n\n                 logFC   Pvalue change          Gene\nCH507-513H4.4 16.46830 15.65356   down CH507-513H4.4\nCH507-513H4.3 16.18797 15.65356   down CH507-513H4.3\nXBP1          15.00117 15.65356   down          XBP1\nCH507-513H4.6 14.81025 15.65356   down CH507-513H4.6\nKREMEN1       14.45332 15.65356   down       KREMEN1\n\n\n\nlimma &lt;- prep_limma(\n    \"../test_TransProR/Select DEGs/DEG_limma_voom.Rdata\"\n)\nhead(limma, 5)\n\n            logFC   Pvalue change    Gene\nTOMM6   11.347906 15.65356   down   TOMM6\nEEF1G   11.484561 15.65356   down   EEF1G\nXBP1    12.063108 15.65356   down    XBP1\nARL6IP4  5.415435 15.65356   down ARL6IP4\nCMC4     7.768105 15.65356   down    CMC4\n\n\n\nWilcoxon &lt;- prep_wilcoxon(\n    \"../test_TransProR/Select DEGs/Wilcoxon_rank_sum_testoutRst.Rdata\"\n)\nhead(Wilcoxon, 5)\n\n           logFC   Pvalue change    Gene\nA1BG    2.512762 15.65356   down    A1BG\nA2M     3.398259 15.65356     up     A2M\nA2ML1   5.148162 15.65356   down   A2ML1\nAADAC   3.018900 15.65356   down   AADAC\nAADACL2 8.023014 15.65356   down AADACL2\n\n\n\ndeseq2_edgeR &lt;-compare_merge(\n  df1 = DEG_deseq2, \n  df2 = DEG_edgeR, \n  by_gene = \"Gene\", \n  compare_col = \"change\", \n  suffixes = c(\"_1\", \"_2\"), \n  df_name = \"deseq2_edgeR\"\n)\nhead(deseq2_edgeR, 5)\n\n   logFC_1 Pvalue_1    Gene  logFC_2 Pvalue_2 change         name\n1 3.251168 15.65356     A2M 3.405530 15.65356     up deseq2_edgeR\n2 8.229956 15.65356 AADACL2 8.011049 15.65356   down deseq2_edgeR\n3 6.392086 15.65356  ABCA12 5.946956 15.65356   down deseq2_edgeR\n4 5.644108 15.65356   ABCB5 5.828844 15.65356     up deseq2_edgeR\n5 3.797077 15.65356   ABCC3 3.638313 15.65356   down deseq2_edgeR\n\n\n\ndeseq2_limma &lt;-compare_merge(\n  df1 = DEG_deseq2, \n  df2 = limma, \n  by_gene = \"Gene\", \n  compare_col = \"change\", \n  suffixes = c(\"_1\", \"_2\"), \n  df_name = \"deseq2_limma\"\n)\nhead(deseq2_edgeR, 5)\n\n   logFC_1 Pvalue_1    Gene  logFC_2 Pvalue_2 change         name\n1 3.251168 15.65356     A2M 3.405530 15.65356     up deseq2_edgeR\n2 8.229956 15.65356 AADACL2 8.011049 15.65356   down deseq2_edgeR\n3 6.392086 15.65356  ABCA12 5.946956 15.65356   down deseq2_edgeR\n4 5.644108 15.65356   ABCB5 5.828844 15.65356     up deseq2_edgeR\n5 3.797077 15.65356   ABCC3 3.638313 15.65356   down deseq2_edgeR\n\n\n\ndeseq2_Wilcoxon &lt;-compare_merge(\n  df1 = DEG_deseq2, \n  df2 = Wilcoxon, \n  by_gene = \"Gene\", \n  compare_col = \"change\", \n  suffixes = c(\"_1\", \"_2\"), \n  df_name = \"deseq2_Wilcoxon\"\n)\nhead(deseq2_edgeR, 5)\n\n   logFC_1 Pvalue_1    Gene  logFC_2 Pvalue_2 change         name\n1 3.251168 15.65356     A2M 3.405530 15.65356     up deseq2_edgeR\n2 8.229956 15.65356 AADACL2 8.011049 15.65356   down deseq2_edgeR\n3 6.392086 15.65356  ABCA12 5.946956 15.65356   down deseq2_edgeR\n4 5.644108 15.65356   ABCB5 5.828844 15.65356     up deseq2_edgeR\n5 3.797077 15.65356   ABCC3 3.638313 15.65356   down deseq2_edgeR\n\n\n\nedgeR_limma &lt;-compare_merge(\n  df1 = DEG_edgeR, \n  df2 = limma, \n  by_gene = \"Gene\", \n  compare_col = \"change\", \n  suffixes = c(\"_1\", \"_2\"), \n  df_name = \"edgeR_limma\"\n)\nhead(deseq2_edgeR, 5)\n\n   logFC_1 Pvalue_1    Gene  logFC_2 Pvalue_2 change         name\n1 3.251168 15.65356     A2M 3.405530 15.65356     up deseq2_edgeR\n2 8.229956 15.65356 AADACL2 8.011049 15.65356   down deseq2_edgeR\n3 6.392086 15.65356  ABCA12 5.946956 15.65356   down deseq2_edgeR\n4 5.644108 15.65356   ABCB5 5.828844 15.65356     up deseq2_edgeR\n5 3.797077 15.65356   ABCC3 3.638313 15.65356   down deseq2_edgeR\n\n\n\nedgeR_Wilcoxon &lt;-compare_merge(\n  df1 = DEG_edgeR, \n  df2 = Wilcoxon, \n  by_gene = \"Gene\", \n  compare_col = \"change\", \n  suffixes = c(\"_1\", \"_2\"), \n  df_name = \"edgeR_Wilcoxon\"\n)\nhead(deseq2_edgeR, 5)\n\n   logFC_1 Pvalue_1    Gene  logFC_2 Pvalue_2 change         name\n1 3.251168 15.65356     A2M 3.405530 15.65356     up deseq2_edgeR\n2 8.229956 15.65356 AADACL2 8.011049 15.65356   down deseq2_edgeR\n3 6.392086 15.65356  ABCA12 5.946956 15.65356   down deseq2_edgeR\n4 5.644108 15.65356   ABCB5 5.828844 15.65356     up deseq2_edgeR\n5 3.797077 15.65356   ABCC3 3.638313 15.65356   down deseq2_edgeR\n\n\n\nlimma_Wilcoxon &lt;-compare_merge(\n  df1 = limma, \n  df2 = Wilcoxon, \n  by_gene = \"Gene\", \n  compare_col = \"change\", \n  suffixes = c(\"_1\", \"_2\"), \n  df_name = \"limma_Wilcoxon\"\n)\nhead(deseq2_edgeR, 5)\n\n   logFC_1 Pvalue_1    Gene  logFC_2 Pvalue_2 change         name\n1 3.251168 15.65356     A2M 3.405530 15.65356     up deseq2_edgeR\n2 8.229956 15.65356 AADACL2 8.011049 15.65356   down deseq2_edgeR\n3 6.392086 15.65356  ABCA12 5.946956 15.65356   down deseq2_edgeR\n4 5.644108 15.65356   ABCB5 5.828844 15.65356     up deseq2_edgeR\n5 3.797077 15.65356   ABCC3 3.638313 15.65356   down deseq2_edgeR\n\n\n\ncombined_df &lt;- bind_rows(deseq2_edgeR, deseq2_limma, deseq2_Wilcoxon, edgeR_limma, edgeR_Wilcoxon, limma_Wilcoxon)\npal1 = c(\"#3949ab\",\"#1e88e5\",\"#039be5\",\"#00897b\",\"#43a047\",\"#7cb342\")\npal2 = c(\"#2787e0\",\"#1a9ae0\",\"#1dabbf\",\"#00897b\",\"#43a047\",\"#7cb342\")\npal3 = c(\"#00897b\",\"#c0ca33\")\npal4 = c(\"#1e88e5\",\"#7cb342\")"
  },
  {
    "objectID": "Comparison of Four Methods.html#group_var-name",
    "href": "Comparison of Four Methods.html#group_var-name",
    "title": "5  Comparison of Four Methods",
    "section": "5.2 group_var = “name”",
    "text": "5.2 group_var = “name”\n\n5.2.1 merge, show_points = FALSE\n\nall_density_foldchange_name1 &lt;- merge_density_foldchange(\n  data = combined_df,\n  x_var = \"logFC_1\",\n  y_var = \"logFC_2\",\n  group_var = \"name\",\n  palette = pal1,\n  show_points = FALSE,\n  point_size = 2.5,\n  point_alpha = 0.1,\n  x_lim = c(0, 20),\n  y_lim = c(0, 20),\n  cor_method = \"pearson\",\n  line_size = 1.6,\n  cor_label_pos = c(\"left\", \"top\")\n)\n\nall_density_foldchange_name1\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n5.2.2 merge, show_points = TRUE\n\nall_density_foldchange_name2 &lt;- merge_density_foldchange(\n  data = combined_df,\n  x_var = \"logFC_1\",\n  y_var = \"logFC_2\",\n  group_var = \"name\",\n  palette = pal1,\n  show_points = TRUE,\n  point_size = 2.5,\n  point_alpha = 0.2,\n  x_lim = c(0, 20),\n  y_lim = c(0, 20),\n  cor_method = \"pearson\",\n  line_size = 1.6,\n  cor_label_pos = c(\"left\", \"top\")\n)\n\nall_density_foldchange_name2\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n5.2.3 facet, show_points = FALSE, show_density = TRUE\n\nall_facet_density_foldchange_name3 &lt;- facet_density_foldchange(\n  data = combined_df,\n  x_var = \"logFC_1\",\n  y_var = \"logFC_2\",\n  group_var = \"name\",\n  facet_var = \"name\",\n  palette = pal2,\n  show_points = FALSE,\n  show_density = TRUE,\n  point_size = 2.5,\n  point_alpha = 0.1,\n  line_size = 1.6,\n  cor_method = \"pearson\",\n  cor_label_pos = c(\"left\", \"top\"),\n  cor_vjust = 1\n)\n\nall_facet_density_foldchange_name3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n5.2.4 facet, show_points = TRUE, show_density = FALSE\n\nall_facet_density_foldchange_name4 &lt;- facet_density_foldchange(\n  data = combined_df,\n  x_var = \"logFC_1\",\n  y_var = \"logFC_2\",\n  group_var = \"name\",\n  facet_var = \"name\",\n  palette = pal2,\n  show_points = TRUE,\n  show_density = FALSE,\n  point_size = 2,\n  point_alpha = 0.1,\n  line_size = 1.6,\n  cor_method = \"pearson\",\n  cor_label_pos = c(\"left\", \"top\"),\n  cor_vjust = 1\n)\n\nall_facet_density_foldchange_name4\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Comparison of Four Methods.html#group_var-change",
    "href": "Comparison of Four Methods.html#group_var-change",
    "title": "5  Comparison of Four Methods",
    "section": "5.3 group_var = “change”",
    "text": "5.3 group_var = “change”\n\n5.3.1 merge, show_points = FALSE\n\nall_density_foldchange_name5 &lt;- merge_density_foldchange(\n  data = combined_df,\n  x_var = \"logFC_1\",\n  y_var = \"logFC_2\",\n  group_var = \"change\",\n  palette = pal3,\n  show_points = FALSE,\n  point_size = 2.5,\n  point_alpha = 0.1,\n  x_lim = c(0, 20),\n  y_lim = c(0, 20),\n  cor_method = \"pearson\",\n  line_size = 1.6,\n  cor_label_pos = c(\"left\", \"top\")\n)\n\nall_density_foldchange_name5\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n5.3.2 merge, show_points = TRUE\n\nall_density_foldchange_name6 &lt;- merge_density_foldchange(\n  data = combined_df,\n  x_var = \"logFC_1\",\n  y_var = \"logFC_2\",\n  group_var = \"change\",\n  palette = pal3,\n  show_points = TRUE,\n  point_size = 2.5,\n  point_alpha = 0.2,\n  x_lim = c(0, 20),\n  y_lim = c(0, 20),\n  cor_method = \"pearson\",\n  line_size = 1.6,\n  cor_label_pos = c(\"left\", \"top\")\n)\n\nall_density_foldchange_name6\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n5.3.3 facet, show_points = FALSE, show_density = TRUE\n\nall_facet_density_foldchange_name7 &lt;- facet_density_foldchange(\n  data = combined_df,\n  x_var = \"logFC_1\",\n  y_var = \"logFC_2\",\n  group_var = \"change\",\n  facet_var = \"name\",\n  palette = pal3,\n  show_points = FALSE,\n  show_density = TRUE,\n  point_size = 2.5,\n  point_alpha = 0.1,\n  line_size = 1.6,\n  cor_method = \"pearson\",\n  cor_label_pos = c(\"left\", \"top\")\n)\n\nall_facet_density_foldchange_name7\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n5.3.4 facet, show_points = TRUE, show_density = FALSE\n\nall_facet_density_foldchange_name8 &lt;- facet_density_foldchange(\n  data = combined_df,\n  x_var = \"logFC_1\",\n  y_var = \"logFC_2\",\n  group_var = \"change\",\n  facet_var = \"name\",\n  palette = pal3,\n  show_points = TRUE,\n  show_density = FALSE,\n  point_size = 2,\n  point_alpha = 0.1,\n  line_size = 1.6,\n  cor_method = \"pearson\",\n  cor_label_pos = c(\"left\", \"top\")\n)\n\nall_facet_density_foldchange_name8\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Comparison of Six Methods.html",
    "href": "Comparison of Six Methods.html",
    "title": "6  Comparison of Six Methods",
    "section": "",
    "text": "7 Reference"
  },
  {
    "objectID": "Comparison of Six Methods.html#load-data",
    "href": "Comparison of Six Methods.html#load-data",
    "title": "6  Comparison of Six Methods",
    "section": "6.1 Load data",
    "text": "6.1 Load data\n\nfour_methods_degs_union_combined_features &lt;- read_csv(\"../test_TransProR/four_methods_degs_union_combined_features.csv\")\n\nRows: 1020 Columns: 1\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Feature\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nall_degs_count_exp_gene_feature_auc_mapping_0_5_0_9 &lt;- read_csv(\"../test_TransProR/all_degs_count_exp_gene_feature_auc_mapping_0.5_0.9.csv\")\n\nRows: 809 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Gene\ndbl (2): Feature, AUC\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nall_degs_count_exp_gene_feature_auc_mapping_0_9 &lt;- read_csv(\"../test_TransProR/all_degs_count_exp_gene_feature_auc_mapping_0.9.csv\")\n\nRows: 1421 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Gene\ndbl (2): Feature, AUC\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nAutoFeatureSelection&lt;- four_methods_degs_union_combined_features$Feature\n\nNewMACFCmain_0_5_0_9&lt;- all_degs_count_exp_gene_feature_auc_mapping_0_5_0_9$Gene\nNewMACFCmain_0_9&lt;- all_degs_count_exp_gene_feature_auc_mapping_0_9$Gene\n\nNewMACFCmain &lt;- c(NewMACFCmain_0_5_0_9, NewMACFCmain_0_9)\n\nDEG_deseq2 &lt;- readRDS(\"../test_TransProR/Select DEGs/DEG_deseq2.Rdata\")\nDEG_edgeR &lt;- readRDS(\"../test_TransProR/Select DEGs/DEG_edgeR.Rdata\")\nDEG_limma_voom &lt;- readRDS(\"../test_TransProR/Select DEGs/DEG_limma_voom.Rdata\")\noutRst &lt;- readRDS(\"../test_TransProR/Select DEGs/Wilcoxon_rank_sum_testoutRst.Rdata\")"
  },
  {
    "objectID": "Comparison of Six Methods.html#comparison-of-autofeatureselection-and-four-other-methods",
    "href": "Comparison of Six Methods.html#comparison-of-autofeatureselection-and-four-other-methods",
    "title": "6  Comparison of Six Methods",
    "section": "6.2 Comparison of AutoFeatureSelection and four other methods",
    "text": "6.2 Comparison of AutoFeatureSelection and four other methods\n\nfive_degs_venn1 &lt;- list(DESeq2 = deg_filter(DEG_deseq2), \n                        edgeR = deg_filter(DEG_edgeR), \n                        limma = deg_filter(DEG_limma_voom), \n                        Wilcoxon_test = deg_filter(outRst),\n                        AutoFeatureSelection = AutoFeatureSelection)\n\nedge_colors &lt;- c(alpha(\"#1b64bb\", 0.5), alpha(\"#13828e\", 0.5), alpha(\"#337c3a\", 0.5), alpha(\"#9e9d39\", 0.5), alpha(\"#0288d1\", 0.5))\n\nname_color &lt;- alpha(c(\"#1b64bb\",\"#13828e\",\"#337c3a\",\"#9e9d39\",\"#0288d1\"), 0.8)\n\nfill_colors &lt;- c(\"#e1f2f1\", \"#11786b\")\n\nAutoFeatureSelection_FourMethods_ContrastVenn &lt;- Contrast_Venn(five_degs_venn1, edge_colors, name_color, fill_colors, label_size = 2.5)\n\nAutoFeatureSelection_FourMethods_ContrastVenn"
  },
  {
    "objectID": "Comparison of Six Methods.html#comparison-of-newmacfcmain-and-four-other-methods",
    "href": "Comparison of Six Methods.html#comparison-of-newmacfcmain-and-four-other-methods",
    "title": "6  Comparison of Six Methods",
    "section": "6.3 Comparison of NewMACFCmain and four other methods",
    "text": "6.3 Comparison of NewMACFCmain and four other methods\n\nfive_degs_venn2 &lt;- list(DESeq2 = deg_filter(DEG_deseq2), \n                        edgeR = deg_filter(DEG_edgeR), \n                        limma = deg_filter(DEG_limma_voom), \n                        Wilcoxon_test = deg_filter(outRst),\n                        NewMACFCmain = NewMACFCmain)\n\nedge_colors &lt;- c(alpha(\"#1b64bb\", 0.5), alpha(\"#13828e\", 0.5), alpha(\"#337c3a\", 0.5), alpha(\"#9e9d39\", 0.5), alpha(\"#303f9f\", 0.5))\n\nname_color &lt;- alpha(c(\"#1b64bb\",\"#13828e\",\"#337c3a\",\"#9e9d39\",\"#303f9f\"), 0.8)\n\nfill_colors &lt;- c(\"#e1f2f1\", \"#11786b\")\n\nNewMACFCmain_FourMethods_ContrastVenn &lt;- Contrast_Venn(five_degs_venn2, edge_colors, name_color, fill_colors, label_size = 2.5)\n\nNewMACFCmain_FourMethods_ContrastVenn\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIn the domain of feature selection methodologies within the TransPro project, the TransProR and TransProPy components respectively introduce two distinct classes of approaches.\n\n\n\nTransProRTransProPy\n\n\nThe first class, as represented in TransProR, includes methods such as DESeq2, edgeR, limma, and the Wilcoxon rank-sum test, which focus on univariate statistical tests. These techniques evaluate the independent correlation between individual features, like gene expression levels, and outcome variables such as disease status. Defined by their unique statistical models and assumptions about data distribution and variability, these methods do not incorporate direct considerations for interactions between features. Their forte lies in identifying features that statistically stand out from control conditions.\n\n\nConversely, the second class, encapsulated within TransProPy, employs more sophisticated methodologies. This includes the mvAUC metric, MACFC algorithm, and the integration of advanced machine learning techniques seen in AutoGluon and the auto_feature_selection function. This suite of approaches goes beyond assessing the utility of solitary features, instead appraising their collective interactions and complementarity. They seek to discern sets of features that act in concert to influence the outcome variable.\n\nThe mvAUC metric evaluates the global complementarity among features, ascertaining the enhancement of classification capability when features are combined.\nThe method called New_MACFCmain, stemming from TransProPy, employs the MACFC algorithm, which in turn utilizes mvAUC to measure feature redundancy accurately. It captures both novel class-relevant information and the degree of redundancy across variables. This facilitates the algorithm in efficiently identifying complementary features and selecting effective combinations thereof.\nIncorporating techniques like ensemble learning and recursive feature elimination, AutoGluon and TransProPy’s auto_feature_selection approach accounts for the comprehensive performance of features within a predictive model framework.\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nThus, while the second class of methods adopts a more integrated and multifaceted perspective, involving multivariable analyses and ensemble learning to account for feature dependencies, the first is more inclined towards identifying individual or a small set of features with substantial influence, which may offer a more streamlined and swift resolution for certain analytical scenarios."
  },
  {
    "objectID": "Merging TransProR and TransProPy.html#innovation-point",
    "href": "Merging TransProR and TransProPy.html#innovation-point",
    "title": "7  Merging TransProR and TransProPy",
    "section": "7.1 Innovation Point",
    "text": "7.1 Innovation Point\n\n\n\n\n\n\nTip\n\n\n\nThe reasons for merging the two classes of methods from the R package TransProR and the Python package TransProPy are as follows:\n\n\n\n\n\nComplementarity:\n\n\nUnivariate methods are effective in identifying significant features, while multivariate methods excel in evaluating interactions between features. Combining the two allows for the simultaneous utilization of the advantages of both methods.\n\n\nReduction of Redundancy:\n\n\nBy integrating multiple techniques, feature redundancy can be measured more accurately, allowing for the selection of effective feature combinations.\n\n\nEnhanced Classification Ability:\n\n\nThe mvAUC metric evaluates the global complementarity among feature combinations, aiding in the improvement of classification capabilities.\n\n\nComprehensive Consideration of Feature Performance:\n\n\nBy combining techniques such as ensemble learning and recursive feature elimination, a more comprehensive consideration of feature performance within a predictive model framework can be Merging TransProR and TransProPyachieved.\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIn summary, merging the strengths of these two classes of methods helps in a more comprehensive and precise analysis and interpretation of data, especially in handling complex bioinformatics data, where this integrative approach may provide more accurate and thorough insights."
  },
  {
    "objectID": "Enrichment ggtree.html",
    "href": "Enrichment ggtree.html",
    "title": "8  Enrichment ggtree",
    "section": "",
    "text": "9 Reference"
  },
  {
    "objectID": "Enrichment ggtree.html#load-data",
    "href": "Enrichment ggtree.html#load-data",
    "title": "8  Enrichment ggtree",
    "section": "8.1 Load data",
    "text": "8.1 Load data\n\ntumor &lt;- readRDS(\"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\")\nnormal &lt;- readRDS('../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds')\n# Merge the datasets, ensuring both have genes as row names\nall_count_exp &lt;- merge(tumor, normal, by = \"row.names\")\nall_count_exp &lt;- tibble::column_to_rownames(all_count_exp, var = \"Row.names\")  # Set the row names\n\n# Drawing data\nall_count_exp &lt;- log_transform(all_count_exp)\n\n[1] \"log2 transform finished\"\n\nDEG_deseq2 &lt;- readRDS('../test_TransProR/Select DEGs/DEG_deseq2.Rdata')\n#head(all_count_exp, 1)\nhead(DEG_deseq2, 5)\n\n          baseMean log2FoldChange      lfcSE      stat pvalue padj change\nA1BG      134.6084      -2.549682 0.05677219 -44.91075      0    0   down\nA2M     30208.9912       3.251168 0.08394645  38.72907      0    0     up\nAADACL2   801.4538      -8.229956 0.18969649 -43.38486      0    0   down\nAARS2    1153.5493       1.624753 0.03283522  49.48202      0    0 stable\nAARSD1    567.8672      -2.082289 0.02275703 -91.50088      0    0 stable"
  },
  {
    "objectID": "Enrichment ggtree.html#convert-from-symbol-to-entrezid",
    "href": "Enrichment ggtree.html#convert-from-symbol-to-entrezid",
    "title": "8  Enrichment ggtree",
    "section": "8.2 Convert from SYMBOL to ENTREZID",
    "text": "8.2 Convert from SYMBOL to ENTREZID\n\n# Convert from SYMBOL to ENTREZID for convenient enrichment analysis later. It's crucial to do this now as a direct conversion may result in a reduced set of genes due to non-one-to-one correspondence.\n\n# DEG_deseq2\n# Retrieve gene list\ngene &lt;- rownames(DEG_deseq2)\n# Perform conversion\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n\n'select()' returned 1:many mapping between keys and columns\n\n\nWarning in bitr(gene, fromType = \"SYMBOL\", toType = \"ENTREZID\", OrgDb =\n\"org.Hs.eg.db\"): 43.37% of input gene IDs are fail to map...\n\n# Remove duplicates and merge\ngene &lt;- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\n# Extract the SYMBOL column as a vector from the first dataset\nsymbols_vector &lt;- gene$SYMBOL\n# Use the SYMBOL column to filter corresponding rows from the second dataset by row names\nDEG_deseq2 &lt;- DEG_deseq2[rownames(DEG_deseq2) %in% symbols_vector, ]\nhead(DEG_deseq2, 5)\n\n          baseMean log2FoldChange      lfcSE      stat pvalue padj change\nA1BG      134.6084      -2.549682 0.05677219 -44.91075      0    0   down\nA2M     30208.9912       3.251168 0.08394645  38.72907      0    0     up\nAADACL2   801.4538      -8.229956 0.18969649 -43.38486      0    0   down\nAARS2    1153.5493       1.624753 0.03283522  49.48202      0    0 stable\nAARSD1    567.8672      -2.082289 0.02275703 -91.50088      0    0 stable"
  },
  {
    "objectID": "Enrichment ggtree.html#select-differentially-expressed-genes",
    "href": "Enrichment ggtree.html#select-differentially-expressed-genes",
    "title": "8  Enrichment ggtree",
    "section": "8.3 Select differentially expressed genes",
    "text": "8.3 Select differentially expressed genes\n\nDiff_deseq2 &lt;- filter_diff_genes(\n  DEG_deseq2, \n  p_val_col = \"pvalue\", \n  log_fc_col = \"log2FoldChange\",\n  p_val_threshold = 0.01, \n  log_fc_threshold = 9.1\n  )\n# First, obtain a list of gene names from the row names of the first dataset\ngene_names &lt;- rownames(Diff_deseq2)\n# Find the matching rows in the second dataframe\nmatched_rows &lt;- all_count_exp[gene_names, ]\n# Calculate the mean for each row\naverages &lt;- rowMeans(matched_rows, na.rm = TRUE)\n# Append the averages as a new column to the first dataframe\nDiff_deseq2$average &lt;- averages\nDiff_deseq2$ID &lt;- rownames(Diff_deseq2)\nDiff_deseq2$changetype &lt;- ifelse(Diff_deseq2$change == 'up', 1, -1)\n# Define a small threshold value\nsmall_value &lt;- .Machine$double.xmin\n# Before calculating -log10, replace zeroes with the small threshold value and assign it to a new column\nDiff_deseq2$log_pvalue &lt;- ifelse(Diff_deseq2$pvalue == 0, -log10(small_value), -log10(Diff_deseq2$pvalue))\n# Extract the expression data corresponding to the differentially expressed genes\nheatdata_deseq2 &lt;- all_count_exp[rownames(Diff_deseq2), ]\n#head(heatdata_deseq2, 1)"
  },
  {
    "objectID": "Enrichment ggtree.html#process-heatdata-for-ggtree-plotting",
    "href": "Enrichment ggtree.html#process-heatdata-for-ggtree-plotting",
    "title": "8  Enrichment ggtree",
    "section": "8.4 Process heatdata for ggtree plotting",
    "text": "8.4 Process heatdata for ggtree plotting\n\nset.seed(123)\nHeatdataDeseq2 &lt;- process_heatdata(\n  heatdata_deseq2, \n  selection = 2, \n  custom_names = NULL, \n  num_names_per_group = 4, \n  prefix_length = 4\n  )\nhead(HeatdataDeseq2, 5)\n\n                  TCGA_1   TCGA_2   TCGA_3   TCGA_4    GTEX_1    GTEX_2\nADIRF            0.00000  0.00000 0.000000 0.000000 10.426265  7.954196\nATP6V1G2-DDX39B  0.00000  0.00000 0.000000 2.000000  8.044394 10.769011\nBANCR           10.82655 10.68299 8.997179 5.491853  0.000000  0.000000\nBOLA2            0.00000  0.00000 0.000000 0.000000  6.700440  7.693487\nC1QTNF5          0.00000  0.00000 0.000000 0.000000  8.134426  8.658211\n                   GTEX_3    GTEX_4\nADIRF           10.194757 10.817783\nATP6V1G2-DDX39B  5.554589  8.335390\nBANCR            0.000000  1.000000\nBOLA2            6.554589  7.066089\nC1QTNF5          7.266787  8.071462"
  },
  {
    "objectID": "Enrichment ggtree.html#check-nodes-requiring-staining",
    "href": "Enrichment ggtree.html#check-nodes-requiring-staining",
    "title": "8  Enrichment ggtree",
    "section": "8.5 Check nodes requiring staining",
    "text": "8.5 Check nodes requiring staining\n\nHclustDeseq2 &lt;- hclust(dist(HeatdataDeseq2, method = \"euclidean\"), method = \"complete\")\np1 = ggtree(HclustDeseq2, branch.length = 'none', layout = \"circular\", size = 0.2, xlim = c(30, NA))\np1\n\n\n\n# Examine node points, note the x-coordinate in this df (tree_data)\n# Convert data generated by ggtree into a dataframe\ntree_data &lt;- as.data.frame(p1$data)\np2 &lt;- rotate_tree(p1, 90)\n\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n\np2\n\n\n\n# Review nodes\np3 &lt;- p2 + geom_text(aes(label = node)) + geom_tiplab(offset = 1, size = 3, hjust = -0.1)\np3"
  },
  {
    "objectID": "Enrichment ggtree.html#usage-example",
    "href": "Enrichment ggtree.html#usage-example",
    "title": "8  Enrichment ggtree",
    "section": "8.6 Usage Example",
    "text": "8.6 Usage Example\n\n# Please replace the following vectors with your specific values\nnodes &lt;- c(117, 129, 125, 127, 119, 123, 139, 166, 124, 131, 217) # x-values of the nodes you want to highlight\nfill_colors &lt;- c(\"#CD6600\", \"#CD6600\", \"#CD6600\", \"#CD6600\", \"#009933\", \"#009933\", \"#009933\", \"#009933\", \"#9B30FF\", \"#9B30FF\", \"#9B30FF\") # Fill colors\nalpha_values &lt;- c(0.3, 0.3, 0.3, 0.3, 0.2, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3) # Transparency values\nextend_values &lt;- c(25, 24, 24, 25, 25, 25, 24, 24, 25, 24, 24) # Values for the 'extend' parameter\n\n# Now, you can call this function to create your ggtree layer\n\np2 &lt;- highlight_by_node(\n  p2, \n  nodes, \n  fill_colors, \n  alpha_values, \n  extend_values\n  )\n\np2"
  },
  {
    "objectID": "Enrichment ggtree.html#diff_deseq2-enrichment-analysis",
    "href": "Enrichment ggtree.html#diff_deseq2-enrichment-analysis",
    "title": "8  Enrichment ggtree",
    "section": "8.7 Diff_deseq2 Enrichment Analysis",
    "text": "8.7 Diff_deseq2 Enrichment Analysis\n\n8.7.1 Obtain the list of genes\n\ngene &lt;- rownames(Diff_deseq2)\n## Convert\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n\n'select()' returned 1:1 mapping between keys and columns\n\n## Remove duplicates and merge\ngene &lt;- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\ngene_df &lt;- data.frame(logFC=Diff_deseq2$log2FoldChange,\n                      SYMBOL = rownames(Diff_deseq2))\ngene_df &lt;- merge(gene_df, gene, by=\"SYMBOL\")\nGO_deseq2 &lt;- gene_df$ENTREZID\n\n\n\n8.7.2 GO Analysis for Biological Processes (BP)\n\n# Perform gene enrichment analysis\nerich.go.BP_deseq2 &lt;- enrichGO(\n  gene = GO_deseq2,\n  OrgDb = org.Hs.eg.db,\n  keyType = \"ENTREZID\",\n  ont = 'BP', # Other categories: \"CC\", \"MF\" for molecular function\n  pvalueCutoff = 0.05,\n  qvalueCutoff = 0.05,\n  readable = TRUE)\nerich.go.BP.outdata_deseq2 &lt;- as.data.frame(erich.go.BP_deseq2)\n# Uncomment to write output to CSV\n# write.csv(erich.go.BP.outdata_deseq2, \"E:/fruit/erich.go.BP.outdata.csv\")\nhead(erich.go.BP.outdata_deseq2, 5)\n\n                   ID\nGO:0016064 GO:0016064\nGO:0019724 GO:0019724\nGO:0002377 GO:0002377\nGO:0002449 GO:0002449\nGO:0002460 GO:0002460\n                                                                                                                         Description\nGO:0016064                                                                                   immunoglobulin mediated immune response\nGO:0019724                                                                                                  B cell mediated immunity\nGO:0002377                                                                                                 immunoglobulin production\nGO:0002449                                                                                              lymphocyte mediated immunity\nGO:0002460 adaptive immune response based on somatic recombination of immune receptors built from immunoglobulin superfamily domains\n           GeneRatio   BgRatio       pvalue     p.adjust       qvalue\nGO:0016064     14/80 205/18870 1.639824e-13 6.821238e-11 6.653066e-11\nGO:0019724     14/80 208/18870 2.003300e-13 6.821238e-11 6.653066e-11\nGO:0002377     12/80 196/18870 3.655475e-11 8.297927e-09 8.093349e-09\nGO:0002449     14/80 368/18870 4.233820e-10 7.208078e-08 7.030369e-08\nGO:0002460     14/80 380/18870 6.427551e-10 8.754324e-08 8.538494e-08\n                                                                                                                                 geneID\nGO:0016064 IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-15/IGHV3-21/IGHV3-23/IGHV4-31/IGHV4-34/IGHV4-39/IGHV5-51/TREX1\nGO:0019724 IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-15/IGHV3-21/IGHV3-23/IGHV4-31/IGHV4-34/IGHV4-39/IGHV5-51/TREX1\nGO:0002377                          IGKV1-16/IGKV4-1/IGLV1-40/IGLV2-23/IGLV3-10/IGLV3-19/IGLV3-21/IGLV3-25/IGLV4-60/IGLV4-69/TREX1/XBP1\nGO:0002449 IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-15/IGHV3-21/IGHV3-23/IGHV4-31/IGHV4-34/IGHV4-39/IGHV5-51/TREX1\nGO:0002460 IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-15/IGHV3-21/IGHV3-23/IGHV4-31/IGHV4-34/IGHV4-39/IGHV5-51/TREX1\n           Count\nGO:0016064    14\nGO:0019724    14\nGO:0002377    12\nGO:0002449    14\nGO:0002460    14\n\n\n\n\n8.7.3 GO Analysis for Molecular Functions (MF)\n\n# Perform gene enrichment analysis\nerich.go.MF_deseq2 &lt;- enrichGO(\n  gene = GO_deseq2,\n  OrgDb = org.Hs.eg.db,\n  keyType = \"ENTREZID\",\n  ont = 'MF', # Other categories: \"CC\", \"MF\" for molecular function\n  pvalueCutoff = 0.05,\n  qvalueCutoff = 0.05,\n  readable = TRUE)\n\nerich.go.MF.outdata_deseq2 &lt;- as.data.frame(erich.go.MF_deseq2)\n# Uncomment to write output to CSV\n# write.csv(erich.go.MF.outdata_deseq2, \"E:/fruit/erich.go.MF.outdata.csv\")\n\nhead(erich.go.MF.outdata_deseq2, 5)\n\n                   ID                              Description GeneRatio\nGO:0003823 GO:0003823                          antigen binding     21/87\nGO:0030280 GO:0030280 structural constituent of skin epidermis      4/87\nGO:0042826 GO:0042826              histone deacetylase binding      5/87\n             BgRatio       pvalue     p.adjust       qvalue\nGO:0003823 178/18496 5.857929e-24 7.146673e-22 7.146673e-22\nGO:0030280  36/18496 2.397665e-05 1.462576e-03 1.462576e-03\nGO:0042826 127/18496 3.322487e-04 1.351145e-02 1.351145e-02\n                                                                                                                                                                                                geneID\nGO:0003823 IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-15/IGHV3-21/IGHV3-23/IGHV4-31/IGHV4-34/IGHV4-39/IGHV5-51/IGKV1-16/IGKV4-1/IGLV1-40/IGLV2-23/IGLV3-19/IGLV3-21/IGLV3-25/TRBV28\nGO:0030280                                                                                                                                                                   KRT2/KRT71/KRT85/KRTAP1-3\nGO:0042826                                                                                                                                                         MAGEA1/MAGEA12/MAGEA3/MAGEA4/MAGEA6\n           Count\nGO:0003823    21\nGO:0030280     4\nGO:0042826     5\n\n\n\n\n8.7.4 GO Analysis for Cellular Components (CC)\n\n# Perform gene enrichment analysis\nerich.go.CC_deseq2 &lt;- enrichGO(\n  gene = GO_deseq2,\n  OrgDb = org.Hs.eg.db,\n  keyType = \"ENTREZID\",\n  ont = 'CC', # Other categories: \"CC\", \"MF\" for molecular function\n  pvalueCutoff = 0.05,\n  qvalueCutoff = 0.05,\n  readable = TRUE)\n\nerich.go.CC.outdata_deseq2 &lt;- as.data.frame(erich.go.CC_deseq2)\n# Uncomment to write output to CSV\n# write.csv(erich.go.CC.outdata_deseq2, \"E:/fruit/erich.go.CC.outdata.csv\")\n\n\n\n8.7.5 KEGG Analysis\n\nkegg.out_deseq2 = enrichKEGG(\n  gene = GO_deseq2,\n  organism = \"hsa\",\n  keyType = \"kegg\",\n  pvalueCutoff = 0.05,\n  pAdjustMethod = \"BH\",\n  qvalueCutoff = 0.05)\n\nReading KEGG annotation online: \"https://rest.kegg.jp/link/hsa/pathway\"...\n\n\nReading KEGG annotation online: \"https://rest.kegg.jp/list/pathway/hsa\"...\n\nkegg.out.outdata_deseq2 &lt;- as.data.frame(kegg.out_deseq2)\n# Uncomment to export the data, which are in ENTREZID format\n# write.csv(kegg.out.outdata_deseq2, \"E:/kegg.out.outdata.csv\")\n\n##### Convert numeric Entrez gene IDs or Ensembl gene IDs from above code to symbols\nlibrary(org.Hs.eg.db)\nkegg.out1_deseq2 = as.data.frame(kegg.out_deseq2)\nENTREZID = strsplit(kegg.out1_deseq2$geneID, \"/\")\nsymbol = sapply(ENTREZID, function(x) {\n  y = bitr(x, fromType = \"ENTREZID\", toType = \"SYMBOL\", OrgDb = \"org.Hs.eg.db\")\n  # In case of multiple matches, take the first one\n  y = y[!duplicated(y$ENTREZID), -1]\n  y = paste(y, collapse = \"/\")\n})\nkegg.out1_deseq2$geneID = symbol\nkegg.out1.outdata_deseq2 &lt;- as.data.frame(kegg.out1_deseq2)\n# Uncomment to export the converted data\n# write.csv(kegg.out1.outdata_deseq2, \"E:/fruit/kegg.out1.outdata.csv\")\nhead(kegg.out.outdata_deseq2, 5)\n\n [1] category    subcategory ID          Description GeneRatio   BgRatio    \n [7] pvalue      p.adjust    qvalue      geneID      Count      \n&lt;0 rows&gt; (or 0-length row.names)\n\nhead(kegg.out1.outdata_deseq2, 5)\n\n [1] category    subcategory ID          Description GeneRatio   BgRatio    \n [7] pvalue      p.adjust    qvalue      geneID      Count      \n&lt;0 rows&gt; (or 0-length row.names)\n\n\n\n\n8.7.6 DO Analysis\n\nerich.go.DO_deseq2 = enrichDO(gene = GO_deseq2,\n                              ont = \"DO\", # Other categories: \"CC\", \"MF\" for molecular function\n                              pvalueCutoff = 0.05,\n                              qvalueCutoff = 0.05,\n                              readable = TRUE)\n\nerich.go.DO.outdata_deseq2 &lt;- as.data.frame(erich.go.DO_deseq2)\n# Uncomment to export the data\n# write.csv(erich.go.DO.outdata_deseq2, \"E:/fruit/erich.go.DO.outdata.csv\")\nhead(erich.go.DO.outdata_deseq2, 5)\n\n                   ID           Description GeneRatio  BgRatio       pvalue\nDOID:11132 DOID:11132 prostatic hypertrophy      3/34 34/10312 0.0001827545\n             p.adjust     qvalue               geneID Count\nDOID:11132 0.02668216 0.02481614 MAGEA1/MAGEA3/MAGEA4     3\n\n\n\n\n8.7.7 Reactome Pathway Analysis\n\nerich.go.Reactome_deseq2 &lt;- enrichPathway(gene = GO_deseq2, pvalueCutoff = 0.05, readable = TRUE)\n\nerich.go.Reactome.outdata_deseq2 &lt;- as.data.frame(erich.go.Reactome_deseq2)\n# Uncomment to export the data\n# write.csv(erich.go.Reactome.outdata_deseq2, \"E:/fruit/erich.go.Reactome.outdata.csv\")\nhead(erich.go.Reactome.outdata_deseq2, 5)\n\n                         ID                         Description GeneRatio\nR-HSA-6805567 R-HSA-6805567                      Keratinization     18/43\nR-HSA-6809371 R-HSA-6809371 Formation of the cornified envelope      6/43\n                BgRatio       pvalue     p.adjust       qvalue\nR-HSA-6805567 214/11009 3.032346e-20 2.850405e-18 2.649312e-18\nR-HSA-6809371 129/11009 9.843111e-06 4.626262e-04 4.299885e-04\n                                                                                                                                                        geneID\nR-HSA-6805567 CDSN/KRT2/KRT25/KRT35/KRT71/KRT85/KRTAP1-3/KRTAP10-5/KRTAP11-1/KRTAP2-1/KRTAP2-2/KRTAP2-4/KRTAP26-1/KRTAP3-3/KRTAP4-2/KRTAP8-1/KRTAP9-3/KRTAP9-8\nR-HSA-6809371                                                                                                                CDSN/KRT2/KRT25/KRT35/KRT71/KRT85\n              Count\nR-HSA-6805567    18\nR-HSA-6809371     6\n\n\n\n\n8.7.8 Filter and organize data by setting the count values of genes in pathways or by selecting pathway names of interest to the user.\n\n# DEG_deseq2\n## Conversion\nGO_deseq2 = bitr(GO_deseq2, fromType=\"ENTREZID\", toType=\"SYMBOL\", OrgDb=\"org.Hs.eg.db\")\n\n'select()' returned 1:1 mapping between keys and columns\n\nGO_deseq2 &lt;- GO_deseq2$SYMBOL\n\n# Usage Example\n# count\ncount_threshold &lt;- 12\nresult_threshold_deseq2 &lt;- pathway_count(GO_deseq2, count_threshold, erich.go.BP.outdata_deseq2)\n# Print the results\nhead(result_threshold_deseq2, 5)\n\n           Symble                             Description Exists\n1           ADIRF immunoglobulin mediated immune response      0\n2 ATP6V1G2-DDX39B immunoglobulin mediated immune response      0\n3           BANCR immunoglobulin mediated immune response      0\n4           BOLA2 immunoglobulin mediated immune response      0\n5         C1QTNF5 immunoglobulin mediated immune response      0\n\n# List of selected pathway names\nselected_pathways_names &lt;- c(\"immunoglobulin production\", \"production of molecular mediator of immune response\")\n# Use function\nresult_names_deseq2 &lt;- pathway_description(GO_deseq2, selected_pathways_names, erich.go.BP.outdata_deseq2)\n# View the results\nhead(result_names_deseq2, 5)\n\n           Symble               Description Exists\n1           ADIRF immunoglobulin production      0\n2 ATP6V1G2-DDX39B immunoglobulin production      0\n3           BANCR immunoglobulin production      0\n4           BOLA2 immunoglobulin production      0\n5         C1QTNF5 immunoglobulin production      0\n\n\n\n\n8.7.9 Label highly and lowly expressed genes and annotate corresponding colors\n\nselected_genes_deseq2 &lt;- result_threshold_deseq2 %&gt;%\n  dplyr::filter(Exists == 1) %&gt;%\n  dplyr::select(Symble) %&gt;%\n  dplyr::distinct()\n\n# Invoke the function\nresult_deseq2 &lt;- gene_color(selected_genes_deseq2, Diff_deseq2, \"#0000EE\", \"#fc4746\")\n\n# Add gene highlights to the plot\nadd_gene_highlights_p3 &lt;- highlight_genes(p2, result_deseq2, hilight_extend = 26)\n\nadd_gene_highlights_p3\n\n\n\n\n\n\n8.7.10 heatmap\n\np4&lt;- gheatmap(\n  add_gene_highlights_p3+ geom_tiplab(offset=15,size=2.5),\n  HeatdataDeseq2,\n  width = 1, \n  colnames_offset_y = 0.5,\n  font.size= 2, \n  hjust = 0)+ scale_fill_gradientn(colors = c(low = \"#c2d5e5\", high = \"steelblue\"))\n\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\n\np4\n\n\n\n\n\n\n8.7.11 ggtreeExtra::geom_fruit\n\n## Shorten a name that was too long\nresult_threshold_deseq2$Description &lt;- gsub(\"adaptive immune response based on somatic recombination of immune receptors built from immunoglobulin superfamily domains\",\n                                            \"adaptive immune response\", result_threshold_deseq2$Description)\n\n# Enhance the visualization with additional scale and elements\np7 &lt;- p4 + new_scale_fill() +\n  geom_fruit(data = result_threshold_deseq2, geom = geom_tile,\n              mapping = aes(y = Symble, x = Description, alpha = Exists, fill = Description),\n              color = \"grey50\", pwidth = 0.5, offset = 1.02, size = 0.02) +\n  scale_alpha_continuous(range = c(0.2, 0.8),\n                          guide = guide_legend(keywidth = 0.3, keyheight = 0.3,  order = 2)) +\n  scale_fill_manual(values = c(\"#CD6600\", \"#009933\", \"#0000EE\", \"#9B30FF\", \"#FF4040\"), guide = guide_legend(keywidth = 0.3, keyheight = 0.3, order = 2))\n\np7\n\n\n\n\n\n\n8.7.12 Bar plot section\n\n# offset: Adjust the spacing between each bar\np8 &lt;- p7 + new_scale_fill() + \n  geom_fruit(data = Diff_deseq2, geom = geom_bar, mapping = aes(y = ID, x = log_pvalue, fill = \"log_pvalue\"), pwidth = 0.3, offset = 0.1, orientation = \"y\", stat = \"identity\") +\n  geom_fruit(data = Diff_deseq2, geom = geom_bar, mapping = aes(y = ID, x = log2FoldChange, fill = \"log2FoldChange\"), pwidth = 0.3, offset = 0.2, orientation = \"y\", stat = \"identity\") +\n  geom_fruit(data = Diff_deseq2, geom = geom_bar, mapping = aes(y = ID, x = average, fill = \"average\"), pwidth = 0.3, offset = 0.04, orientation = \"y\", stat = \"identity\") +\n  scale_fill_manual(values = c(\"log_pvalue\" = \"#87CEFA\", \"log2FoldChange\" = \"#FFC125\", \"average\" = \"#7B68EE\"))\n\np8"
  },
  {
    "objectID": "Enrichment Spiralize.html#load-data",
    "href": "Enrichment Spiralize.html#load-data",
    "title": "9  Enrichment Spiralize",
    "section": "9.1 load data",
    "text": "9.1 load data\n\ntumor &lt;- readRDS(\"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\")\nnormal &lt;- readRDS('../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds')\n# Merge the datasets, ensuring both have genes as row names\nall_count_exp &lt;- merge(tumor, normal, by = \"row.names\")\nall_count_exp &lt;- tibble::column_to_rownames(all_count_exp, var = \"Row.names\")  # Set the row names\n\n# Drawing data\n# all_count_exp &lt;- log_transform(all_count_exp)\nDEG_deseq2 &lt;- readRDS('../test_TransProR/Select DEGs/DEG_deseq2.Rdata')\n#head(all_count_exp, 1)\nhead(DEG_deseq2, 5)\n\n          baseMean log2FoldChange      lfcSE      stat pvalue padj change\nA1BG      134.6084      -2.549682 0.05677219 -44.91075      0    0   down\nA2M     30208.9912       3.251168 0.08394645  38.72907      0    0     up\nAADACL2   801.4538      -8.229956 0.18969649 -43.38486      0    0   down\nAARS2    1153.5493       1.624753 0.03283522  49.48202      0    0 stable\nAARSD1    567.8672      -2.082289 0.02275703 -91.50088      0    0 stable"
  },
  {
    "objectID": "Enrichment Spiralize.html#convert-from-symbol-to-entrezid",
    "href": "Enrichment Spiralize.html#convert-from-symbol-to-entrezid",
    "title": "9  Enrichment Spiralize",
    "section": "9.2 Convert from SYMBOL to ENTREZID",
    "text": "9.2 Convert from SYMBOL to ENTREZID\n\n# Convert from SYMBOL to ENTREZID for convenient enrichment analysis later. It's crucial to do this now as a direct conversion may result in a reduced set of genes due to non-one-to-one correspondence.\n\n# DEG_deseq2\n# Retrieve gene list\ngene &lt;- rownames(DEG_deseq2)\n# Perform conversion\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n\n'select()' returned 1:many mapping between keys and columns\n\n\nWarning in bitr(gene, fromType = \"SYMBOL\", toType = \"ENTREZID\", OrgDb =\n\"org.Hs.eg.db\"): 43.37% of input gene IDs are fail to map...\n\n# Remove duplicates and merge\ngene &lt;- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\n# Extract the SYMBOL column as a vector from the first dataset\nsymbols_vector &lt;- gene$SYMBOL\n# Use the SYMBOL column to filter corresponding rows from the second dataset by row names\nDEG_deseq2 &lt;- DEG_deseq2[rownames(DEG_deseq2) %in% symbols_vector, ]\nhead(DEG_deseq2, 5)\n\n          baseMean log2FoldChange      lfcSE      stat pvalue padj change\nA1BG      134.6084      -2.549682 0.05677219 -44.91075      0    0   down\nA2M     30208.9912       3.251168 0.08394645  38.72907      0    0     up\nAADACL2   801.4538      -8.229956 0.18969649 -43.38486      0    0   down\nAARS2    1153.5493       1.624753 0.03283522  49.48202      0    0 stable\nAARSD1    567.8672      -2.082289 0.02275703 -91.50088      0    0 stable\n\n\n\nDiff_deseq2 &lt;- filter_diff_genes(\n  DEG_deseq2, \n  p_val_col = \"pvalue\", \n  log_fc_col = \"log2FoldChange\",\n  p_val_threshold = 0.05, \n  log_fc_threshold = 3\n)\n# First, obtain a list of gene names from the row names of the first dataset\ngene_names &lt;- rownames(Diff_deseq2)\n# Find the matching rows in the second dataframe\nmatched_rows &lt;- all_count_exp[gene_names, ]\n# Calculate the mean for each row\naverages &lt;- rowMeans(matched_rows, na.rm = TRUE)\n# Append the averages as a new column to the first dataframe\nDiff_deseq2$average &lt;- averages\nDiff_deseq2$ID &lt;- rownames(Diff_deseq2)\nDiff_deseq2$changetype &lt;- ifelse(Diff_deseq2$change == 'up', 1, -1)\n# Define a small threshold value\nsmall_value &lt;- .Machine$double.xmin\n# Before calculating -log10, replace zeroes with the small threshold value and assign it to a new column\nDiff_deseq2$log_pvalue &lt;- ifelse(Diff_deseq2$pvalue == 0, -log10(small_value), -log10(Diff_deseq2$pvalue))\n# Extract the expression data corresponding to the differentially expressed genes\nheatdata_deseq2 &lt;- all_count_exp[rownames(Diff_deseq2), ]\n\nset.seed(123)\n# Preparing heatdata for visualization\nHeatdataDeseq2 &lt;- TransProR::process_heatdata(heatdata_deseq2, \n                                              selection = 2, \n                                              custom_names = NULL, \n                                              num_names_per_group = 3, \n                                              prefix_length = 4)\nHeatdataDeseq2 &lt;- as.matrix(HeatdataDeseq2)\n\n\n## Using the msigdbr package to download and prepare for GSVA analysis with KEGG and GO gene sets\n## KEGG\nKEGG_df_all &lt;- msigdbr(species = \"Homo sapiens\", # Homo sapiens or Mus musculus\n                        category = \"C2\",\n                        subcategory = \"CP:KEGG\") \nKEGG_df &lt;- dplyr::select(KEGG_df_all, gs_name, gs_exact_source, gene_symbol)\nkegg_list &lt;- split(KEGG_df$gene_symbol, KEGG_df$gs_name) # Grouping gene symbols by gs_name\nhead(kegg_list)\n\n$KEGG_ABC_TRANSPORTERS\n [1] \"ABCA1\"  \"ABCA10\" \"ABCA12\" \"ABCA13\" \"ABCA2\"  \"ABCA3\"  \"ABCA4\"  \"ABCA5\" \n [9] \"ABCA6\"  \"ABCA7\"  \"ABCA8\"  \"ABCA9\"  \"ABCB1\"  \"ABCB10\" \"ABCB11\" \"ABCB11\"\n[17] \"ABCB4\"  \"ABCB5\"  \"ABCB6\"  \"ABCB7\"  \"ABCB8\"  \"ABCB9\"  \"ABCC1\"  \"ABCC1\" \n[25] \"ABCC10\" \"ABCC11\" \"ABCC12\" \"ABCC2\"  \"ABCC3\"  \"ABCC4\"  \"ABCC5\"  \"ABCC6\" \n[33] \"ABCC6\"  \"ABCC8\"  \"ABCC9\"  \"ABCD1\"  \"ABCD2\"  \"ABCD3\"  \"ABCD4\"  \"ABCG1\" \n[41] \"ABCG2\"  \"ABCG4\"  \"ABCG5\"  \"ABCG8\"  \"CFTR\"   \"TAP1\"   \"TAP1\"   \"TAP1\"  \n[49] \"TAP1\"   \"TAP1\"   \"TAP1\"   \"TAP1\"   \"TAP1\"   \"TAP2\"   \"TAP2\"   \"TAP2\"  \n[57] \"TAP2\"   \"TAP2\"   \"TAP2\"   \"TAP2\"   \"TAP2\"  \n\n$KEGG_ACUTE_MYELOID_LEUKEMIA\n [1] \"AKT1\"     \"AKT2\"     \"AKT3\"     \"AKT3\"     \"ARAF\"     \"BAD\"     \n [7] \"BRAF\"     \"CCNA1\"    \"CCND1\"    \"CEBPA\"    \"CHUK\"     \"EIF4EBP1\"\n[13] \"FLT3\"     \"GRB2\"     \"HRAS\"     \"HRAS\"     \"IKBKB\"    \"IKBKG\"   \n[19] \"JUP\"      \"KIT\"      \"KRAS\"     \"LEF1\"     \"MAP2K1\"   \"MAP2K2\"  \n[25] \"MAPK1\"    \"MAPK3\"    \"MTOR\"     \"MYC\"      \"NFKB1\"    \"NRAS\"    \n[31] \"PIK3CA\"   \"PIK3CB\"   \"PIK3CD\"   \"PIK3CG\"   \"PIK3R1\"   \"PIK3R2\"  \n[37] \"PIK3R3\"   \"PIK3R5\"   \"PIM1\"     \"PIM2\"     \"PML\"      \"PPARD\"   \n[43] \"RAF1\"     \"RARA\"     \"RELA\"     \"RPS6KB1\"  \"RPS6KB2\"  \"RUNX1\"   \n[49] \"RUNX1T1\"  \"SOS1\"     \"SOS2\"     \"SPI1\"     \"STAT3\"    \"STAT5A\"  \n[55] \"STAT5B\"   \"TCF7\"     \"TCF7L1\"   \"TCF7L2\"   \"ZBTB16\"  \n\n$KEGG_ADHERENS_JUNCTION\n [1] \"ACP1\"    \"ACTB\"    \"ACTG1\"   \"ACTN1\"   \"ACTN2\"   \"ACTN3\"   \"ACTN4\"  \n [8] \"ACTN4\"   \"AFDN\"    \"BAIAP2\"  \"CDC42\"   \"CDH1\"    \"CREBBP\"  \"CSNK2A1\"\n[15] \"CSNK2A2\" \"CSNK2B\"  \"CSNK2B\"  \"CSNK2B\"  \"CSNK2B\"  \"CSNK2B\"  \"CSNK2B\" \n[22] \"CSNK2B\"  \"CSNK2B\"  \"CTNNA1\"  \"CTNNA2\"  \"CTNNA3\"  \"CTNNB1\"  \"CTNND1\" \n[29] \"EGFR\"    \"EP300\"   \"ERBB2\"   \"FARP2\"   \"FER\"     \"FGFR1\"   \"FYN\"    \n[36] \"IGF1R\"   \"INSR\"    \"IQGAP1\"  \"LEF1\"    \"LMO7\"    \"MAP3K7\"  \"MAPK1\"  \n[43] \"MAPK3\"   \"MET\"     \"NECTIN1\" \"NECTIN2\" \"NECTIN3\" \"NECTIN4\" \"NLK\"    \n[50] \"PARD3\"   \"PTPN1\"   \"PTPN6\"   \"PTPRB\"   \"PTPRF\"   \"PTPRJ\"   \"PTPRM\"  \n[57] \"RAC1\"    \"RAC2\"    \"RAC3\"    \"RHOA\"    \"SMAD2\"   \"SMAD3\"   \"SMAD4\"  \n[64] \"SNAI1\"   \"SNAI2\"   \"SORBS1\"  \"SRC\"     \"SSX2IP\"  \"TCF7\"    \"TCF7L1\" \n[71] \"TCF7L2\"  \"TGFBR1\"  \"TGFBR2\"  \"TJP1\"    \"TJP1\"    \"VCL\"     \"WAS\"    \n[78] \"WASF1\"   \"WASF2\"   \"WASF3\"   \"WASL\"    \"YES1\"   \n\n$KEGG_ADIPOCYTOKINE_SIGNALING_PATHWAY\n [1] \"ACACB\"    \"ACSL1\"    \"ACSL3\"    \"ACSL4\"    \"ACSL5\"    \"ACSL6\"   \n [7] \"ADIPOQ\"   \"ADIPOR1\"  \"ADIPOR2\"  \"ADIPOR2\"  \"AGRP\"     \"AKT1\"    \n[13] \"AKT2\"     \"AKT3\"     \"AKT3\"     \"CAMKK1\"   \"CAMKK2\"   \"CD36\"    \n[19] \"CHUK\"     \"CPT1A\"    \"CPT1B\"    \"CPT1C\"    \"G6PC1\"    \"G6PC2\"   \n[25] \"G6PC2\"    \"IKBKB\"    \"IKBKG\"    \"IRS1\"     \"IRS2\"     \"IRS4\"    \n[31] \"JAK2\"     \"LEP\"      \"LEPR\"     \"MAPK10\"   \"MAPK8\"    \"MAPK9\"   \n[37] \"MTOR\"     \"NFKB1\"    \"NFKBIA\"   \"NFKBIB\"   \"NFKBIB\"   \"NFKBIE\"  \n[43] \"NPY\"      \"PCK1\"     \"PCK2\"     \"PCK2\"     \"POMC\"     \"PPARA\"   \n[49] \"PPARGC1A\" \"PRKAA1\"   \"PRKAA2\"   \"PRKAB1\"   \"PRKAB2\"   \"PRKAG1\"  \n[55] \"PRKAG2\"   \"PRKAG3\"   \"PRKCQ\"    \"PTPN11\"   \"RELA\"     \"RXRA\"    \n[61] \"RXRB\"     \"RXRB\"     \"RXRB\"     \"RXRB\"     \"RXRB\"     \"RXRB\"    \n[67] \"RXRG\"     \"SLC2A1\"   \"SLC2A4\"   \"SLC2A4\"   \"SOCS3\"    \"STAT3\"   \n[73] \"STK11\"    \"TNF\"      \"TNF\"      \"TNF\"      \"TNF\"      \"TNF\"     \n[79] \"TNF\"      \"TNF\"      \"TNF\"      \"TNFRSF1A\" \"TNFRSF1B\" \"TRADD\"   \n[85] \"TRAF2\"   \n\n$KEGG_ALANINE_ASPARTATE_AND_GLUTAMATE_METABOLISM\n [1] \"ABAT\"    \"ACY3\"    \"ADSL\"    \"ADSS1\"   \"ADSS2\"   \"AGXT\"    \"AGXT2\"  \n [8] \"ALDH4A1\" \"ALDH5A1\" \"ASL\"     \"ASNS\"    \"ASPA\"    \"ASS1\"    \"CAD\"    \n[15] \"CPS1\"    \"DDO\"     \"GAD1\"    \"GAD2\"    \"GFPT1\"   \"GFPT2\"   \"GLS\"    \n[22] \"GLS2\"    \"GLUD1\"   \"GLUD2\"   \"GLUD2\"   \"GLUL\"    \"GOT1\"    \"GOT2\"   \n[29] \"GPT\"     \"GPT2\"    \"IL4I1\"   \"NIT2\"    \"PPAT\"   \n\n$KEGG_ALDOSTERONE_REGULATED_SODIUM_REABSORPTION\n [1] \"ATP1A1\"   \"ATP1A2\"   \"ATP1A3\"   \"ATP1A4\"   \"ATP1B1\"   \"ATP1B2\"  \n [7] \"ATP1B3\"   \"ATP1B4\"   \"FXYD2\"    \"FXYD4\"    \"HSD11B1\"  \"HSD11B2\" \n[13] \"IGF1\"     \"INS\"      \"INSR\"     \"IRS1\"     \"IRS2\"     \"IRS4\"    \n[19] \"KCNJ1\"    \"KRAS\"     \"MAPK1\"    \"MAPK3\"    \"NEDD4L\"   \"NR3C2\"   \n[25] \"PDPK1\"    \"PIK3CA\"   \"PIK3CB\"   \"PIK3CD\"   \"PIK3CG\"   \"PIK3R1\"  \n[31] \"PIK3R2\"   \"PIK3R3\"   \"PIK3R5\"   \"PRKCA\"    \"PRKCB\"    \"PRKCG\"   \n[37] \"SCNN1A\"   \"SCNN1B\"   \"SCNN1G\"   \"SFN\"      \"SGK1\"     \"SLC9A3R2\"\n\n## GO\nGO_df_all &lt;- msigdbr(species = \"Homo sapiens\",\n                      category = \"C5\")  \nGO_df &lt;- dplyr::select(GO_df_all, gs_name, gene_symbol, gs_exact_source, gs_subcat)\nGO_df &lt;- GO_df[GO_df$gs_subcat != \"HPO\",]\ngo_list &lt;- split(GO_df$gene_symbol, GO_df$gs_name) # Grouping gene symbols by gs_name\nhead(go_list)\n\n$GOBP_10_FORMYLTETRAHYDROFOLATE_METABOLIC_PROCESS\n[1] \"AASDHPPT\" \"ALDH1L1\"  \"ALDH1L2\"  \"MTHFD1\"   \"MTHFD1L\"  \"MTHFD2L\" \n\n$GOBP_2_OXOGLUTARATE_METABOLIC_PROCESS\n [1] \"AADAT\"  \"ADHFE1\" \"D2HGDH\" \"DLST\"   \"GOT1\"   \"GOT2\"   \"GPT2\"   \"IDH1\"  \n [9] \"IDH2\"   \"IDH3B\"  \"KYAT3\"  \"L2HGDH\" \"MRPS36\" \"MRPS36\" \"OGDH\"   \"OGDHL\" \n[17] \"PHYH\"   \"TAT\"   \n\n$GOBP_2FE_2S_CLUSTER_ASSEMBLY\n[1] \"BOLA2\"  \"BOLA2B\" \"GLRX3\"  \"GLRX5\"  \"HSCB\"   \"NFS1\"  \n\n$GOBP_3_PHOSPHOADENOSINE_5_PHOSPHOSULFATE_BIOSYNTHETIC_PROCESS\n[1] \"PAPSS1\"  \"PAPSS2\"  \"SLC26A1\" \"SLC26A2\" \"SLC35B2\" \"SLC35B3\"\n\n$GOBP_3_PHOSPHOADENOSINE_5_PHOSPHOSULFATE_METABOLIC_PROCESS\n [1] \"ABHD14B\" \"BPNT1\"   \"ENPP1\"   \"PAPSS1\"  \"PAPSS2\"  \"SLC26A1\" \"SLC26A2\"\n [8] \"SLC35B2\" \"SLC35B3\" \"SULT1A1\" \"SULT1A2\" \"SULT1A3\" \"SULT1A4\" \"SULT1B1\"\n[15] \"SULT1C3\" \"SULT1C4\" \"SULT1E1\" \"SULT2A1\" \"SULT2B1\" \"TPST1\"   \"TPST2\"  \n\n$GOBP_3_UTR_MEDIATED_MRNA_DESTABILIZATION\n [1] \"CPEB3\"   \"DHX36\"   \"DHX36\"   \"DND1\"    \"DND1\"    \"HNRNPD\"  \"KHSRP\"  \n [8] \"MOV10\"   \"PLEKHN1\" \"RBM24\"   \"RC3H1\"   \"TARDBP\"  \"TRIM71\"  \"UPF1\"   \n[15] \"ZC3H12A\" \"ZC3H12D\" \"ZFP36\"   \"ZFP36L1\" \"ZFP36L2\"\n\n#write.csv(gsva_mat, \"gsva_go_matrix.csv\")\n\nssgsea_kegg &lt;- gsva(expr = HeatdataDeseq2, \n                    gset.idx.list = kegg_list, \n                    kcdf = \"Poisson\", #\"Gaussian\" for logCPM, logRPKM, logTPM, \"Poisson\" for counts\n                    method = \"ssgsea\",\n                    verbose = TRUE\n                    #parallel.sz = parallel::detectCores() # Utilize all available cores\n)\n\nWarning: Calling gsva(expr=., gset.idx.list=., method=., ...) is deprecated;\nuse a method-specific parameter object (see '?gsva').\n\n\nWarning in .filterFeatures(expr, method): 37 genes with constant expression\nvalues throughout the samples.\n\n\nWarning in .gsva(expr, mapped.gset.idx.list, method, kcdf, rnaseq, abs.ranking,\n: Some gene sets have size one. Consider setting 'min.sz &gt; 1'.\n\n\nEstimating ssGSEA scores for 171 gene sets.\n[1] \"Calculating ranks...\"\n[1] \"Calculating absolute values from ranks...\"\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |======================================================================| 100%\n\n[1] \"Normalizing...\"\n\nssgsea_kegg &lt;- as.data.frame(ssgsea_kegg)"
  },
  {
    "objectID": "Enrichment Spiralize.html#set-color",
    "href": "Enrichment Spiralize.html#set-color",
    "title": "9  Enrichment Spiralize",
    "section": "9.3 set color",
    "text": "9.3 set color\n\nnTop = 5\nresults1 &lt;- extract_ntop_pathways(ssgsea_kegg = ssgsea_kegg, nTop = nTop)\nresults2 &lt;- extract_positive_pathways(ssgsea_kegg, max_paths_per_sample = 5)\n# Set the required number of transition colors\n\nnumber_of_colors &lt;- nTop\n\n# Define start and end colors\nstart_color1 &lt;- \"#fd8d63\"  \nend_color1 &lt;- \"#ededed\"    \n# Use colorRampPalette to generate color transitions\ncolor_palette1 &lt;- colorRampPalette(c(start_color1, end_color1))\ninterpolated_colors1 &lt;- color_palette1(number_of_colors)\n\nstart_color2 &lt;- \"#673ab7\"  \nend_color2 &lt;- \"#d1c4e9\"    \ncolor_palette2 &lt;- colorRampPalette(c(start_color2, end_color2))\ninterpolated_colors2 &lt;- color_palette2(number_of_colors)\n\nstart_color3 &lt;- \"#6ac1a7\"  \nend_color3 &lt;- \"#ededed\"    \ncolor_palette3 &lt;- colorRampPalette(c(start_color3, end_color3))\ninterpolated_colors3 &lt;- color_palette3(number_of_colors)\n\nstart_color4 &lt;- \"#2196f3\"  \nend_color4 &lt;- \"#bbdefb\"    \ncolor_palette4 &lt;- colorRampPalette(c(start_color4, end_color4))\ninterpolated_colors4 &lt;- color_palette4(number_of_colors)\n\nstart_color5 &lt;- \"#ffdb37\"  \nend_color5 &lt;- \"#ededed\"    \ncolor_palette5 &lt;- colorRampPalette(c(start_color5, end_color5))\ninterpolated_colors5 &lt;- color_palette5(number_of_colors)\n\nstart_color6 &lt;- \"#00bcd4\"  \nend_color6 &lt;- \"#b2ebf2\"    \ncolor_palette6 &lt;- colorRampPalette(c(start_color6, end_color6))\ninterpolated_colors6 &lt;- color_palette6(number_of_colors)\n\nstart_color7 &lt;- \"#a7da55\"  \nend_color7 &lt;- \"#ededed\"    \ncolor_palette7 &lt;- colorRampPalette(c(start_color7, end_color7))\ninterpolated_colors7 &lt;- color_palette7(number_of_colors)\n\nstart_color8 &lt;- \"#43a047\"  \nend_color8 &lt;- \"#c8e6c9\"    \ncolor_palette8 &lt;- colorRampPalette(c(start_color8, end_color8))\ninterpolated_colors8 &lt;- color_palette8(number_of_colors)\n\nstart_color9 &lt;- \"#e68bc1\"  \nend_color9 &lt;- \"#ededed\"    \ncolor_palette9 &lt;- colorRampPalette(c(start_color9, end_color9))\ninterpolated_colors9 &lt;- color_palette9(number_of_colors)\n\nstart_color10 &lt;- \"#cddc39\"  \nend_color10 &lt;- \"#f0f4c3\"    \ncolor_palette10 &lt;- colorRampPalette(c(start_color10, end_color10))\ninterpolated_colors10 &lt;- color_palette10(number_of_colors)\n\nstart_color11 &lt;- \"#8fa1cc\"  \nend_color11 &lt;- \"#ededed\"    \ncolor_palette11 &lt;- colorRampPalette(c(start_color11, end_color11))\ninterpolated_colors11 &lt;- color_palette11(number_of_colors)\n\nstart_color12 &lt;- \"#ff8f00\"  \nend_color12 &lt;- \"#ffecb3\"    \ncolor_palette12 &lt;- colorRampPalette(c(start_color12, end_color12))\ninterpolated_colors12 &lt;- color_palette12(number_of_colors)\n\n# Print the resulting colors\nPathwaycolor2 &lt;- c(interpolated_colors1, interpolated_colors3, interpolated_colors5, interpolated_colors7, interpolated_colors9, interpolated_colors11)\nprint(Pathwaycolor2)\n\n [1] \"#FD8D63\" \"#F9A585\" \"#F5BDA8\" \"#F1D5CA\" \"#EDEDED\" \"#6AC1A7\" \"#8ACCB8\"\n [8] \"#ABD7CA\" \"#CCE2DB\" \"#EDEDED\" \"#FFDB37\" \"#FADF64\" \"#F6E392\" \"#F1E8BF\"\n[15] \"#EDEDED\" \"#A7DA55\" \"#B8DE7B\" \"#CAE3A1\" \"#DBE8C7\" \"#EDEDED\" \"#E68BC1\"\n[22] \"#E7A3CC\" \"#E9BCD7\" \"#EBD4E2\" \"#EDEDED\" \"#8FA1CC\" \"#A6B3D4\" \"#BEC7DC\"\n[29] \"#D5DAE4\" \"#EDEDED\"\n\nSamplecolor2 &lt;- c(start_color1, start_color3, start_color5, start_color7, start_color9, start_color11)\nprint(Samplecolor2)\n\n[1] \"#fd8d63\" \"#6ac1a7\" \"#ffdb37\" \"#a7da55\" \"#e68bc1\" \"#8fa1cc\"\n\nresults1$PathwayColor &lt;- Pathwaycolor2\nresults2$PathwayColor &lt;- Pathwaycolor2\n# Create a color mapping for the Sample column\nSample_colors2 &lt;- setNames(Samplecolor2, unique(results1$Sample))\nSample_colors2 &lt;- setNames(Samplecolor2, unique(results2$Sample))\n# Add SampleColor column to the DataFrame\nresults1$SampleColor &lt;- Sample_colors2[results1$Sample]\nresults2$SampleColor &lt;- Sample_colors2[results2$Sample]\n# View the results\nprint(head(results1))\n\n                                           Pathway Sample     Value\n1                       KEGG_RIBOFLAVIN_METABOLISM TCGA_1 0.5417180\n2                              KEGG_PRION_DISEASES TCGA_1 0.5324760\n3                     KEGG_BETA_ALANINE_METABOLISM TCGA_1 0.5187272\n4 KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM TCGA_1 0.5169535\n5                        KEGG_LEISHMANIA_INFECTION TCGA_1 0.5003448\n6                       KEGG_RIBOFLAVIN_METABOLISM TCGA_2 0.5345860\n  PathwayColor SampleColor\n1      #FD8D63     #fd8d63\n2      #F9A585     #fd8d63\n3      #F5BDA8     #fd8d63\n4      #F1D5CA     #fd8d63\n5      #EDEDED     #fd8d63\n6      #6AC1A7     #6ac1a7\n\nprint(head(results2))\n\n                                     Pathway Sample     Value PathwayColor\n1                    KEGG_ENDOMETRIAL_CANCER TCGA_1 0.4091193      #FD8D63\n2       KEGG_ARGININE_AND_PROLINE_METABOLISM TCGA_1 0.1608353      #F9A585\n3                 KEGG_RIBOFLAVIN_METABOLISM TCGA_1 0.5417180      #F5BDA8\n4            KEGG_NON_HOMOLOGOUS_END_JOINING TCGA_1 0.2218331      #F1D5CA\n5            KEGG_NON_SMALL_CELL_LUNG_CANCER TCGA_1 0.3934194      #EDEDED\n6 KEGG_PATHOGENIC_ESCHERICHIA_COLI_INFECTION TCGA_2 0.1543440      #6AC1A7\n  SampleColor\n1     #fd8d63\n2     #fd8d63\n3     #fd8d63\n4     #fd8d63\n5     #fd8d63\n6     #6ac1a7"
  },
  {
    "objectID": "Enrichment Spiralize.html#sort",
    "href": "Enrichment Spiralize.html#sort",
    "title": "9  Enrichment Spiralize",
    "section": "9.4 Sort",
    "text": "9.4 Sort\n\nenrichment_spiral_plots(results1)"
  },
  {
    "objectID": "Enrichment Spiralize.html#random",
    "href": "Enrichment Spiralize.html#random",
    "title": "9  Enrichment Spiralize",
    "section": "9.5 Random",
    "text": "9.5 Random\n\nenrichment_spiral_plots(results2)"
  },
  {
    "objectID": "Enrichment Spiralize.html#reference",
    "href": "Enrichment Spiralize.html#reference",
    "title": "9  Enrichment Spiralize",
    "section": "9.6 Reference",
    "text": "9.6 Reference\n\n\nspiralize:\n\n\nZuguang Gu, et al., spiralize: an R package for Visualizing Data on Spirals, Bioinformatics, 2021.\n\n\nComplexHeatmap:\n\n\nComplex heatmaps reveal patterns and correlations in multidimensional genomic data\nComplex heatmap visualization\n\n\nggplot2:\n\n\ngithub:ggplot2\nAn implementation of the Grammar of Graphics in R"
  },
  {
    "objectID": "Enrichment ggraph.html",
    "href": "Enrichment ggraph.html",
    "title": "10  Enrichment ggraph",
    "section": "",
    "text": "11 new_ggraph usage\nnewggraph &lt;- new_ggraph(\n  BP_dataframe = erich.go.BP.outdata_deseq2, \n  BP_ids = c(\"GO:0009913\", \"GO:0031424\", \"GO:0030216\"), \n  KEGG_dataframe = kegg.out1.outdata_deseq2, \n  KEGG_ids = c(\"hsa05150\", \"hsa04915\", \"hsa04970\"), \n  MF_dataframe = erich.go.MF.outdata_deseq2, \n  MF_ids = c(\"GO:0030280\", \"GO:0034987\"), \n  REACTOME_dataframe = erich.go.Reactome.outdata_deseq2, \n  REACTOME_ids = c(\"R-HSA-6809371\"), \n  CC_dataframe = erich.go.CC.outdata_deseq2, \n  CC_ids = c(\"GO:0072562\", \"GO:0042571\", \"GO:0071735\"), \n  DO_dataframe = erich.go.DO.outdata_deseq2, \n  DO_ids = c(\"DOID:0060121\", \"DOID:3165\", \"DOID:11132\", \"DOID:421\"))\n\nnewggraph"
  },
  {
    "objectID": "Enrichment ggraph.html#load-data",
    "href": "Enrichment ggraph.html#load-data",
    "title": "10  Enrichment ggraph",
    "section": "10.1 Load data",
    "text": "10.1 Load data\n\ntumor &lt;- readRDS(\"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\")\nnormal &lt;- readRDS('../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds')\n# Merge the datasets, ensuring both have genes as row names\nall_count_exp &lt;- merge(tumor, normal, by = \"row.names\")\nall_count_exp &lt;- tibble::column_to_rownames(all_count_exp, var = \"Row.names\")  # Set the row names\n\n# Drawing data\nall_count_exp &lt;- log_transform(all_count_exp)\n\n[1] \"log2 transform finished\"\n\nDEG_deseq2 &lt;- readRDS('../test_TransProR/Select DEGs/DEG_deseq2.Rdata')\n#head(all_count_exp, 1)\nhead(DEG_deseq2, 5)\n\n          baseMean log2FoldChange      lfcSE      stat pvalue padj change\nA1BG      134.6084      -2.549682 0.05677219 -44.91075      0    0   down\nA2M     30208.9912       3.251168 0.08394645  38.72907      0    0     up\nAADACL2   801.4538      -8.229956 0.18969649 -43.38486      0    0   down\nAARS2    1153.5493       1.624753 0.03283522  49.48202      0    0 stable\nAARSD1    567.8672      -2.082289 0.02275703 -91.50088      0    0 stable"
  },
  {
    "objectID": "Enrichment ggraph.html#convert-from-symbol-to-entrezid",
    "href": "Enrichment ggraph.html#convert-from-symbol-to-entrezid",
    "title": "10  Enrichment ggraph",
    "section": "10.2 Convert from SYMBOL to ENTREZID",
    "text": "10.2 Convert from SYMBOL to ENTREZID\n\n# Convert from SYMBOL to ENTREZID for convenient enrichment analysis later. It's crucial to do this now as a direct conversion may result in a reduced set of genes due to non-one-to-one correspondence.\n\n# DEG_deseq2\n# Retrieve gene list\ngene &lt;- rownames(DEG_deseq2)\n# Perform conversion\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n\n'select()' returned 1:many mapping between keys and columns\n\n\nWarning in bitr(gene, fromType = \"SYMBOL\", toType = \"ENTREZID\", OrgDb =\n\"org.Hs.eg.db\"): 43.37% of input gene IDs are fail to map...\n\n# Remove duplicates and merge\ngene &lt;- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\n# Extract the SYMBOL column as a vector from the first dataset\nsymbols_vector &lt;- gene$SYMBOL\n# Use the SYMBOL column to filter corresponding rows from the second dataset by row names\nDEG_deseq2 &lt;- DEG_deseq2[rownames(DEG_deseq2) %in% symbols_vector, ]\nhead(DEG_deseq2, 5)\n\n          baseMean log2FoldChange      lfcSE      stat pvalue padj change\nA1BG      134.6084      -2.549682 0.05677219 -44.91075      0    0   down\nA2M     30208.9912       3.251168 0.08394645  38.72907      0    0     up\nAADACL2   801.4538      -8.229956 0.18969649 -43.38486      0    0   down\nAARS2    1153.5493       1.624753 0.03283522  49.48202      0    0 stable\nAARSD1    567.8672      -2.082289 0.02275703 -91.50088      0    0 stable"
  },
  {
    "objectID": "Enrichment ggraph.html#select-differentially-expressed-genes",
    "href": "Enrichment ggraph.html#select-differentially-expressed-genes",
    "title": "10  Enrichment ggraph",
    "section": "10.3 Select differentially expressed genes",
    "text": "10.3 Select differentially expressed genes\n\nDiff_deseq2 &lt;- filter_diff_genes(\n  DEG_deseq2, \n  p_val_col = \"pvalue\", \n  log_fc_col = \"log2FoldChange\",\n  p_val_threshold = 0.01, \n  log_fc_threshold = 8\n  )\n# First, obtain a list of gene names from the row names of the first dataset\ngene_names &lt;- rownames(Diff_deseq2)\n# Find the matching rows in the second dataframe\nmatched_rows &lt;- all_count_exp[gene_names, ]\n# Calculate the mean for each row\naverages &lt;- rowMeans(matched_rows, na.rm = TRUE)\n# Append the averages as a new column to the first dataframe\nDiff_deseq2$average &lt;- averages\nDiff_deseq2$ID &lt;- rownames(Diff_deseq2)\nDiff_deseq2$changetype &lt;- ifelse(Diff_deseq2$change == 'up', 1, -1)\n# Define a small threshold value\nsmall_value &lt;- .Machine$double.xmin\n# Before calculating -log10, replace zeroes with the small threshold value and assign it to a new column\nDiff_deseq2$log_pvalue &lt;- ifelse(Diff_deseq2$pvalue == 0, -log10(small_value), -log10(Diff_deseq2$pvalue))\n# Extract the expression data corresponding to the differentially expressed genes\nheatdata_deseq2 &lt;- all_count_exp[rownames(Diff_deseq2), ]\n#head(heatdata_deseq2, 1)"
  },
  {
    "objectID": "Enrichment ggraph.html#diff_deseq2-enrichment-analysis",
    "href": "Enrichment ggraph.html#diff_deseq2-enrichment-analysis",
    "title": "10  Enrichment ggraph",
    "section": "10.4 Diff_deseq2 Enrichment Analysis",
    "text": "10.4 Diff_deseq2 Enrichment Analysis\n\n10.4.1 Obtain the list of genes\n\ngene &lt;- rownames(Diff_deseq2)\n## Convert\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n\n'select()' returned 1:1 mapping between keys and columns\n\n## Remove duplicates and merge\ngene &lt;- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\ngene_df &lt;- data.frame(logFC=Diff_deseq2$log2FoldChange,\n                      SYMBOL = rownames(Diff_deseq2))\ngene_df &lt;- merge(gene_df, gene, by=\"SYMBOL\")\nGO_deseq2 &lt;- gene_df$ENTREZID\n\n\n\n10.4.2 GO Analysis for Biological Processes (BP)\n\n# Perform gene enrichment analysis\nerich.go.BP_deseq2 &lt;- enrichGO(\n  gene = GO_deseq2,\n  OrgDb = org.Hs.eg.db,\n  keyType = \"ENTREZID\",\n  ont = 'BP', # Other categories: \"CC\", \"MF\" for molecular function\n  pvalueCutoff = 0.05,\n  qvalueCutoff = 0.05,\n  readable = TRUE)\nerich.go.BP.outdata_deseq2 &lt;- as.data.frame(erich.go.BP_deseq2)\n# Uncomment to write output to CSV\n# write.csv(erich.go.BP.outdata_deseq2, \"E:/fruit/erich.go.BP.outdata.csv\")\nhead(erich.go.BP.outdata_deseq2, 5)\n\n                   ID                                         Description\nGO:0002377 GO:0002377                           immunoglobulin production\nGO:0002440 GO:0002440 production of molecular mediator of immune response\nGO:0016064 GO:0016064             immunoglobulin mediated immune response\nGO:0019724 GO:0019724                            B cell mediated immunity\nGO:0002449 GO:0002449                        lymphocyte mediated immunity\n           GeneRatio   BgRatio       pvalue     p.adjust       qvalue\nGO:0002377    34/179 196/18870 2.480604e-33 2.909749e-30 2.909749e-30\nGO:0002440    34/179 314/18870 3.023121e-26 1.773060e-23 1.773060e-23\nGO:0016064    29/179 205/18870 7.968166e-26 3.115553e-23 3.115553e-23\nGO:0019724    29/179 208/18870 1.224253e-25 3.590121e-23 3.590121e-23\nGO:0002449    30/179 368/18870 1.235430e-19 2.898319e-17 2.898319e-17\n                                                                                                                                                                                                                                                                                                          geneID\nGO:0002377 IGKV1-16/IGKV1-17/IGKV1-27/IGKV1-5/IGKV1-6/IGKV1-9/IGKV2D-29/IGKV3-15/IGKV3-20/IGKV3D-20/IGKV4-1/IGKV5-2/IGLV1-40/IGLV1-44/IGLV1-47/IGLV2-11/IGLV2-14/IGLV2-23/IGLV3-1/IGLV3-10/IGLV3-19/IGLV3-21/IGLV3-25/IGLV3-27/IGLV3-9/IGLV4-60/IGLV4-69/IGLV5-45/IGLV6-57/IGLV7-43/IGLV8-61/IGLV9-49/TREX1/XBP1\nGO:0002440 IGKV1-16/IGKV1-17/IGKV1-27/IGKV1-5/IGKV1-6/IGKV1-9/IGKV2D-29/IGKV3-15/IGKV3-20/IGKV3D-20/IGKV4-1/IGKV5-2/IGLV1-40/IGLV1-44/IGLV1-47/IGLV2-11/IGLV2-14/IGLV2-23/IGLV3-1/IGLV3-10/IGLV3-19/IGLV3-21/IGLV3-25/IGLV3-27/IGLV3-9/IGLV4-60/IGLV4-69/IGLV5-45/IGLV6-57/IGLV7-43/IGLV8-61/IGLV9-49/TREX1/XBP1\nGO:0016064                                                IGHG1/IGHG3/IGHM/IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-11/IGHV3-13/IGHV3-15/IGHV3-21/IGHV3-23/IGHV3-30/IGHV3-43/IGHV3-48/IGHV3-49/IGHV3-53/IGHV3-66/IGHV3-73/IGHV4-28/IGHV4-31/IGHV4-34/IGHV4-39/IGHV4-59/IGHV5-51/IGLC1/TREX1\nGO:0019724                                                IGHG1/IGHG3/IGHM/IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-11/IGHV3-13/IGHV3-15/IGHV3-21/IGHV3-23/IGHV3-30/IGHV3-43/IGHV3-48/IGHV3-49/IGHV3-53/IGHV3-66/IGHV3-73/IGHV4-28/IGHV4-31/IGHV4-34/IGHV4-39/IGHV4-59/IGHV5-51/IGLC1/TREX1\nGO:0002449                                         CLEC2A/IGHG1/IGHG3/IGHM/IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-11/IGHV3-13/IGHV3-15/IGHV3-21/IGHV3-23/IGHV3-30/IGHV3-43/IGHV3-48/IGHV3-49/IGHV3-53/IGHV3-66/IGHV3-73/IGHV4-28/IGHV4-31/IGHV4-34/IGHV4-39/IGHV4-59/IGHV5-51/IGLC1/TREX1\n           Count\nGO:0002377    34\nGO:0002440    34\nGO:0016064    29\nGO:0019724    29\nGO:0002449    30\n\n\n\n\n10.4.3 GO Analysis for Molecular Functions (MF)\n\n# Perform gene enrichment analysis\nerich.go.MF_deseq2 &lt;- enrichGO(\n  gene = GO_deseq2,\n  OrgDb = org.Hs.eg.db,\n  keyType = \"ENTREZID\",\n  ont = 'MF', # Other categories: \"CC\", \"MF\" for molecular function\n  pvalueCutoff = 0.05,\n  qvalueCutoff = 0.05,\n  readable = TRUE)\n\nerich.go.MF.outdata_deseq2 &lt;- as.data.frame(erich.go.MF_deseq2)\n# Uncomment to write output to CSV\n# write.csv(erich.go.MF.outdata_deseq2, \"E:/fruit/erich.go.MF.outdata.csv\")\n\nhead(erich.go.MF.outdata_deseq2, 5)\n\n                   ID                              Description GeneRatio\nGO:0003823 GO:0003823                          antigen binding    49/188\nGO:0030280 GO:0030280 structural constituent of skin epidermis     7/188\nGO:0034987 GO:0034987          immunoglobulin receptor binding     3/188\n             BgRatio       pvalue     p.adjust       qvalue\nGO:0003823 178/18496 1.931643e-57 4.829108e-55 4.829108e-55\nGO:0030280  36/18496 6.521227e-08 8.151534e-06 8.151534e-06\nGO:0034987  16/18496 5.249729e-04 4.374774e-02 4.374774e-02\n                                                                                                                                                                                                                                                                                                                                                                                                                                            geneID\nGO:0003823 IGHG1/IGHG3/IGHM/IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-11/IGHV3-13/IGHV3-15/IGHV3-21/IGHV3-23/IGHV3-30/IGHV3-43/IGHV3-48/IGHV3-49/IGHV3-53/IGHV3-66/IGHV3-73/IGHV4-28/IGHV4-31/IGHV4-34/IGHV4-39/IGHV4-59/IGHV5-51/IGKV1-16/IGKV1-17/IGKV1-5/IGKV3-15/IGKV3-20/IGKV4-1/IGKV5-2/IGLC1/IGLV1-40/IGLV1-44/IGLV1-47/IGLV2-11/IGLV2-14/IGLV2-23/IGLV3-1/IGLV3-19/IGLV3-21/IGLV3-25/IGLV3-27/IGLV6-57/IGLV7-43/TRBV28\nGO:0030280                                                                                                                                                                                                                                                                                                                                                                                             KRT2/KRT71/KRT73/KRT77/KRT83/KRT85/KRTAP1-3\nGO:0034987                                                                                                                                                                                                                                                                                                                                                                                                                        IGHG1/IGHG3/IGHM\n           Count\nGO:0003823    49\nGO:0030280     7\nGO:0034987     3\n\n\n\n\n10.4.4 GO Analysis for Cellular Components (CC)\n\n# Perform gene enrichment analysis\nerich.go.CC_deseq2 &lt;- enrichGO(\n  gene = GO_deseq2,\n  OrgDb = org.Hs.eg.db,\n  keyType = \"ENTREZID\",\n  ont = 'CC', # Other categories: \"CC\", \"MF\" for molecular function\n  pvalueCutoff = 0.05,\n  qvalueCutoff = 0.05,\n  readable = TRUE)\n\nerich.go.CC.outdata_deseq2 &lt;- as.data.frame(erich.go.CC_deseq2)\n# Uncomment to write output to CSV\n# write.csv(erich.go.CC.outdata_deseq2, \"E:/fruit/erich.go.CC.outdata.csv\")\n\n\n\n10.4.5 KEGG Analysis\n\nkegg.out_deseq2 = enrichKEGG(\n  gene = GO_deseq2,\n  organism = \"hsa\",\n  keyType = \"kegg\",\n  pvalueCutoff = 0.15,\n  pAdjustMethod = \"BH\",\n  qvalueCutoff = 0.15)\n\nReading KEGG annotation online: \"https://rest.kegg.jp/link/hsa/pathway\"...\n\n\nReading KEGG annotation online: \"https://rest.kegg.jp/list/pathway/hsa\"...\n\nkegg.out.outdata_deseq2 &lt;- as.data.frame(kegg.out_deseq2)\n# Uncomment to export the data, which are in ENTREZID format\n# write.csv(kegg.out.outdata_deseq2, \"E:/kegg.out.outdata.csv\")\n\n##### Convert numeric Entrez gene IDs or Ensembl gene IDs from above code to symbols\nlibrary(org.Hs.eg.db)\nkegg.out1_deseq2 = as.data.frame(kegg.out_deseq2)\nENTREZID = strsplit(kegg.out1_deseq2$geneID, \"/\")\nsymbol = sapply(ENTREZID, function(x) {\n  y = bitr(x, fromType = \"ENTREZID\", toType = \"SYMBOL\", OrgDb = \"org.Hs.eg.db\")\n  # In case of multiple matches, take the first one\n  y = y[!duplicated(y$ENTREZID), -1]\n  y = paste(y, collapse = \"/\")\n})\n\n'select()' returned 1:1 mapping between keys and columns\n\n\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n\nkegg.out1_deseq2$geneID = symbol\nkegg.out1.outdata_deseq2 &lt;- as.data.frame(kegg.out1_deseq2)\n# Uncomment to export the converted data\n# write.csv(kegg.out1.outdata_deseq2, \"E:/fruit/kegg.out1.outdata.csv\")\nhead(kegg.out.outdata_deseq2, 5)\n\n                   category                   subcategory       ID\nhsa05150     Human Diseases Infectious disease: bacterial hsa05150\nhsa04915 Organismal Systems              Endocrine system hsa04915\nhsa04970 Organismal Systems              Digestive system hsa04970\n                             Description GeneRatio  BgRatio       pvalue\nhsa05150 Staphylococcus aureus infection      6/43 100/8842 7.819914e-06\nhsa04915      Estrogen signaling pathway      6/43 139/8842 5.118328e-05\nhsa04970              Salivary secretion      4/43  97/8842 1.210284e-03\n             p.adjust       qvalue                            geneID Count\nhsa05150 0.0006255931 0.0005926672 147183/353288/3881/3883/3886/8687     6\nhsa04915 0.0020473312 0.0019395769 147183/353288/3881/3883/3886/8687     6\nhsa04970 0.0322742503 0.0305756056              54831/1473/3346/3347     4\n\nhead(kegg.out1.outdata_deseq2, 5)\n\n                   category                   subcategory       ID\nhsa05150     Human Diseases Infectious disease: bacterial hsa05150\nhsa04915 Organismal Systems              Endocrine system hsa04915\nhsa04970 Organismal Systems              Digestive system hsa04970\n                             Description GeneRatio  BgRatio       pvalue\nhsa05150 Staphylococcus aureus infection      6/43 100/8842 7.819914e-06\nhsa04915      Estrogen signaling pathway      6/43 139/8842 5.118328e-05\nhsa04970              Salivary secretion      4/43  97/8842 1.210284e-03\n             p.adjust       qvalue                               geneID Count\nhsa05150 0.0006255931 0.0005926672 KRT25/KRT26/KRT31/KRT33A/KRT35/KRT38     6\nhsa04915 0.0020473312 0.0019395769 KRT25/KRT26/KRT31/KRT33A/KRT35/KRT38     6\nhsa04970 0.0322742503 0.0305756056                 BEST2/CST5/HTN1/HTN3     4\n\n\n\n\n10.4.6 DO Analysis\n\nerich.go.DO_deseq2 = enrichDO(gene = GO_deseq2,\n                              ont = \"DO\", # Other categories: \"CC\", \"MF\" for molecular function\n                              pvalueCutoff = 0.5,\n                              qvalueCutoff = 0.5,\n                              readable = TRUE)\n\nerich.go.DO.outdata_deseq2 &lt;- as.data.frame(erich.go.DO_deseq2)\n# Uncomment to export the data\n# write.csv(erich.go.DO.outdata_deseq2, \"E:/fruit/erich.go.DO.outdata.csv\")\nhead(erich.go.DO.outdata_deseq2, 5)\n\n                       ID                          Description GeneRatio\nDOID:0060121 DOID:0060121 integumentary system benign neoplasm      3/71\nDOID:3165       DOID:3165                 skin benign neoplasm      3/71\nDOID:11132     DOID:11132                prostatic hypertrophy      3/71\nDOID:421         DOID:421                         hair disease      4/71\nDOID:2345       DOID:2345    plasma protein metabolism disease      2/71\n              BgRatio      pvalue  p.adjust    qvalue                 geneID\nDOID:0060121 27/10312 0.000812625 0.1178306 0.1178306     KRT31/KRT35/MAGEA4\nDOID:3165    27/10312 0.000812625 0.1178306 0.1178306     KRT31/KRT35/MAGEA4\nDOID:11132   34/10312 0.001606147 0.1552608 0.1552608   MAGEA1/MAGEA3/MAGEA4\nDOID:421     81/10312 0.002303062 0.1669720 0.1669720 CDSN/KRT25/KRT71/KRT83\nDOID:2345    16/10312 0.005269780 0.2547060 0.2547060         CPN1/SERPINA12\n             Count\nDOID:0060121     3\nDOID:3165        3\nDOID:11132       3\nDOID:421         4\nDOID:2345        2\n\n\n\n\n10.4.7 Reactome Pathway Analysis\n\nerich.go.Reactome_deseq2 &lt;- enrichPathway(gene = GO_deseq2, pvalueCutoff = 0.05, readable = TRUE)\n\nerich.go.Reactome.outdata_deseq2 &lt;- as.data.frame(erich.go.Reactome_deseq2)\n# Uncomment to export the data\n# write.csv(erich.go.Reactome.outdata_deseq2, \"E:/fruit/erich.go.Reactome.outdata.csv\")\nhead(erich.go.Reactome.outdata_deseq2, 5)\n\n                         ID                         Description GeneRatio\nR-HSA-6805567 R-HSA-6805567                      Keratinization     50/97\nR-HSA-6809371 R-HSA-6809371 Formation of the cornified envelope     16/97\n                BgRatio       pvalue     p.adjust       qvalue\nR-HSA-6805567 214/11009 3.658421e-61 6.694910e-59 6.694910e-59\nR-HSA-6809371 129/11009 1.744227e-14 1.595968e-12 1.595968e-12\n                                                                                                                                                                                                                                                                                                                                                                                                                                         geneID\nR-HSA-6805567 CDSN/KRT2/KRT25/KRT26/KRT31/KRT33A/KRT35/KRT38/KRT71/KRT73/KRT77/KRT83/KRT85/KRTAP1-1/KRTAP1-3/KRTAP10-1/KRTAP10-10/KRTAP10-11/KRTAP10-3/KRTAP10-5/KRTAP10-6/KRTAP10-7/KRTAP10-8/KRTAP11-1/KRTAP12-1/KRTAP12-2/KRTAP16-1/KRTAP17-1/KRTAP2-1/KRTAP2-2/KRTAP2-4/KRTAP24-1/KRTAP26-1/KRTAP3-1/KRTAP3-2/KRTAP3-3/KRTAP4-2/KRTAP4-3/KRTAP4-4/KRTAP4-6/KRTAP4-8/KRTAP4-9/KRTAP8-1/KRTAP9-3/KRTAP9-4/KRTAP9-7/KRTAP9-8/LCE1E/LCE2B/LCE2C\nR-HSA-6809371                                                                                                                                                                                                                                                                                                                                    CDSN/KRT2/KRT25/KRT26/KRT31/KRT33A/KRT35/KRT38/KRT71/KRT73/KRT77/KRT83/KRT85/LCE1E/LCE2B/LCE2C\n              Count\nR-HSA-6805567    50\nR-HSA-6809371    16"
  },
  {
    "objectID": "Enrichment Circos Bar.html#load-data",
    "href": "Enrichment Circos Bar.html#load-data",
    "title": "11  Enrichment Circos Bar",
    "section": "11.1 Load data",
    "text": "11.1 Load data\n\ntumor &lt;- readRDS(\"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\")\nnormal &lt;- readRDS('../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds')\n# Merge the datasets, ensuring both have genes as row names\nall_count_exp &lt;- merge(tumor, normal, by = \"row.names\")\nall_count_exp &lt;- tibble::column_to_rownames(all_count_exp, var = \"Row.names\")  # Set the row names\n\n# Drawing data\nall_count_exp &lt;- log_transform(all_count_exp)\n\n[1] \"log2 transform finished\"\n\nDEG_deseq2 &lt;- readRDS('../test_TransProR/Select DEGs/DEG_deseq2.Rdata')\n#head(all_count_exp, 1)\nhead(DEG_deseq2, 5)\n\n          baseMean log2FoldChange      lfcSE      stat pvalue padj change\nA1BG      134.6084      -2.549682 0.05677219 -44.91075      0    0   down\nA2M     30208.9912       3.251168 0.08394645  38.72907      0    0     up\nAADACL2   801.4538      -8.229956 0.18969649 -43.38486      0    0   down\nAARS2    1153.5493       1.624753 0.03283522  49.48202      0    0 stable\nAARSD1    567.8672      -2.082289 0.02275703 -91.50088      0    0 stable"
  },
  {
    "objectID": "Enrichment Circos Bar.html#convert-from-symbol-to-entrezid",
    "href": "Enrichment Circos Bar.html#convert-from-symbol-to-entrezid",
    "title": "11  Enrichment Circos Bar",
    "section": "11.2 Convert from SYMBOL to ENTREZID",
    "text": "11.2 Convert from SYMBOL to ENTREZID\n\n# Convert from SYMBOL to ENTREZID for convenient enrichment analysis later. It's crucial to do this now as a direct conversion may result in a reduced set of genes due to non-one-to-one correspondence.\n\n# DEG_deseq2\n# Retrieve gene list\ngene &lt;- rownames(DEG_deseq2)\n# Perform conversion\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n\n'select()' returned 1:many mapping between keys and columns\n\n\nWarning in bitr(gene, fromType = \"SYMBOL\", toType = \"ENTREZID\", OrgDb =\n\"org.Hs.eg.db\"): 43.37% of input gene IDs are fail to map...\n\n# Remove duplicates and merge\ngene &lt;- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\n# Extract the SYMBOL column as a vector from the first dataset\nsymbols_vector &lt;- gene$SYMBOL\n# Use the SYMBOL column to filter corresponding rows from the second dataset by row names\nDEG_deseq2 &lt;- DEG_deseq2[rownames(DEG_deseq2) %in% symbols_vector, ]\nhead(DEG_deseq2, 5)\n\n          baseMean log2FoldChange      lfcSE      stat pvalue padj change\nA1BG      134.6084      -2.549682 0.05677219 -44.91075      0    0   down\nA2M     30208.9912       3.251168 0.08394645  38.72907      0    0     up\nAADACL2   801.4538      -8.229956 0.18969649 -43.38486      0    0   down\nAARS2    1153.5493       1.624753 0.03283522  49.48202      0    0 stable\nAARSD1    567.8672      -2.082289 0.02275703 -91.50088      0    0 stable"
  },
  {
    "objectID": "Enrichment Circos Bar.html#select-differentially-expressed-genes",
    "href": "Enrichment Circos Bar.html#select-differentially-expressed-genes",
    "title": "11  Enrichment Circos Bar",
    "section": "11.3 Select differentially expressed genes",
    "text": "11.3 Select differentially expressed genes\n\nDiff_deseq2 &lt;- filter_diff_genes(\n  DEG_deseq2, \n  p_val_col = \"pvalue\", \n  log_fc_col = \"log2FoldChange\",\n  p_val_threshold = 0.01, \n  log_fc_threshold = 8\n  )\n# First, obtain a list of gene names from the row names of the first dataset\ngene_names &lt;- rownames(Diff_deseq2)\n# Find the matching rows in the second dataframe\nmatched_rows &lt;- all_count_exp[gene_names, ]\n# Calculate the mean for each row\naverages &lt;- rowMeans(matched_rows, na.rm = TRUE)\n# Append the averages as a new column to the first dataframe\nDiff_deseq2$average &lt;- averages\nDiff_deseq2$ID &lt;- rownames(Diff_deseq2)\nDiff_deseq2$changetype &lt;- ifelse(Diff_deseq2$change == 'up', 1, -1)\n# Define a small threshold value\nsmall_value &lt;- .Machine$double.xmin\n# Before calculating -log10, replace zeroes with the small threshold value and assign it to a new column\nDiff_deseq2$log_pvalue &lt;- ifelse(Diff_deseq2$pvalue == 0, -log10(small_value), -log10(Diff_deseq2$pvalue))\n# Extract the expression data corresponding to the differentially expressed genes\nheatdata_deseq2 &lt;- all_count_exp[rownames(Diff_deseq2), ]\n#head(heatdata_deseq2, 1)"
  },
  {
    "objectID": "Enrichment Circos Bar.html#diff_deseq2-enrichment-analysis",
    "href": "Enrichment Circos Bar.html#diff_deseq2-enrichment-analysis",
    "title": "11  Enrichment Circos Bar",
    "section": "11.4 Diff_deseq2 Enrichment Analysis",
    "text": "11.4 Diff_deseq2 Enrichment Analysis\n\n11.4.1 Obtain the list of genes\n\ngene &lt;- rownames(Diff_deseq2)\n## Convert\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n\n'select()' returned 1:1 mapping between keys and columns\n\n## Remove duplicates and merge\ngene &lt;- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\ngene_df &lt;- data.frame(logFC=Diff_deseq2$log2FoldChange,\n                      SYMBOL = rownames(Diff_deseq2))\ngene_df &lt;- merge(gene_df, gene, by=\"SYMBOL\")\nGO_deseq2 &lt;- gene_df$ENTREZID\n\n\n\n11.4.2 GO Analysis for Biological Processes (BP)\n\n# Perform gene enrichment analysis\nerich.go.BP_deseq2 &lt;- enrichGO(\n  gene = GO_deseq2,\n  OrgDb = org.Hs.eg.db,\n  keyType = \"ENTREZID\",\n  ont = 'BP', # Other categories: \"CC\", \"MF\" for molecular function\n  pvalueCutoff = 0.05,\n  qvalueCutoff = 0.05,\n  readable = TRUE)\nerich.go.BP.outdata_deseq2 &lt;- as.data.frame(erich.go.BP_deseq2)\n# Uncomment to write output to CSV\n# write.csv(erich.go.BP.outdata_deseq2, \"E:/fruit/erich.go.BP.outdata.csv\")\nhead(erich.go.BP.outdata_deseq2, 5)\n\n                   ID                                         Description\nGO:0002377 GO:0002377                           immunoglobulin production\nGO:0002440 GO:0002440 production of molecular mediator of immune response\nGO:0016064 GO:0016064             immunoglobulin mediated immune response\nGO:0019724 GO:0019724                            B cell mediated immunity\nGO:0002449 GO:0002449                        lymphocyte mediated immunity\n           GeneRatio   BgRatio       pvalue     p.adjust       qvalue\nGO:0002377    34/179 196/18870 2.480604e-33 2.909749e-30 2.909749e-30\nGO:0002440    34/179 314/18870 3.023121e-26 1.773060e-23 1.773060e-23\nGO:0016064    29/179 205/18870 7.968166e-26 3.115553e-23 3.115553e-23\nGO:0019724    29/179 208/18870 1.224253e-25 3.590121e-23 3.590121e-23\nGO:0002449    30/179 368/18870 1.235430e-19 2.898319e-17 2.898319e-17\n                                                                                                                                                                                                                                                                                                          geneID\nGO:0002377 IGKV1-16/IGKV1-17/IGKV1-27/IGKV1-5/IGKV1-6/IGKV1-9/IGKV2D-29/IGKV3-15/IGKV3-20/IGKV3D-20/IGKV4-1/IGKV5-2/IGLV1-40/IGLV1-44/IGLV1-47/IGLV2-11/IGLV2-14/IGLV2-23/IGLV3-1/IGLV3-10/IGLV3-19/IGLV3-21/IGLV3-25/IGLV3-27/IGLV3-9/IGLV4-60/IGLV4-69/IGLV5-45/IGLV6-57/IGLV7-43/IGLV8-61/IGLV9-49/TREX1/XBP1\nGO:0002440 IGKV1-16/IGKV1-17/IGKV1-27/IGKV1-5/IGKV1-6/IGKV1-9/IGKV2D-29/IGKV3-15/IGKV3-20/IGKV3D-20/IGKV4-1/IGKV5-2/IGLV1-40/IGLV1-44/IGLV1-47/IGLV2-11/IGLV2-14/IGLV2-23/IGLV3-1/IGLV3-10/IGLV3-19/IGLV3-21/IGLV3-25/IGLV3-27/IGLV3-9/IGLV4-60/IGLV4-69/IGLV5-45/IGLV6-57/IGLV7-43/IGLV8-61/IGLV9-49/TREX1/XBP1\nGO:0016064                                                IGHG1/IGHG3/IGHM/IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-11/IGHV3-13/IGHV3-15/IGHV3-21/IGHV3-23/IGHV3-30/IGHV3-43/IGHV3-48/IGHV3-49/IGHV3-53/IGHV3-66/IGHV3-73/IGHV4-28/IGHV4-31/IGHV4-34/IGHV4-39/IGHV4-59/IGHV5-51/IGLC1/TREX1\nGO:0019724                                                IGHG1/IGHG3/IGHM/IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-11/IGHV3-13/IGHV3-15/IGHV3-21/IGHV3-23/IGHV3-30/IGHV3-43/IGHV3-48/IGHV3-49/IGHV3-53/IGHV3-66/IGHV3-73/IGHV4-28/IGHV4-31/IGHV4-34/IGHV4-39/IGHV4-59/IGHV5-51/IGLC1/TREX1\nGO:0002449                                         CLEC2A/IGHG1/IGHG3/IGHM/IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-11/IGHV3-13/IGHV3-15/IGHV3-21/IGHV3-23/IGHV3-30/IGHV3-43/IGHV3-48/IGHV3-49/IGHV3-53/IGHV3-66/IGHV3-73/IGHV4-28/IGHV4-31/IGHV4-34/IGHV4-39/IGHV4-59/IGHV5-51/IGLC1/TREX1\n           Count\nGO:0002377    34\nGO:0002440    34\nGO:0016064    29\nGO:0019724    29\nGO:0002449    30\n\n\n\n\n11.4.3 GO Analysis for Molecular Functions (MF)\n\n# Perform gene enrichment analysis\nerich.go.MF_deseq2 &lt;- enrichGO(\n  gene = GO_deseq2,\n  OrgDb = org.Hs.eg.db,\n  keyType = \"ENTREZID\",\n  ont = 'MF', # Other categories: \"CC\", \"MF\" for molecular function\n  pvalueCutoff = 0.05,\n  qvalueCutoff = 0.05,\n  readable = TRUE)\n\nerich.go.MF.outdata_deseq2 &lt;- as.data.frame(erich.go.MF_deseq2)\n# Uncomment to write output to CSV\n# write.csv(erich.go.MF.outdata_deseq2, \"E:/fruit/erich.go.MF.outdata.csv\")\n\nhead(erich.go.MF.outdata_deseq2, 5)\n\n                   ID                              Description GeneRatio\nGO:0003823 GO:0003823                          antigen binding    49/188\nGO:0030280 GO:0030280 structural constituent of skin epidermis     7/188\nGO:0034987 GO:0034987          immunoglobulin receptor binding     3/188\n             BgRatio       pvalue     p.adjust       qvalue\nGO:0003823 178/18496 1.931643e-57 4.829108e-55 4.829108e-55\nGO:0030280  36/18496 6.521227e-08 8.151534e-06 8.151534e-06\nGO:0034987  16/18496 5.249729e-04 4.374774e-02 4.374774e-02\n                                                                                                                                                                                                                                                                                                                                                                                                                                            geneID\nGO:0003823 IGHG1/IGHG3/IGHM/IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-11/IGHV3-13/IGHV3-15/IGHV3-21/IGHV3-23/IGHV3-30/IGHV3-43/IGHV3-48/IGHV3-49/IGHV3-53/IGHV3-66/IGHV3-73/IGHV4-28/IGHV4-31/IGHV4-34/IGHV4-39/IGHV4-59/IGHV5-51/IGKV1-16/IGKV1-17/IGKV1-5/IGKV3-15/IGKV3-20/IGKV4-1/IGKV5-2/IGLC1/IGLV1-40/IGLV1-44/IGLV1-47/IGLV2-11/IGLV2-14/IGLV2-23/IGLV3-1/IGLV3-19/IGLV3-21/IGLV3-25/IGLV3-27/IGLV6-57/IGLV7-43/TRBV28\nGO:0030280                                                                                                                                                                                                                                                                                                                                                                                             KRT2/KRT71/KRT73/KRT77/KRT83/KRT85/KRTAP1-3\nGO:0034987                                                                                                                                                                                                                                                                                                                                                                                                                        IGHG1/IGHG3/IGHM\n           Count\nGO:0003823    49\nGO:0030280     7\nGO:0034987     3\n\n\n\n\n11.4.4 GO Analysis for Cellular Components (CC)\n\n# Perform gene enrichment analysis\nerich.go.CC_deseq2 &lt;- enrichGO(\n  gene = GO_deseq2,\n  OrgDb = org.Hs.eg.db,\n  keyType = \"ENTREZID\",\n  ont = 'CC', # Other categories: \"CC\", \"MF\" for molecular function\n  pvalueCutoff = 0.05,\n  qvalueCutoff = 0.05,\n  readable = TRUE)\n\nerich.go.CC.outdata_deseq2 &lt;- as.data.frame(erich.go.CC_deseq2)\n# Uncomment to write output to CSV\n# write.csv(erich.go.CC.outdata_deseq2, \"E:/fruit/erich.go.CC.outdata.csv\")\n\n\n\n11.4.5 KEGG Analysis\n\nkegg.out_deseq2 = enrichKEGG(\n  gene = GO_deseq2,\n  organism = \"hsa\",\n  keyType = \"kegg\",\n  pvalueCutoff = 0.15,\n  pAdjustMethod = \"BH\",\n  qvalueCutoff = 0.15)\n\nReading KEGG annotation online: \"https://rest.kegg.jp/link/hsa/pathway\"...\n\n\nReading KEGG annotation online: \"https://rest.kegg.jp/list/pathway/hsa\"...\n\nkegg.out.outdata_deseq2 &lt;- as.data.frame(kegg.out_deseq2)\n# Uncomment to export the data, which are in ENTREZID format\n# write.csv(kegg.out.outdata_deseq2, \"E:/kegg.out.outdata.csv\")\n\n##### Convert numeric Entrez gene IDs or Ensembl gene IDs from above code to symbols\nlibrary(org.Hs.eg.db)\nkegg.out1_deseq2 = as.data.frame(kegg.out_deseq2)\nENTREZID = strsplit(kegg.out1_deseq2$geneID, \"/\")\nsymbol = sapply(ENTREZID, function(x) {\n  y = bitr(x, fromType = \"ENTREZID\", toType = \"SYMBOL\", OrgDb = \"org.Hs.eg.db\")\n  # In case of multiple matches, take the first one\n  y = y[!duplicated(y$ENTREZID), -1]\n  y = paste(y, collapse = \"/\")\n})\n\n'select()' returned 1:1 mapping between keys and columns\n\n\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n\nkegg.out1_deseq2$geneID = symbol\nkegg.out1.outdata_deseq2 &lt;- as.data.frame(kegg.out1_deseq2)\n# Uncomment to export the converted data\n# write.csv(kegg.out1.outdata_deseq2, \"E:/fruit/kegg.out1.outdata.csv\")\nhead(kegg.out.outdata_deseq2, 5)\n\n                   category                   subcategory       ID\nhsa05150     Human Diseases Infectious disease: bacterial hsa05150\nhsa04915 Organismal Systems              Endocrine system hsa04915\nhsa04970 Organismal Systems              Digestive system hsa04970\n                             Description GeneRatio  BgRatio       pvalue\nhsa05150 Staphylococcus aureus infection      6/43 100/8842 7.819914e-06\nhsa04915      Estrogen signaling pathway      6/43 139/8842 5.118328e-05\nhsa04970              Salivary secretion      4/43  97/8842 1.210284e-03\n             p.adjust       qvalue                            geneID Count\nhsa05150 0.0006255931 0.0005926672 147183/353288/3881/3883/3886/8687     6\nhsa04915 0.0020473312 0.0019395769 147183/353288/3881/3883/3886/8687     6\nhsa04970 0.0322742503 0.0305756056              54831/1473/3346/3347     4\n\nhead(kegg.out1.outdata_deseq2, 5)\n\n                   category                   subcategory       ID\nhsa05150     Human Diseases Infectious disease: bacterial hsa05150\nhsa04915 Organismal Systems              Endocrine system hsa04915\nhsa04970 Organismal Systems              Digestive system hsa04970\n                             Description GeneRatio  BgRatio       pvalue\nhsa05150 Staphylococcus aureus infection      6/43 100/8842 7.819914e-06\nhsa04915      Estrogen signaling pathway      6/43 139/8842 5.118328e-05\nhsa04970              Salivary secretion      4/43  97/8842 1.210284e-03\n             p.adjust       qvalue                               geneID Count\nhsa05150 0.0006255931 0.0005926672 KRT25/KRT26/KRT31/KRT33A/KRT35/KRT38     6\nhsa04915 0.0020473312 0.0019395769 KRT25/KRT26/KRT31/KRT33A/KRT35/KRT38     6\nhsa04970 0.0322742503 0.0305756056                 BEST2/CST5/HTN1/HTN3     4\n\n\n\n\n11.4.6 DO Analysis\n\nerich.go.DO_deseq2 = enrichDO(gene = GO_deseq2,\n                              ont = \"DO\", # Other categories: \"CC\", \"MF\" for molecular function\n                              pvalueCutoff = 0.5,\n                              qvalueCutoff = 0.5,\n                              readable = TRUE)\n\nerich.go.DO.outdata_deseq2 &lt;- as.data.frame(erich.go.DO_deseq2)\n# Uncomment to export the data\n# write.csv(erich.go.DO.outdata_deseq2, \"E:/fruit/erich.go.DO.outdata.csv\")\nhead(erich.go.DO.outdata_deseq2, 5)\n\n                       ID                          Description GeneRatio\nDOID:0060121 DOID:0060121 integumentary system benign neoplasm      3/71\nDOID:3165       DOID:3165                 skin benign neoplasm      3/71\nDOID:11132     DOID:11132                prostatic hypertrophy      3/71\nDOID:421         DOID:421                         hair disease      4/71\nDOID:2345       DOID:2345    plasma protein metabolism disease      2/71\n              BgRatio      pvalue  p.adjust    qvalue                 geneID\nDOID:0060121 27/10312 0.000812625 0.1178306 0.1178306     KRT31/KRT35/MAGEA4\nDOID:3165    27/10312 0.000812625 0.1178306 0.1178306     KRT31/KRT35/MAGEA4\nDOID:11132   34/10312 0.001606147 0.1552608 0.1552608   MAGEA1/MAGEA3/MAGEA4\nDOID:421     81/10312 0.002303062 0.1669720 0.1669720 CDSN/KRT25/KRT71/KRT83\nDOID:2345    16/10312 0.005269780 0.2547060 0.2547060         CPN1/SERPINA12\n             Count\nDOID:0060121     3\nDOID:3165        3\nDOID:11132       3\nDOID:421         4\nDOID:2345        2\n\n\n\n\n11.4.7 Reactome Pathway Analysis\n\nerich.go.Reactome_deseq2 &lt;- enrichPathway(gene = GO_deseq2, pvalueCutoff = 0.05, readable = TRUE)\n\nerich.go.Reactome.outdata_deseq2 &lt;- as.data.frame(erich.go.Reactome_deseq2)\n# Uncomment to export the data\n# write.csv(erich.go.Reactome.outdata_deseq2, \"E:/fruit/erich.go.Reactome.outdata.csv\")\nhead(erich.go.Reactome.outdata_deseq2, 5)\n\n                         ID                         Description GeneRatio\nR-HSA-6805567 R-HSA-6805567                      Keratinization     50/97\nR-HSA-6809371 R-HSA-6809371 Formation of the cornified envelope     16/97\n                BgRatio       pvalue     p.adjust       qvalue\nR-HSA-6805567 214/11009 3.658421e-61 6.694910e-59 6.694910e-59\nR-HSA-6809371 129/11009 1.744227e-14 1.595968e-12 1.595968e-12\n                                                                                                                                                                                                                                                                                                                                                                                                                                         geneID\nR-HSA-6805567 CDSN/KRT2/KRT25/KRT26/KRT31/KRT33A/KRT35/KRT38/KRT71/KRT73/KRT77/KRT83/KRT85/KRTAP1-1/KRTAP1-3/KRTAP10-1/KRTAP10-10/KRTAP10-11/KRTAP10-3/KRTAP10-5/KRTAP10-6/KRTAP10-7/KRTAP10-8/KRTAP11-1/KRTAP12-1/KRTAP12-2/KRTAP16-1/KRTAP17-1/KRTAP2-1/KRTAP2-2/KRTAP2-4/KRTAP24-1/KRTAP26-1/KRTAP3-1/KRTAP3-2/KRTAP3-3/KRTAP4-2/KRTAP4-3/KRTAP4-4/KRTAP4-6/KRTAP4-8/KRTAP4-9/KRTAP8-1/KRTAP9-3/KRTAP9-4/KRTAP9-7/KRTAP9-8/LCE1E/LCE2B/LCE2C\nR-HSA-6809371                                                                                                                                                                                                                                                                                                                                    CDSN/KRT2/KRT25/KRT26/KRT31/KRT33A/KRT35/KRT38/KRT71/KRT73/KRT77/KRT83/KRT85/LCE1E/LCE2B/LCE2C\n              Count\nR-HSA-6805567    50\nR-HSA-6809371    16\n\n\n\n\n11.4.8 Usage example\n\n# Suppose you have a dataframe named data and a list of descriptions you want to filter\ndescriptions_to_filter &lt;- c(\"immunoglobulin production\", \"B cell mediated immunity\")\nfiltered_data_BP &lt;- extract_descriptions_counts(erich.go.BP.outdata_deseq2, descriptions_to_filter, \"#009688\")\nprint(filtered_data_BP)\n\n                         Description Count   color\nGO:0002377 immunoglobulin production    34 #009688\nGO:0019724  B cell mediated immunity    29 #009688\n\ndescriptions_to_filter &lt;- c(\"immunoglobulin complex\", \"keratin filament\", \"IgG immunoglobulin complex\")\nfiltered_data_CC &lt;- extract_descriptions_counts(erich.go.CC.outdata_deseq2, descriptions_to_filter, \"#3f51b5\")\nprint(filtered_data_CC)\n\n                          Description Count   color\nGO:0019814     immunoglobulin complex    60 #3f51b5\nGO:0045095           keratin filament    39 #3f51b5\nGO:0071735 IgG immunoglobulin complex     3 #3f51b5\n\ndescriptions_to_filter &lt;- c(\"integumentary system benign neoplasm\", \"prostatic hypertrophy\")\nfiltered_data_DO &lt;- extract_descriptions_counts(erich.go.DO.outdata_deseq2, descriptions_to_filter, \"#673ab7\")\nprint(filtered_data_DO)\n\n                                      Description Count   color\nDOID:0060121 integumentary system benign neoplasm     3 #673ab7\nDOID:11132                  prostatic hypertrophy     3 #673ab7\n\ndescriptions_to_filter &lt;- c(\"antigen binding\", \"immunoglobulin receptor binding\")\nfiltered_data_MF &lt;- extract_descriptions_counts(erich.go.MF.outdata_deseq2, descriptions_to_filter, \"#4caf50\")\nprint(filtered_data_MF)\n\n                               Description Count   color\nGO:0003823                 antigen binding    49 #4caf50\nGO:0034987 immunoglobulin receptor binding     3 #4caf50\n\ndescriptions_to_filter &lt;- c(\"Keratinization\", \"Formation of the cornified envelope\")\nfiltered_data_Reactome &lt;- extract_descriptions_counts(erich.go.Reactome.outdata_deseq2, descriptions_to_filter, \"#ffc107\")\nprint(filtered_data_Reactome)\n\n                                      Description Count   color\nR-HSA-6805567                      Keratinization    50 #ffc107\nR-HSA-6809371 Formation of the cornified envelope    16 #ffc107\n\ndescriptions_to_filter &lt;- c(\"Staphylococcus aureus infection\", \"Salivary secretion\")\nfiltered_data_kegg &lt;- extract_descriptions_counts(kegg.out1.outdata_deseq2, descriptions_to_filter, \"#ff9800\")\nprint(filtered_data_kegg)\n\n                             Description Count   color\nhsa05150 Staphylococcus aureus infection     6 #ff9800\nhsa04970              Salivary secretion     4 #ff9800"
  },
  {
    "objectID": "Enrichment Circos Bar.html#enrich_circo_bar",
    "href": "Enrichment Circos Bar.html#enrich_circo_bar",
    "title": "11  Enrichment Circos Bar",
    "section": "11.5 enrich_circo_bar",
    "text": "11.5 enrich_circo_bar\n\ndata_list &lt;- list(\n  filtered_data_BP, \n  filtered_data_CC, \n  filtered_data_DO,\n  filtered_data_MF, \n  filtered_data_Reactome, \n  filtered_data_kegg\n)\ncombined_and_visualized_data &lt;- enrich_circo_bar(data_list)\n\nprint(combined_and_visualized_data)"
  },
  {
    "objectID": "Enrichment Circos Bar.html#enrich_circo_bar-and-sunburst",
    "href": "Enrichment Circos Bar.html#enrich_circo_bar-and-sunburst",
    "title": "11  Enrichment Circos Bar",
    "section": "11.6 enrich_circo_bar and sunburst",
    "text": "11.6 enrich_circo_bar and sunburst\n\n11.6.1 data\n\ndescriptions_to_filter &lt;- c(\"IgG immunoglobulin complex\")\nfiltered_data_CC &lt;- extract_descriptions_counts(erich.go.CC.outdata_deseq2, descriptions_to_filter, \"#ff9800\")\nprint(filtered_data_CC)\n\n                          Description Count   color\nGO:0071735 IgG immunoglobulin complex     3 #ff9800\n\ndescriptions_to_filter &lt;- c(\"prostatic hypertrophy\")\nfiltered_data_DO &lt;- extract_descriptions_counts(erich.go.DO.outdata_deseq2, descriptions_to_filter, \"#4caf50\")\nprint(filtered_data_DO)\n\n                     Description Count   color\nDOID:11132 prostatic hypertrophy     3 #4caf50\n\ndescriptions_to_filter &lt;- c(\"immunoglobulin receptor binding\")\nfiltered_data_MF &lt;- extract_descriptions_counts(erich.go.MF.outdata_deseq2, descriptions_to_filter, \"#009688\")\nprint(filtered_data_MF)\n\n                               Description Count   color\nGO:0034987 immunoglobulin receptor binding     3 #009688\n\ndescriptions_to_filter &lt;- c(\"Staphylococcus aureus infection\",\"Salivary secretion\")\nfiltered_data_kegg &lt;- extract_descriptions_counts(kegg.out1.outdata_deseq2, descriptions_to_filter, \"#3f51b5\")\nprint(filtered_data_kegg)\n\n                             Description Count   color\nhsa05150 Staphylococcus aureus infection     6 #3f51b5\nhsa04970              Salivary secretion     4 #3f51b5\n\ndata_list &lt;- list(\n  filtered_data_kegg,\n  filtered_data_MF,\n  filtered_data_DO,\n  filtered_data_CC\n)\n\n\n\nenrichment &lt;- c (\"enrichment\",\"enrichment\",\"enrichment\",\n                 \"enrichment\",\"enrichment\",\"enrichment\",\n                 \"enrichment\",\"enrichment\",\"enrichment\",\n                 \"enrichment\",\"enrichment\",\"enrichment\",\"enrichment\",\n                 \"enrichment\",\"enrichment\",\"enrichment\",\"enrichment\",\"enrichment\",\"enrichment\")\n\n\nmethods1 &lt;- c(\"go CC\",\"go CC\",\"go CC\",\n              \"go DO\",\"go DO\",\"go DO\",\n              \"go MF\",\"go MF\",\"go MF\",\n              \"KEGG\",\"KEGG\",\"KEGG\",\"KEGG\",\"KEGG\",\"KEGG\",\"KEGG\",\"KEGG\",\"KEGG\",\"KEGG\")\n\npathways1 &lt;- c(\"IgG immunoglobulin complex\",\"IgG immunoglobulin complex\",\"IgG immunoglobulin complex\",\n               \"prostatic hypertrophy\",\"prostatic hypertrophy\",\"prostatic hypertrophy\",\n               \"immunoglobulin receptor binding\",\"immunoglobulin receptor binding\",\"immunoglobulin receptor binding\",\n               \"Salivary secretion\",\"Salivary secretion\",\"Salivary secretion\",\"Salivary secretion\",\n               \"Staphylococcus aureus infection\",\"Staphylococcus aureus infection\",\"Staphylococcus aureus infection\",\n               \"Staphylococcus aureus infection\",\"Staphylococcus aureus infection\",\"Staphylococcus aureus infection\")\n\nchange1 &lt;- c(\"CC_up\",\"CC_up\", \"CC_down\",\n             \"DO_up\",\"DO_up\", \"DO_up\",\n             \"MF_up\",\"MF_up\", \"MF_up\",\n             \"KEGG1_down\",\"KEGG1_up\", \"KEGG1_up\", \"KEGG1_up\",\n             \"KEGG2_down\",\"KEGG2_down\",\"KEGG2_down\",\"KEGG2_down\",\"KEGG2_down\",\"KEGG2_down\")\n\ngenes1 &lt;- c(\"CC IGHG1\",\"CC IGHG3\", \"IGLC1\",\n            \"MAGEA1\", \"MAGEA3\", \"MAGEA4\",\n            \"MF IGHG1\", \"MF IGHG3\", \"MF IGHM\",\n            \"BEST2\",\"CST5\",\"HTN1\",\"HTN3\",\n            \"KRT25\",\"KRT26\",\"KRT31\",\"KRT33A\",\"KRT35\",\"KRT38\")\n\n\nlogFC1&lt;- c(8.79, 8.52, 8.55, \n           11.21, 11.28, 12.46, \n           8.79, 8.52, 8.77,\n           8.66, 8.97,12.70,13.31,\n           10.22, 8.31,8.48,8.42,9.21,8.43)\n\n\ntest1 &lt;- data.frame(enrichment, methods1, pathways1, change1, genes1, logFC1)\n\n# Custom colors\ncolors &lt;- rev(c(\"#009688\",\"#4caf50\",\"#ff9800\",\"#3f51b5\"))\n\n\n\n11.6.2 function\n\n# Function to create the circular bar chart\nenrich_circo_bar1 &lt;- function(data_list, num_dummy) {\n  # Combine data and arrange by Count\n  combined_data &lt;- dplyr::bind_rows(data_list)\n  combined_data &lt;- combined_data %&gt;% dplyr::arrange(dplyr::desc(.data$Count)) %&gt;%\n    dplyr::mutate(id = dplyr::row_number())\n  \n  # Add dummy rows to create empty space in the center\n  num_dummy &lt;- num_dummy  # Number of dummy rows\n  dummy_data &lt;- data.frame(\n    Description = rep(\"dummy\", num_dummy),\n    Count = rep(0, num_dummy),\n    color = rep(\"#FFFFFF\", num_dummy)  # White color for dummy bars\n  )\n  dummy_data &lt;- dummy_data %&gt;% dplyr::mutate(id = max(combined_data$id) + dplyr::row_number())\n  \n  # Combine real and dummy data\n  combined_data &lt;- dplyr::bind_rows(combined_data, dummy_data)\n  \n  # Mutate Description to a factor with levels in the order of appearance\n  combined_data &lt;- combined_data %&gt;% dplyr::mutate(Description = factor(.data$Description, \n                                                                        levels = unique(.data$Description)))\n  \n  # Set fill colors, including dummy color\n  fill_colors &lt;- c(combined_data$color[match(levels(combined_data$Description), combined_data$Description)], \"#FFFFFF\")\n  \n  # Calculate maximum values for limits\n  max_count &lt;- max(combined_data$Count) + (max(combined_data$Count) / 5)\n  max_id &lt;- max(combined_data$id) + 1.5\n  \n  # Create plot\n  p &lt;- ggplot2::ggplot(combined_data, ggplot2::aes(x = .data$id, y = .data$Count, fill = .data$Description)) +\n    ggplot2::geom_bar(stat = \"identity\", width = 0.7) +\n    ggplot2::geom_text(ggplot2::aes(x = .data$id, y = 0, label = ifelse(.data$Description == \"dummy\", \"\", as.character(.data$Description)), \n                                    color = .data$Description), \n                       hjust = 1.03, size = 3.5) +  # Remove color assignment from here\n    ggplot2::scale_fill_manual(values = fill_colors, guide = \"none\") +\n    ggplot2::scale_color_manual(values = fill_colors, guide = \"none\") +  # Assign colors to text\n    ggplot2::scale_y_continuous(expand = c(0, 0), limits = c(0, max_count), position = \"right\") +\n    ggplot2::scale_x_reverse(expand = c(0, 0), limits = c(max_id, -0.1)) +  # Reverse the x-axis\n    ggplot2::coord_polar(theta = \"y\", start = 0) +\n    ggplot2::labs(title = \"Enrichment CircularBar Chart\", \n                  subtitle = \"Including: BP/MF/CC/DO/KEGG/Reactome\") +\n    ggplot2::theme_minimal() +\n    ggplot2::theme(plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"), \n                   axis.title = ggplot2::element_blank(), axis.text = ggplot2::element_blank())\n  \n  return(p)\n}\n\n\n\n\nmy_sunburst1 &lt;- function (test, custom_colors = NULL, ...) \n{\n  test &lt;- as.data.frame(test)\n  if (length(unique(test[, 1])) &gt; 1) {\n    test &lt;- cbind(Root = \" \", test)\n  }\n  nc &lt;- ncol(test)\n  if (nc &lt; 3) \n    stop(\"as least 3-columns dataframe\")\n  if (!is.numeric(test[, nc])) \n    stop(\"the last column must be numeric\")\n  \n  lib_ps(\"plotly\", library = FALSE)\n  target &lt;- source &lt;- weight &lt;- NULL\n  links &lt;- data.frame()\n  for (i in 1:(nc - 2)) {\n    tmp &lt;- test[, c(i, i + 1, nc)]\n    colnames(tmp) &lt;- c(\"source\", \"target\", \"weight\")\n    tmp &lt;- dplyr::group_by(tmp, source, target) %&gt;% dplyr::summarise(weight = sum(weight), \n                                                                     .groups = \"keep\")\n    links &lt;- rbind(links, tmp)\n  }\n  \n  if (is.null(custom_colors)) {\n    # Use default colors if no custom colors provided\n    fig &lt;- plotly::plot_ly(labels = links$target, parents = links$source, \n                           values = links$weight, text = links$weight, type = \"sunburst\", \n                           ...)\n  } else {\n    # Use custom colors\n    fig &lt;- plotly::plot_ly(labels = links$target, parents = links$source, \n                           values = links$weight, text = links$weight, type = \"sunburst\", \n                           marker = list(colors = custom_colors), ...)\n  }\n  \n  fig\n}\n\n\n\n11.6.3 bar\n\n# Call the function to create the plot\ncombined_and_visualized_data &lt;- enrich_circo_bar1(data_list, 15)\n\n# Print the plot\nprint(combined_and_visualized_data)\n\n\n\n\n\n\n11.6.4 sunburst\n\n# Create the sunburst plot with custom colors\nfig &lt;- my_sunburst1(test1, custom_colors = colors)\n\n# Display the plot\nfig\n\n\n\n\n\n\n\n11.6.5 combined_plot\n\n# Convert ggplot to image\ncircular_bar_image &lt;- image_graph(width = 1000, height = 1000, res = 96)\nprint(combined_and_visualized_data)\ndev.off()\n\npng \n  2 \n\n# Save the sunburst chart as HTML and convert it to an image\nhtml_file &lt;- tempfile(fileext = \".html\")\npng_file &lt;- tempfile(fileext = \".png\")\nsaveWidget(fig, html_file, selfcontained = TRUE)\nwebshot(html_file, png_file, vwidth = 800, vheight = 800, cliprect = c(0, 0, 800, 800))\n\n\n\n# Read the saved image\nimg &lt;- image_read(png_file)\n\n# Create a circular mask\nmask &lt;- image_draw(image_blank(800, 800, color = \"none\"))\nsymbols(400, 400, circles = 400, inches = FALSE, add = TRUE, fg = \"grey50\", bg = \"grey50\")\ndev.off()\n\npng \n  2 \n\n# Apply the mask to generate a circular image\nimg_circular &lt;- image_composite(img, mask, operator = \"copyopacity\")\n\n# Convert the generated circular bar chart and circular sunburst chart to ggplot objects\ncircular_bar_plot &lt;- ggdraw() + draw_image(circular_bar_image, scale = 1)\nsunburst_plot &lt;- ggdraw() + draw_image(img_circular, scale = 0.5)\n\n# Overlay the sunburst chart at the center of the circular bar chart\ncombined_plot &lt;- circular_bar_plot + draw_plot(sunburst_plot, x = -0.02, y = -0.02, width = 1, height = 1)\n\n# Print the combined plot\nprint(combined_plot)"
  },
  {
    "objectID": "Enrichment Circos Bar.html#reference",
    "href": "Enrichment Circos Bar.html#reference",
    "title": "11  Enrichment Circos Bar",
    "section": "11.7 Reference",
    "text": "11.7 Reference\n\n\nggplot2:\n\n\ngithub:ggplot2\nAn implementation of the Grammar of Graphics in R"
  },
  {
    "objectID": "EnrichPolarBubble.html#load-data",
    "href": "EnrichPolarBubble.html#load-data",
    "title": "12  New Enrichment Polar Bubble",
    "section": "12.1 Load data",
    "text": "12.1 Load data\n\n# Load the tumor and normal datasets\ntumor &lt;- readRDS(\"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\")\nnormal &lt;- readRDS(\"../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds\")\n\n# Merge the datasets, ensuring that genes are used as row names\nall_count_exp &lt;- merge(tumor, normal, by = \"row.names\")\nall_count_exp &lt;- tibble::column_to_rownames(all_count_exp, var = \"Row.names\")  # Set the row names\n\n# Data transformation for plotting\nall_count_exp &lt;- log_transform(all_count_exp)\n\n[1] \"log2 transform finished\"\n\nDEG_deseq2 &lt;- readRDS('../test_TransProR/Select DEGs/DEG_deseq2.Rdata')\nDEG_edgeR &lt;- readRDS('../test_TransProR/Select DEGs/DEG_edgeR.Rdata')\nDEG_limma_voom &lt;- readRDS('../test_TransProR/Select DEGs/DEG_limma_voom.Rdata')\nWilcoxon_rank_sum_testoutRst &lt;- readRDS('../test_TransProR/Select DEGs/Wilcoxon_rank_sum_testoutRst.Rdata')"
  },
  {
    "objectID": "EnrichPolarBubble.html#fromtype-symbol-totype-entrezid",
    "href": "EnrichPolarBubble.html#fromtype-symbol-totype-entrezid",
    "title": "12  New Enrichment Polar Bubble",
    "section": "12.2 fromType = “SYMBOL”, toType = “ENTREZID”",
    "text": "12.2 fromType = “SYMBOL”, toType = “ENTREZID”\n\n# Conversion parameters defined to facilitate subsequent enrichment analysis:\n# fromType = \"SYMBOL\", toType = \"ENTREZID\"\n# This conversion is essential to avoid potential data loss due to non-one-to-one correspondence between symbols and ENTREZ IDs.\n\n# DEG_deseq2: Obtain a list of genes\ngene &lt;- rownames(DEG_deseq2)\n# Convert gene symbols to ENTREZ IDs\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n\n'select()' returned 1:many mapping between keys and columns\n\n\nWarning in bitr(gene, fromType = \"SYMBOL\", toType = \"ENTREZID\", OrgDb =\n\"org.Hs.eg.db\"): 43.37% of input gene IDs are fail to map...\n\n# Remove duplicates and merge\ngene &lt;- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\n# Extract the SYMBOL column from the first dataset as a vector\nsymbols_vector &lt;- gene$SYMBOL\n# Use the SYMBOL column as row names to filter corresponding rows in the second dataset\nDEG_deseq2 &lt;- DEG_deseq2[rownames(DEG_deseq2) %in% symbols_vector, ]\n\n# DEG_edgeR: Obtain a list of genes\ngene &lt;- rownames(DEG_edgeR)\n# Convert gene symbols to ENTREZ IDs\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n\n'select()' returned 1:many mapping between keys and columns\n\n\nWarning in bitr(gene, fromType = \"SYMBOL\", toType = \"ENTREZID\", OrgDb =\n\"org.Hs.eg.db\"): 27.35% of input gene IDs are fail to map...\n\n# Remove duplicates and merge\ngene &lt;- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\n# Extract the SYMBOL column from the first dataset as a vector\nsymbols_vector &lt;- gene$SYMBOL\n# Use the SYMBOL column as row names to filter corresponding rows in the second dataset\nDEG_edgeR &lt;- DEG_edgeR[rownames(DEG_edgeR) %in% symbols_vector, ]\n\n# DEG_limma_voom: Obtain a list of genes\ngene &lt;- rownames(DEG_limma_voom)\n# Convert gene symbols to ENTREZ IDs\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n\n'select()' returned 1:many mapping between keys and columns\n\n\nWarning in bitr(gene, fromType = \"SYMBOL\", toType = \"ENTREZID\", OrgDb =\n\"org.Hs.eg.db\"): 19.69% of input gene IDs are fail to map...\n\n# Remove duplicates and merge\ngene &lt;- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\n# Extract the SYMBOL column from the first dataset as a vector\nsymbols_vector &lt;- gene$SYMBOL\n# Use the SYMBOL column as row names to filter corresponding rows in the second dataset\nDEG_limma_voom &lt;- DEG_limma_voom[rownames(DEG_limma_voom) %in% symbols_vector, ]\n\n# Wilcoxon Rank Sum Test Output\n# Obtain a list of genes\ngene &lt;- rownames(Wilcoxon_rank_sum_testoutRst)\n# Convert gene symbols to ENTREZ IDs\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n\n'select()' returned 1:many mapping between keys and columns\n\n\nWarning in bitr(gene, fromType = \"SYMBOL\", toType = \"ENTREZID\", OrgDb =\n\"org.Hs.eg.db\"): 19.69% of input gene IDs are fail to map...\n\n# Remove duplicates and merge\ngene &lt;- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\n# Extract the SYMBOL column from the first dataset as a vector\nsymbols_vector &lt;- gene$SYMBOL\n# Use the SYMBOL column as row names to filter corresponding rows in the second dataset\nWilcoxon_rank_sum_testoutRst &lt;- Wilcoxon_rank_sum_testoutRst[rownames(Wilcoxon_rank_sum_testoutRst) %in% symbols_vector, ]"
  },
  {
    "objectID": "EnrichPolarBubble.html#select-differentially-expressed-genes",
    "href": "EnrichPolarBubble.html#select-differentially-expressed-genes",
    "title": "12  New Enrichment Polar Bubble",
    "section": "12.3 Select differentially expressed genes",
    "text": "12.3 Select differentially expressed genes\n\n# Select differentially expressed genes\n\nDiff_deseq2 &lt;- filter_diff_genes(DEG_deseq2, p_val_col = \"pvalue\", log_fc_col = \"log2FoldChange\", \n                                  p_val_threshold = 0.01, log_fc_threshold = 7)\n# First, get gene names as a list from the row names of the first dataset\ngene_names &lt;- rownames(Diff_deseq2)\n# Find matching rows in the second dataframe\nmatched_rows &lt;- all_count_exp[gene_names, ]\n# Calculate the average for each row\naverages &lt;- rowMeans(matched_rows, na.rm = TRUE) \n# Append averages to the last column of the first dataframe\nDiff_deseq2$average &lt;- averages\nDiff_deseq2$ID &lt;- rownames(Diff_deseq2)\nDiff_deseq2$changetype &lt;- ifelse(Diff_deseq2$change == 'up', 1, -1)\n# Define a small threshold value\nsmall_value &lt;- .Machine$double.xmin\n# Before computing -log10, replace zero values with the small threshold, then assign to a new column\nDiff_deseq2$log_pvalue &lt;- ifelse(Diff_deseq2$pvalue == 0, -log10(small_value), -log10(Diff_deseq2$pvalue))\nheatdata_deseq2 &lt;- all_count_exp[rownames(Diff_deseq2),]\n\n\nDiff_edgeR &lt;- filter_diff_genes(DEG_edgeR, p_val_col = \"PValue\", log_fc_col = \"logFC\", \n                                p_val_threshold = 0.01, log_fc_threshold = 7)\n# First, get gene names as a list from the row names of the first dataset\ngene_names &lt;- rownames(Diff_edgeR)\n# Find matching rows in the second dataframe\nmatched_rows &lt;- all_count_exp[gene_names, ]\n# Calculate the average for each row\naverages &lt;- rowMeans(matched_rows, na.rm = TRUE) \n# Append averages to the last column of the first dataframe\nDiff_edgeR$average &lt;- averages\nDiff_edgeR$ID &lt;- rownames(Diff_edgeR)\nDiff_edgeR$changetype &lt;- ifelse(Diff_edgeR$change == 'up', 1, -1)\n# Define a small threshold value\nsmall_value &lt;- .Machine$double.xmin\n# Before computing -log10, replace zero values with the small threshold, then assign to a new column\nDiff_edgeR$log_pvalue &lt;- ifelse(Diff_edgeR$PValue == 0, -log10(small_value), -log10(Diff_edgeR$PValue))\nheatdata_edgeR &lt;- all_count_exp[rownames(Diff_edgeR),]\n\n\nDiff_limma_voom &lt;- filter_diff_genes(DEG_limma_voom, p_val_col = \"P.Value\", log_fc_col = \"logFC\", \n                                      p_val_threshold = 0.01, log_fc_threshold = 5.5)\n# First, get gene names as a list from the row names of the first dataset\ngene_names &lt;- rownames(Diff_limma_voom)\n# Find matching rows in the second dataframe\nmatched_rows &lt;- all_count_exp[gene_names, ]\n# Calculate the average for each row\naverages &lt;- rowMeans(matched_rows, na.rm = TRUE) \n# Append averages to the last column of the first dataframe\nDiff_limma_voom$average &lt;- averages\nDiff_limma_voom$ID &lt;- rownames(Diff_limma_voom)\nDiff_limma_voom$changetype &lt;- ifelse(Diff_limma_voom$change == 'up', 1, -1)\n# Define a small threshold value\nsmall_value &lt;- .Machine$double.xmin\n# Before computing -log10, replace zero values with the small threshold, then assign to a new column\nDiff_limma_voom$log_pvalue &lt;- ifelse(Diff_limma_voom$P.Value == 0, -log10(small_value), -log10(Diff_limma_voom$P.Value))\nheatdata_limma_voom &lt;- all_count_exp[rownames(Diff_limma_voom),]\n\n\nDiff_Wilcoxon &lt;- filter_diff_genes(Wilcoxon_rank_sum_testoutRst, p_val_col = \"pValues\", log_fc_col = \"log2foldChange\", \n                                    p_val_threshold = 0.01, log_fc_threshold = 6)\n# First, get gene names as a list from the row names of the first dataset\ngene_names &lt;- rownames(Diff_Wilcoxon)\n# Find matching rows in the second dataframe\nmatched_rows &lt;- all_count_exp[gene_names, ]\n# Calculate the average for each row\naverages &lt;- rowMeans(matched_rows, na.rm = TRUE) \n# Append averages to the last column of the first"
  },
  {
    "objectID": "EnrichPolarBubble.html#enrichment-analysis-for-diff_deseq2",
    "href": "EnrichPolarBubble.html#enrichment-analysis-for-diff_deseq2",
    "title": "12  New Enrichment Polar Bubble",
    "section": "12.4 Enrichment analysis for Diff_deseq2",
    "text": "12.4 Enrichment analysis for Diff_deseq2\n\n###### Enrichment analysis for Diff_deseq2\n# Obtain a list of genes\ngene &lt;- rownames(Diff_deseq2)\n## Convert symbols to ENTREZ IDs\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n\n'select()' returned 1:1 mapping between keys and columns\n\n## Remove duplicates and merge\ngene &lt;- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\ngene_df &lt;- data.frame(logFC=Diff_deseq2$log2FoldChange, SYMBOL = rownames(Diff_deseq2))\ngene_df &lt;- merge(gene_df, gene, by=\"SYMBOL\")\nGO_deseq2 &lt;- gene_df$ENTREZID\n###### This file only requires a column with gene names\n###################\n\n# GO Analysis for Biological Process (BP)\n# Conduct gene enrichment analysis\nerich.go.BP_deseq2 &lt;- enrichGO(gene = GO_deseq2,\n                                OrgDb = org.Hs.eg.db,\n                                keyType = \"ENTREZID\",\n                                ont = 'BP', # Biological Process\n                                pvalueCutoff = 0.05,\n                                qvalueCutoff = 0.05,\n                                readable = TRUE)\nerich.go.BP.outdata_deseq2 &lt;- as.data.frame(erich.go.BP_deseq2)\nsummary(erich.go.BP.outdata_deseq2)\n\n      ID            Description         GeneRatio           BgRatio         \n Length:23          Length:23          Length:23          Length:23         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n     pvalue             p.adjust            qvalue            geneID         \n Min.   :0.000e+00   Min.   :0.000000   Min.   :0.000000   Length:23         \n 1st Qu.:0.000e+00   1st Qu.:0.000000   1st Qu.:0.000000   Class :character  \n Median :0.000e+00   Median :0.000000   Median :0.000000   Mode  :character  \n Mean   :6.230e-05   Mean   :0.005689   Mean   :0.005633                     \n 3rd Qu.:2.733e-05   3rd Qu.:0.002994   3rd Qu.:0.002965                     \n Max.   :4.446e-04   Max.   :0.037466   Max.   :0.037097                     \n     Count      \n Min.   : 4.00  \n 1st Qu.: 9.50  \n Median :22.00  \n Mean   :24.22  \n 3rd Qu.:41.00  \n Max.   :47.00  \n\n#write.csv(erich.go.BP.outdata, \"E:/fruit/erich.go.BP.outdata.csv\")\n\n# GO Analysis for Molecular Function (MF)\n# Conduct gene enrichment analysis\nerich.go.MF_deseq2 &lt;- enrichGO(gene = GO_deseq2,\n                                OrgDb = org.Hs.eg.db,\n                                keyType = \"ENTREZID\",\n                                ont = 'MF', # Molecular Function\n                                pvalueCutoff = 0.05,\n                                qvalueCutoff = 0.05,\n                                readable = TRUE)\nerich.go.MF.outdata_deseq2 &lt;- as.data.frame(erich.go.MF_deseq2)\n#write.csv(erich.go.MF.outdata, \"E:/fruit/erich.go.MF.outdata.csv\")\n\n# GO Analysis for Cellular Component (CC)\n# Conduct gene enrichment analysis\nerich.go.CC_deseq2 &lt;- enrichGO(gene = GO_deseq2,\n                                OrgDb = org.Hs.eg.db,\n                                keyType = \"ENTREZID\",\n                                ont = 'CC', # Cellular Component\n                                pvalueCutoff = 0.05,\n                                qvalueCutoff = 0.05,\n                                readable = TRUE)\nerich.go.CC.outdata_deseq2 &lt;- as.data.frame(erich.go.CC_deseq2)\n#write.csv(erich.go.CC.outdata, \"E:/fruit/erich.go.CC.outdata.csv\")\n\n#### KEGG Analysis ###\nkegg.out_deseq2 &lt;- enrichKEGG(gene = GO_deseq2,\n                              organism = \"hsa\",\n                              keyType = \"kegg\",\n                              pvalueCutoff = 0.05,\n                              pAdjustMethod = \"BH\",\n                              qvalueCutoff = 0.05)\n\nReading KEGG annotation online: \"https://rest.kegg.jp/link/hsa/pathway\"...\n\n\nReading KEGG annotation online: \"https://rest.kegg.jp/list/pathway/hsa\"...\n\nkegg.out.outdata_deseq2 &lt;- as.data.frame(kegg.out_deseq2)\n# Convert ENTREZ gene IDs or Ensembl gene IDs to symbols\nkegg.out1_deseq2 = as.data.frame(kegg.out_deseq2)\nENTREZID = strsplit(kegg.out1_deseq2$geneID, \"/\")\nsymbol = sapply(ENTREZID, function(x) {\n  y = bitr(x, fromType=\"ENTREZID\", toType=\"SYMBOL\", OrgDb=\"org.Hs.eg.db\")\n  # For many-to-one mappings, pick the first one\n  y = y[!duplicated(y$ENTREZID), -1]\n  y = paste(y, collapse = \"/\")\n})\n\n'select()' returned 1:1 mapping between keys and columns\n\n\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n\nkegg.out1_deseq2$geneID = symbol\nkegg.out1.outdata_deseq2 &lt;- as.data.frame(kegg.out1_deseq2)\n#write.csv(kegg.out1.outdata, \"E:/fruit/kegg.out1.outdata.csv\")\n\n###### Disease Ontology (DO) Analysis #####\nerich.go.DO_deseq2 &lt;- enrichDO(gene = GO_deseq2,\n                                ont = \"DO\", # Disease Ontology\n                                pvalueCutoff = 0.05,\n                                qvalueCutoff = 0.05,\n                                readable = TRUE)\nerich.go.DO.outdata_deseq2 &lt;- as.data.frame(erich.go.DO_deseq2)\n#write.csv(erich.go.DO.outdata, \"E:/fruit/erich.go.DO.outdata.csv\")\n\n##### Reactome Pathway Analysis #####\nerich.go.Reactome_deseq2 &lt;- enrichPathway(gene = GO_deseq2, pvalueCutoff = 0.05, readable = TRUE)\nerich.go.Reactome.outdata_deseq2 &lt;- as.data.frame(erich.go.Reactome_deseq2)\n#write.csv(erich.go.Reactome.outdata, \"E:/fruit/erich.go.Reactome.outdata.csv\")"
  },
  {
    "objectID": "EnrichPolarBubble.html#enrichment-analysis-for-diff_edger",
    "href": "EnrichPolarBubble.html#enrichment-analysis-for-diff_edger",
    "title": "12  New Enrichment Polar Bubble",
    "section": "12.5 Enrichment analysis for Diff_edgeR",
    "text": "12.5 Enrichment analysis for Diff_edgeR\n\n###### Enrichment analysis for Diff_edgeR\n# Obtain a list of genes\ngene &lt;- rownames(Diff_edgeR)\n## Convert symbols to ENTREZ IDs\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n\n'select()' returned 1:1 mapping between keys and columns\n\n## Remove duplicates and merge\ngene &lt;- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\ngene_df &lt;- data.frame(logFC=Diff_edgeR$logFC, SYMBOL = rownames(Diff_edgeR))\ngene_df &lt;- merge(gene_df, gene, by=\"SYMBOL\")\nGO_edgeR &lt;- gene_df$ENTREZID\n###### This file only requires a column with gene names\n###################\n\n# GO Analysis for Biological Process (BP)\n# Conduct gene enrichment analysis\nerich.go.BP_edgeR &lt;- enrichGO(gene = GO_edgeR,\n                              OrgDb = org.Hs.eg.db,\n                              keyType = \"ENTREZID\",\n                              ont = 'BP', # Biological Process\n                              pvalueCutoff = 0.05,\n                              qvalueCutoff = 0.05,\n                              readable = TRUE)\nerich.go.BP.outdata_edgeR &lt;- as.data.frame(erich.go.BP_edgeR)\n#write.csv(erich.go.BP.outdata, \"E:/fruit/erich.go.BP.outdata.csv\")\n\n# GO Analysis for Molecular Function (MF)\n# Conduct gene enrichment analysis\nerich.go.MF_edgeR &lt;- enrichGO(gene = GO_edgeR,\n                              OrgDb = org.Hs.eg.db,\n                              keyType = \"ENTREZID\",\n                              ont = 'MF', # Molecular Function\n                              pvalueCutoff = 0.05,\n                              qvalueCutoff = 0.05,\n                              readable = TRUE)\nerich.go.MF.outdata_edgeR &lt;- as.data.frame(erich.go.MF_edgeR)\n#write.csv(erich.go.MF.outdata, \"E:/fruit/erich.go.MF.outdata.csv\")\n\n# GO Analysis for Cellular Component (CC)\n# Conduct gene enrichment analysis\nerich.go.CC_edgeR &lt;- enrichGO(gene = GO_edgeR,\n                              OrgDb = org.Hs.eg.db,\n                              keyType = \"ENTREZID\",\n                              ont = 'CC', # Cellular Component\n                              pvalueCutoff = 0.05,\n                              qvalueCutoff = 0.05,\n                              readable = TRUE)\nerich.go.CC.outdata_edgeR &lt;- as.data.frame(erich.go.CC_edgeR)\n#write.csv(erich.go.CC.outdata, \"E:/fruit/erich.go.CC.outdata.csv\")\n\n#### KEGG Analysis ###\nkegg.out_edgeR &lt;- enrichKEGG(gene = GO_edgeR,\n                              organism = \"hsa\",\n                              keyType = \"kegg\",\n                              pvalueCutoff = 0.05,\n                              pAdjustMethod = \"BH\",\n                              qvalueCutoff = 0.05)\nkegg.out.outdata_edgeR &lt;- as.data.frame(kegg.out_edgeR)\n# Convert ENTREZ gene IDs or Ensembl gene IDs to symbols\nlibrary(org.Hs.eg.db)\nkegg.out1_edgeR = as.data.frame(kegg.out_edgeR)\nENTREZID = strsplit(kegg.out1_edgeR$geneID, \"/\")\nsymbol = sapply(ENTREZID, function(x) {\n  y = bitr(x, fromType=\"ENTREZID\", toType=\"SYMBOL\", OrgDb=\"org.Hs.eg.db\")\n  # For many-to-one mappings, pick the first\n  y = y[!duplicated(y$ENTREZID), -1]\n  y = paste(y, collapse = \"/\")\n})\n\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n\nkegg.out1_edgeR$geneID = symbol\nkegg.out1.outdata_edgeR &lt;- as.data.frame(kegg.out1_edgeR)\n#write.csv(kegg.out1.outdata, \"E:/fruit/kegg.out1.outdata.csv\")\n\n###### Disease Ontology (DO) Analysis #####\nlibrary(DOSE)\nerich.go.DO_edgeR &lt;- enrichDO(gene = GO_edgeR,\n                              ont = \"DO\", # Disease Ontology\n                              pvalueCutoff = 0.5,\n                              qvalueCutoff = 0.5,\n                              readable = TRUE)\nerich.go.DO.outdata_edgeR &lt;- as.data.frame(erich.go.DO_edgeR)\n#write.csv(erich.go.DO.outdata, \"E:/fruit/erich.go.DO.outdata.csv\")\n\nlibrary(ReactomePA)\n##### Reactome Pathway Analysis #####\nerich.go.Reactome_edgeR &lt;- enrichPathway(gene = GO_edgeR, pvalueCutoff = 0.5, readable = TRUE)\nerich.go.Reactome.outdata_edgeR &lt;- as.data.frame(erich.go.Reactome_edgeR)"
  },
  {
    "objectID": "EnrichPolarBubble.html#enrichment-analysis-for-diff_limma_voom",
    "href": "EnrichPolarBubble.html#enrichment-analysis-for-diff_limma_voom",
    "title": "12  New Enrichment Polar Bubble",
    "section": "12.6 Enrichment analysis for Diff_limma_voom",
    "text": "12.6 Enrichment analysis for Diff_limma_voom\n\n###### Enrichment analysis for Diff_limma_voom\n# Obtain a list of genes\ngene &lt;- rownames(Diff_limma_voom)\n## Convert symbols to ENTREZ IDs\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n\n'select()' returned 1:1 mapping between keys and columns\n\n## Remove duplicates and merge\ngene &lt;- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\ngene_df &lt;- data.frame(logFC=Diff_limma_voom$logFC, SYMBOL = rownames(Diff_limma_voom))\ngene_df &lt;- merge(gene_df, gene, by=\"SYMBOL\")\nGO_limma &lt;- gene_df$ENTREZID\n###### This file only requires a column with gene names\n###################\n\n# GO Analysis for Biological Process (BP)\n# Conduct gene enrichment analysis\nerich.go.BP_limma &lt;- enrichGO(gene = GO_limma,\n                              OrgDb = org.Hs.eg.db,\n                              keyType = \"ENTREZID\",\n                              ont = 'BP', # Biological Process\n                              pvalueCutoff = 0.05,\n                              qvalueCutoff = 0.05,\n                              readable = TRUE)\nerich.go.BP.outdata_limma &lt;- as.data.frame(erich.go.BP_limma)\n#write.csv(erich.go.BP.outdata, \"E:/fruit/erich.go.BP.outdata.csv\")\n\n# GO Analysis for Molecular Function (MF)\n# Conduct gene enrichment analysis\nerich.go.MF_limma &lt;- enrichGO(gene = GO_limma,\n                              OrgDb = org.Hs.eg.db,\n                              keyType = \"ENTREZID\",\n                              ont = 'MF', # Molecular Function\n                              pvalueCutoff = 0.05,\n                              qvalueCutoff = 0.05,\n                              readable = TRUE)\nerich.go.MF.outdata_limma &lt;- as.data.frame(erich.go.MF_limma)\n#write.csv(erich.go.MF.outdata, \"E:/fruit/erich.go.MF.outdata.csv\")\n\n# GO Analysis for Cellular Component (CC)\n# Conduct gene enrichment analysis\nerich.go.CC_limma &lt;- enrichGO(gene = GO_limma,\n                              OrgDb = org.Hs.eg.db,\n                              keyType = \"ENTREZID\",\n                              ont = 'CC', # Cellular Component\n                              pvalueCutoff = 0.05,\n                              qvalueCutoff = 0.05,\n                              readable = TRUE)\nerich.go.CC.outdata_limma &lt;- as.data.frame(erich.go.CC_limma)\n#write.csv(erich.go.CC.outdata, \"E:/fruit/erich.go.CC.outdata.csv\")\n\n#### KEGG Analysis ###\nkegg.out_limma &lt;- enrichKEGG(gene = GO_limma,\n                              organism = \"hsa\",\n                              keyType = \"kegg\",\n                              pvalueCutoff = 0.05,\n                              pAdjustMethod = \"BH\",\n                              qvalueCutoff = 0.05)\nkegg.out.outdata_limma &lt;- as.data.frame(kegg.out_limma)\n# Convert ENTREZ gene IDs or Ensembl gene IDs to symbols\nlibrary(org.Hs.eg.db)\nkegg.out1_limma = as.data.frame(kegg.out_limma)\nENTREZID = strsplit(kegg.out1_limma$geneID, \"/\")\nsymbol = sapply(ENTREZID, function(x) {\n  y = bitr(x, fromType=\"ENTREZID\", toType=\"SYMBOL\", OrgDb=\"org.Hs.eg.db\")\n  # For many-to-one mappings, pick the first\n  y = y[!duplicated(y$ENTREZID), -1]\n  y = paste(y, collapse = \"/\")\n})\n\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n\nkegg.out1_limma$geneID = symbol\nkegg.out1.outdata_limma &lt;- as.data.frame(kegg.out1_limma)\n#write.csv(kegg.out1.outdata, \"E:/fruit/kegg.out1.outdata.csv\")\n\n###### Disease Ontology (DO) Analysis #####\nlibrary(DOSE)\nerich.go.DO_limma &lt;- enrichDO(gene = GO_limma,\n                              ont = \"DO\", # Disease Ontology\n                              pvalueCutoff = 0.05,\n                              qvalueCutoff = 0.05,\n                              readable = TRUE)\nerich.go.DO.outdata_limma &lt;- as.data.frame(erich.go.DO_limma)\n#write.csv(erich.go.DO.outdata, \"E:/fruit/erich.go.DO.outdata.csv\")\n\nlibrary(ReactomePA)\n##### Reactome Pathway Analysis #####\nerich.go.Reactome_limma &lt;- enrichPathway(gene=GO_limma, pvalueCutoff=0.05, readable=TRUE)\nerich.go.Reactome.outdata_limma &lt;- as.data.frame(erich.go.Reactome_limma)\n#write.csv(erich.go.Reactome.outdata, \"E:/fruit/erich.go.Reactome.outdata.csv\")"
  },
  {
    "objectID": "EnrichPolarBubble.html#enrichment-analysis-for-diff_wilcoxon",
    "href": "EnrichPolarBubble.html#enrichment-analysis-for-diff_wilcoxon",
    "title": "12  New Enrichment Polar Bubble",
    "section": "12.7 Enrichment analysis for Diff_Wilcoxon",
    "text": "12.7 Enrichment analysis for Diff_Wilcoxon\n\n###### Enrichment analysis for Diff_Wilcoxon\n# Obtain a list of genes\ngene &lt;- rownames(Diff_Wilcoxon)\n## Convert symbols to ENTREZ IDs\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n\n'select()' returned 1:1 mapping between keys and columns\n\n## Remove duplicates and merge\ngene &lt;- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\ngene_df &lt;- data.frame(logFC=Diff_Wilcoxon$log2foldChange, SYMBOL = rownames(Diff_Wilcoxon))\ngene_df &lt;- merge(gene_df, gene, by=\"SYMBOL\")\nGO_Wilcoxon &lt;- gene_df$ENTREZID\n###### This file only requires a column with gene names\n###################\n\n# GO Analysis for Biological Process (BP)\n# Conduct gene enrichment analysis\nerich.go.BP_Wilcoxon &lt;- enrichGO(gene = GO_Wilcoxon,\n                                  OrgDb = org.Hs.eg.db,\n                                  keyType = \"ENTREZID\",\n                                  ont = 'BP', # Biological Process\n                                  pvalueCutoff = 0.05,\n                                  qvalueCutoff = 0.05,\n                                  readable = TRUE)\nerich.go.BP.outdata_Wilcoxon &lt;- as.data.frame(erich.go.BP_Wilcoxon)\n#write.csv(erich.go.BP.outdata, \"E:/fruit/erich.go.BP.outdata.csv\")\n\n# GO Analysis for Molecular Function (MF)\n# Conduct gene enrichment analysis\nerich.go.MF_Wilcoxon &lt;- enrichGO(gene = GO_Wilcoxon,\n                                  OrgDb = org.Hs.eg.db,\n                                  keyType = \"ENTREZID\",\n                                  ont = 'MF', # Molecular Function\n                                  pvalueCutoff = 0.05,\n                                  qvalueCutoff = 0.05,\n                                  readable = TRUE)\nerich.go.MF.outdata_Wilcoxon &lt;- as.data.frame(erich.go.MF_Wilcoxon)\n#write.csv(erich.go.MF.outdata, \"E:/fruit/erich.go.MF.outdata.csv\")\n\n# GO Analysis for Cellular Component (CC)\n# Conduct gene enrichment analysis\nerich.go.CC_Wilcoxon &lt;- enrichGO(gene = GO_Wilcoxon,\n                                  OrgDb = org.Hs.eg.db,\n                                  keyType = \"ENTREZID\",\n                                  ont = 'CC', # Cellular Component\n                                  pvalueCutoff = 0.05,\n                                  qvalueCutoff = 0.05,\n                                  readable = TRUE)\nerich.go.CC.outdata_Wilcoxon &lt;- as.data.frame(erich.go.CC_Wilcoxon)\n#write.csv(erich.go.CC.outdata, \"E:/fruit/erich.go.CC.outdata.csv\")\n\n#### KEGG Analysis ###\nkegg.out_Wilcoxon &lt;- enrichKEGG(gene = GO_Wilcoxon,\n                                organism = \"hsa\",\n                                keyType = \"kegg\",\n                                pvalueCutoff = 0.05,\n                                pAdjustMethod = \"BH\",\n                                qvalueCutoff = 0.05)\nkegg.out.outdata_Wilcoxon &lt;- as.data.frame(kegg.out_Wilcoxon)\n# Convert ENTREZ gene IDs or Ensembl gene IDs to symbols\nlibrary(org.Hs.eg.db)\nkegg.out1_Wilcoxon = as.data.frame(kegg.out_Wilcoxon)\nENTREZID = strsplit(kegg.out1_Wilcoxon$geneID, \"/\")\nsymbol = sapply(ENTREZID, function(x) {\n  y = bitr(x, fromType=\"ENTREZID\", toType=\"SYMBOL\", OrgDb=\"org.Hs.eg.db\")\n  # For many-to-one mappings, pick the first\n  y = y[!duplicated(y$ENTREZID), -1]\n  y = paste(y, collapse = \"/\")\n})\n\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n\nkegg.out1_Wilcoxon$geneID = symbol\nkegg.out1.outdata_Wilcoxon &lt;- as.data.frame(kegg.out1_Wilcoxon)\n#write.csv(kegg.out1.outdata, \"E:/fruit/kegg.out1.outdata.csv\")\n\n###### Disease Ontology (DO) Analysis #####\nlibrary(DOSE)\nerich.go.DO_Wilcoxon &lt;- enrichDO(gene = GO_Wilcoxon,\n                                  ont = \"DO\", # Disease Ontology\n                                  pvalueCutoff = 0.05,\n                                  qvalueCutoff = 0.05,\n                                  readable = TRUE)\nerich.go.DO.outdata_Wilcoxon &lt;- as.data.frame(erich.go.DO_Wilcoxon)\n\n#####Reactome########\nerich.go.Reactome_Wilcoxon&lt;-enrichPathway(gene=GO_Wilcoxon,pvalueCutoff=0.05, readable=T)\nerich.go.Reactome.outdata_Wilcoxon &lt;- as.data.frame(erich.go.Reactome_Wilcoxon)\n\n\n# Define list of data frames\ndf_list &lt;- list(\n  erich.go.BP.outdata_deseq2,\n  erich.go.MF.outdata_deseq2,\n  erich.go.CC.outdata_deseq2,\n  kegg.out1.outdata_deseq2,\n  erich.go.DO.outdata_deseq2,\n  erich.go.Reactome.outdata_deseq2\n)\n\n# Method name, assuming all \"method\" columns should have the same name\nmethod_name &lt;- \"deseq2\"\n\n# Call function to merge data frames\n#combined_df_deseq2 &lt;- merge_dataframes_with_same_method(df_list, method_name)\n\ncolor_list &lt;- c(\"#3f51b5\", \"#ffc107\", \"#4caf50\", \"#009688\", \"#ff9800\", \"#673ab7\") # Color values corresponding to df_list\n\n#combined_df &lt;- merge_dataframes_with_same_method_and_color(df_list, method_name, color_list)\ncombined_df_deseq2 &lt;- merge_method_color(df_list, method_name, color_list)\n\n\n# Define list of data frames\ndf_list &lt;- list(\n  erich.go.BP.outdata_edgeR,\n  erich.go.MF.outdata_edgeR,\n  erich.go.CC.outdata_edgeR,\n  kegg.out1.outdata_edgeR,\n  erich.go.DO.outdata_edgeR,\n  erich.go.Reactome.outdata_edgeR\n)\n\n# Method name, assuming all \"method\" columns should have the same name\nmethod_name &lt;- \"edgeR\"\ncolor_list &lt;- c(\"#3f51b5\", \"#ffc107\", \"#4caf50\", \"#009688\", \"#ff9800\", \"#673ab7\")\n# Call function to merge data frames\n#combined_df_edgeR &lt;- merge_dataframes_with_same_method(df_list, method_name)\ncombined_df_edgeR &lt;- merge_method_color(df_list, method_name, color_list)\n\n\n# Define list of data frames\ndf_list &lt;- list(\n  erich.go.BP.outdata_limma,\n  erich.go.MF.outdata_limma,\n  erich.go.CC.outdata_limma,\n  kegg.out1.outdata_limma,\n  erich.go.DO.outdata_limma,\n  erich.go.Reactome.outdata_limma\n)\n\n# Method name, assuming all \"method\" columns should have the same name\nmethod_name &lt;- \"limma\"\ncolor_list &lt;- c(\"#3f51b5\", \"#ffc107\", \"#4caf50\", \"#009688\", \"#ff9800\", \"#673ab7\")\n# Call function to merge data frames\n#combined_df_limma &lt;- merge_dataframes_with_same_method(df_list, method_name)\ncombined_df_limma &lt;- merge_method_color(df_list, method_name, color_list)\n\n\n# Define list of data frames\ndf_list &lt;- list(\n  erich.go.BP.outdata_Wilcoxon,\n  erich.go.MF.outdata_Wilcoxon,\n  erich.go.CC.outdata_Wilcoxon,\n  kegg.out1.outdata_Wilcoxon,\n  erich.go.DO.outdata_Wilcoxon,\n  erich.go.Reactome.outdata_Wilcoxon\n)\n\n# Method name, assuming all \"method\" columns should have the same name\nmethod_name &lt;- \"Wilcoxon\"\ncolor_list &lt;- c(\"#3f51b5\", \"#ffc107\", \"#4caf50\", \"#009688\", \"#ff9800\", \"#673ab7\")\n# Call function to merge data frames\n#combined_df_Wilcoxon &lt;- merge_dataframes_with_same_method(df_list, method_name)\ncombined_df_Wilcoxon &lt;- merge_method_color(df_list, method_name, color_list)\n\n\n# Use this function to merge four different data frames that have common row names and add an id column to each data frame\ndf_list &lt;- list(\n  combined_df_deseq2,\n  combined_df_edgeR,\n  combined_df_limma,\n  combined_df_Wilcoxon\n)\n\n# Define a function to count the number of words in a description\ncount_words &lt;- function(description) {\n  length(strsplit(description, \"\\\\s+\")[[1]])\n}\n\n# Define a function to filter the data frame so that it only includes rows with no more than 8 words\nfilter_descriptions &lt;- function(df) {\n  df %&gt;%\n    filter(sapply(Description, count_words) &lt;= 8)\n}\n\n# Apply this function to each data frame in the list\nfiltered_df_list &lt;- lapply(df_list, filter_descriptions)\nsummary(filtered_df_list)\n\n     Length Class      Mode\n[1,] 4      data.frame list\n[2,] 4      data.frame list\n[3,] 4      data.frame list\n[4,] 4      data.frame list"
  },
  {
    "objectID": "EnrichPolarBubble.html#pre_data",
    "href": "EnrichPolarBubble.html#pre_data",
    "title": "12  New Enrichment Polar Bubble",
    "section": "12.8 Pre_data",
    "text": "12.8 Pre_data\n\nfinal_combined_df_with_id_and_position &lt;- merge_id_position(filtered_df_list)\nhighlight_ids &lt;- c(3,9,12, 20, 25, 33,36,42)\npal = c( \"#5c6bc0\", \"#7e57c2\",\"#9ccc65\",\"#ffca28\")\nenrich_polar_bubble(final_combined_df_with_id_and_position, pal, highlight_ids)"
  },
  {
    "objectID": "EnrichPolarBubble.html#reference",
    "href": "EnrichPolarBubble.html#reference",
    "title": "12  New Enrichment Polar Bubble",
    "section": "12.9 Reference",
    "text": "12.9 Reference\n\n\nggplot2:\n\n\ngithub:ggplot2\nAn implementation of the Grammar of Graphics in R\n\n\nggtreeExtra:\n\n\nS Xu, Z Dai, P Guo, X Fu, S Liu, L Zhou, W Tang, T Feng, M Chen, L Zhan, T Wu, E Hu, Y Jiang, X Bo and G Yu*. ggtreeExtra: Compact visualization of richly annotated phylogenetic data. Molecular Biology and Evolution. 2021, 38(9):4039-4042. \n\n\nggtree:\n\n\nG Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. 2017, 8(1):28-36.\n\n\nclusterProfiler 4.0:\n\n\nT Wu#, E Hu#, S Xu, M Chen, P Guo, Z Dai, T Feng, L Zhou, W Tang, L Zhan, X Fu, S Liu, X Bo, G Yu. clusterProfiler 4.0: A universal enrichment tool for interpreting omics data. The Innovation. 2021, 2(3):100141."
  },
  {
    "objectID": "Circos Fruit.html#load-data",
    "href": "Circos Fruit.html#load-data",
    "title": "13  Circos Fruit",
    "section": "13.1 Load data",
    "text": "13.1 Load data\n\ntumor &lt;- readRDS(\"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\")\nnormal &lt;- readRDS('../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds')\n# Merge the datasets, ensuring both have genes as row names\nall_count_exp &lt;- merge(tumor, normal, by = \"row.names\")\nall_count_exp &lt;- tibble::column_to_rownames(all_count_exp, var = \"Row.names\")  # Set the row names\n\n# Drawing data\n# all_count_exp &lt;- log_transform(all_count_exp)\nDEG_deseq2 &lt;- readRDS('../test_TransProR/Select DEGs/DEG_deseq2.Rdata')\n#head(all_count_exp, 1)\nhead(DEG_deseq2, 5)\n\n          baseMean log2FoldChange      lfcSE      stat pvalue padj change\nA1BG      134.6084      -2.549682 0.05677219 -44.91075      0    0   down\nA2M     30208.9912       3.251168 0.08394645  38.72907      0    0     up\nAADACL2   801.4538      -8.229956 0.18969649 -43.38486      0    0   down\nAARS2    1153.5493       1.624753 0.03283522  49.48202      0    0 stable\nAARSD1    567.8672      -2.082289 0.02275703 -91.50088      0    0 stable"
  },
  {
    "objectID": "Circos Fruit.html#convert-from-symbol-to-entrezid",
    "href": "Circos Fruit.html#convert-from-symbol-to-entrezid",
    "title": "13  Circos Fruit",
    "section": "13.2 Convert from SYMBOL to ENTREZID",
    "text": "13.2 Convert from SYMBOL to ENTREZID\n\n# Convert from SYMBOL to ENTREZID for convenient enrichment analysis later. It's crucial to do this now as a direct conversion may result in a reduced set of genes due to non-one-to-one correspondence.\n\n# DEG_deseq2\n# Retrieve gene list\ngene &lt;- rownames(DEG_deseq2)\n# Perform conversion\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n\n'select()' returned 1:many mapping between keys and columns\n\n\nWarning in bitr(gene, fromType = \"SYMBOL\", toType = \"ENTREZID\", OrgDb =\n\"org.Hs.eg.db\"): 43.37% of input gene IDs are fail to map...\n\n# Remove duplicates and merge\ngene &lt;- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\n# Extract the SYMBOL column as a vector from the first dataset\nsymbols_vector &lt;- gene$SYMBOL\n# Use the SYMBOL column to filter corresponding rows from the second dataset by row names\nDEG_deseq2 &lt;- DEG_deseq2[rownames(DEG_deseq2) %in% symbols_vector, ]\nhead(DEG_deseq2, 5)\n\n          baseMean log2FoldChange      lfcSE      stat pvalue padj change\nA1BG      134.6084      -2.549682 0.05677219 -44.91075      0    0   down\nA2M     30208.9912       3.251168 0.08394645  38.72907      0    0     up\nAADACL2   801.4538      -8.229956 0.18969649 -43.38486      0    0   down\nAARS2    1153.5493       1.624753 0.03283522  49.48202      0    0 stable\nAARSD1    567.8672      -2.082289 0.02275703 -91.50088      0    0 stable"
  },
  {
    "objectID": "Circos Fruit.html#select-differentially-expressed-genes",
    "href": "Circos Fruit.html#select-differentially-expressed-genes",
    "title": "13  Circos Fruit",
    "section": "13.3 Select differentially expressed genes",
    "text": "13.3 Select differentially expressed genes\n\nDiff_deseq2 &lt;- filter_diff_genes(\n  DEG_deseq2, \n  p_val_col = \"pvalue\", \n  log_fc_col = \"log2FoldChange\",\n  p_val_threshold = 0.05, \n  log_fc_threshold = 3\n  )\n# First, obtain a list of gene names from the row names of the first dataset\ngene_names &lt;- rownames(Diff_deseq2)\n# Find the matching rows in the second dataframe\nmatched_rows &lt;- all_count_exp[gene_names, ]\n# Calculate the mean for each row\naverages &lt;- rowMeans(matched_rows, na.rm = TRUE)\n# Append the averages as a new column to the first dataframe\nDiff_deseq2$average &lt;- averages\nDiff_deseq2$ID &lt;- rownames(Diff_deseq2)\nDiff_deseq2$changetype &lt;- ifelse(Diff_deseq2$change == 'up', 1, -1)\n# Define a small threshold value\nsmall_value &lt;- .Machine$double.xmin\n# Before calculating -log10, replace zeroes with the small threshold value and assign it to a new column\nDiff_deseq2$log_pvalue &lt;- ifelse(Diff_deseq2$pvalue == 0, -log10(small_value), -log10(Diff_deseq2$pvalue))\n# Extract the expression data corresponding to the differentially expressed genes\nheatdata_deseq2 &lt;- all_count_exp[rownames(Diff_deseq2), ]\n#head(heatdata_deseq2, 1)\n\n\nset.seed(123)\n# Preparing heatdata for visualization\nHeatdataDeseq2 &lt;- TransProR::process_heatdata(heatdata_deseq2, \n                                              selection = 2, \n                                              custom_names = NULL, \n                                              num_names_per_group = 60, \n                                              prefix_length = 4)\nHeatdataDeseq2 &lt;- as.matrix(HeatdataDeseq2)\n\nlibrary(msigdbr)\n## Using the msigdbr package to download and prepare for GSVA analysis with KEGG and GO gene sets\n## KEGG\nKEGG_df_all &lt;- msigdbr(species = \"Homo sapiens\", # Homo sapiens or Mus musculus\n                        category = \"C2\",\n                        subcategory = \"CP:KEGG\") \nKEGG_df &lt;- dplyr::select(KEGG_df_all, gs_name, gs_exact_source, gene_symbol)\nkegg_list &lt;- split(KEGG_df$gene_symbol, KEGG_df$gs_name) # Grouping gene symbols by gs_name\nhead(kegg_list)\n\n$KEGG_ABC_TRANSPORTERS\n [1] \"ABCA1\"  \"ABCA10\" \"ABCA12\" \"ABCA13\" \"ABCA2\"  \"ABCA3\"  \"ABCA4\"  \"ABCA5\" \n [9] \"ABCA6\"  \"ABCA7\"  \"ABCA8\"  \"ABCA9\"  \"ABCB1\"  \"ABCB10\" \"ABCB11\" \"ABCB11\"\n[17] \"ABCB4\"  \"ABCB5\"  \"ABCB6\"  \"ABCB7\"  \"ABCB8\"  \"ABCB9\"  \"ABCC1\"  \"ABCC1\" \n[25] \"ABCC10\" \"ABCC11\" \"ABCC12\" \"ABCC2\"  \"ABCC3\"  \"ABCC4\"  \"ABCC5\"  \"ABCC6\" \n[33] \"ABCC6\"  \"ABCC8\"  \"ABCC9\"  \"ABCD1\"  \"ABCD2\"  \"ABCD3\"  \"ABCD4\"  \"ABCG1\" \n[41] \"ABCG2\"  \"ABCG4\"  \"ABCG5\"  \"ABCG8\"  \"CFTR\"   \"TAP1\"   \"TAP1\"   \"TAP1\"  \n[49] \"TAP1\"   \"TAP1\"   \"TAP1\"   \"TAP1\"   \"TAP1\"   \"TAP2\"   \"TAP2\"   \"TAP2\"  \n[57] \"TAP2\"   \"TAP2\"   \"TAP2\"   \"TAP2\"   \"TAP2\"  \n\n$KEGG_ACUTE_MYELOID_LEUKEMIA\n [1] \"AKT1\"     \"AKT2\"     \"AKT3\"     \"AKT3\"     \"ARAF\"     \"BAD\"     \n [7] \"BRAF\"     \"CCNA1\"    \"CCND1\"    \"CEBPA\"    \"CHUK\"     \"EIF4EBP1\"\n[13] \"FLT3\"     \"GRB2\"     \"HRAS\"     \"HRAS\"     \"IKBKB\"    \"IKBKG\"   \n[19] \"JUP\"      \"KIT\"      \"KRAS\"     \"LEF1\"     \"MAP2K1\"   \"MAP2K2\"  \n[25] \"MAPK1\"    \"MAPK3\"    \"MTOR\"     \"MYC\"      \"NFKB1\"    \"NRAS\"    \n[31] \"PIK3CA\"   \"PIK3CB\"   \"PIK3CD\"   \"PIK3CG\"   \"PIK3R1\"   \"PIK3R2\"  \n[37] \"PIK3R3\"   \"PIK3R5\"   \"PIM1\"     \"PIM2\"     \"PML\"      \"PPARD\"   \n[43] \"RAF1\"     \"RARA\"     \"RELA\"     \"RPS6KB1\"  \"RPS6KB2\"  \"RUNX1\"   \n[49] \"RUNX1T1\"  \"SOS1\"     \"SOS2\"     \"SPI1\"     \"STAT3\"    \"STAT5A\"  \n[55] \"STAT5B\"   \"TCF7\"     \"TCF7L1\"   \"TCF7L2\"   \"ZBTB16\"  \n\n$KEGG_ADHERENS_JUNCTION\n [1] \"ACP1\"    \"ACTB\"    \"ACTG1\"   \"ACTN1\"   \"ACTN2\"   \"ACTN3\"   \"ACTN4\"  \n [8] \"ACTN4\"   \"AFDN\"    \"BAIAP2\"  \"CDC42\"   \"CDH1\"    \"CREBBP\"  \"CSNK2A1\"\n[15] \"CSNK2A2\" \"CSNK2B\"  \"CSNK2B\"  \"CSNK2B\"  \"CSNK2B\"  \"CSNK2B\"  \"CSNK2B\" \n[22] \"CSNK2B\"  \"CSNK2B\"  \"CTNNA1\"  \"CTNNA2\"  \"CTNNA3\"  \"CTNNB1\"  \"CTNND1\" \n[29] \"EGFR\"    \"EP300\"   \"ERBB2\"   \"FARP2\"   \"FER\"     \"FGFR1\"   \"FYN\"    \n[36] \"IGF1R\"   \"INSR\"    \"IQGAP1\"  \"LEF1\"    \"LMO7\"    \"MAP3K7\"  \"MAPK1\"  \n[43] \"MAPK3\"   \"MET\"     \"NECTIN1\" \"NECTIN2\" \"NECTIN3\" \"NECTIN4\" \"NLK\"    \n[50] \"PARD3\"   \"PTPN1\"   \"PTPN6\"   \"PTPRB\"   \"PTPRF\"   \"PTPRJ\"   \"PTPRM\"  \n[57] \"RAC1\"    \"RAC2\"    \"RAC3\"    \"RHOA\"    \"SMAD2\"   \"SMAD3\"   \"SMAD4\"  \n[64] \"SNAI1\"   \"SNAI2\"   \"SORBS1\"  \"SRC\"     \"SSX2IP\"  \"TCF7\"    \"TCF7L1\" \n[71] \"TCF7L2\"  \"TGFBR1\"  \"TGFBR2\"  \"TJP1\"    \"TJP1\"    \"VCL\"     \"WAS\"    \n[78] \"WASF1\"   \"WASF2\"   \"WASF3\"   \"WASL\"    \"YES1\"   \n\n$KEGG_ADIPOCYTOKINE_SIGNALING_PATHWAY\n [1] \"ACACB\"    \"ACSL1\"    \"ACSL3\"    \"ACSL4\"    \"ACSL5\"    \"ACSL6\"   \n [7] \"ADIPOQ\"   \"ADIPOR1\"  \"ADIPOR2\"  \"ADIPOR2\"  \"AGRP\"     \"AKT1\"    \n[13] \"AKT2\"     \"AKT3\"     \"AKT3\"     \"CAMKK1\"   \"CAMKK2\"   \"CD36\"    \n[19] \"CHUK\"     \"CPT1A\"    \"CPT1B\"    \"CPT1C\"    \"G6PC1\"    \"G6PC2\"   \n[25] \"G6PC2\"    \"IKBKB\"    \"IKBKG\"    \"IRS1\"     \"IRS2\"     \"IRS4\"    \n[31] \"JAK2\"     \"LEP\"      \"LEPR\"     \"MAPK10\"   \"MAPK8\"    \"MAPK9\"   \n[37] \"MTOR\"     \"NFKB1\"    \"NFKBIA\"   \"NFKBIB\"   \"NFKBIB\"   \"NFKBIE\"  \n[43] \"NPY\"      \"PCK1\"     \"PCK2\"     \"PCK2\"     \"POMC\"     \"PPARA\"   \n[49] \"PPARGC1A\" \"PRKAA1\"   \"PRKAA2\"   \"PRKAB1\"   \"PRKAB2\"   \"PRKAG1\"  \n[55] \"PRKAG2\"   \"PRKAG3\"   \"PRKCQ\"    \"PTPN11\"   \"RELA\"     \"RXRA\"    \n[61] \"RXRB\"     \"RXRB\"     \"RXRB\"     \"RXRB\"     \"RXRB\"     \"RXRB\"    \n[67] \"RXRG\"     \"SLC2A1\"   \"SLC2A4\"   \"SLC2A4\"   \"SOCS3\"    \"STAT3\"   \n[73] \"STK11\"    \"TNF\"      \"TNF\"      \"TNF\"      \"TNF\"      \"TNF\"     \n[79] \"TNF\"      \"TNF\"      \"TNF\"      \"TNFRSF1A\" \"TNFRSF1B\" \"TRADD\"   \n[85] \"TRAF2\"   \n\n$KEGG_ALANINE_ASPARTATE_AND_GLUTAMATE_METABOLISM\n [1] \"ABAT\"    \"ACY3\"    \"ADSL\"    \"ADSS1\"   \"ADSS2\"   \"AGXT\"    \"AGXT2\"  \n [8] \"ALDH4A1\" \"ALDH5A1\" \"ASL\"     \"ASNS\"    \"ASPA\"    \"ASS1\"    \"CAD\"    \n[15] \"CPS1\"    \"DDO\"     \"GAD1\"    \"GAD2\"    \"GFPT1\"   \"GFPT2\"   \"GLS\"    \n[22] \"GLS2\"    \"GLUD1\"   \"GLUD2\"   \"GLUD2\"   \"GLUL\"    \"GOT1\"    \"GOT2\"   \n[29] \"GPT\"     \"GPT2\"    \"IL4I1\"   \"NIT2\"    \"PPAT\"   \n\n$KEGG_ALDOSTERONE_REGULATED_SODIUM_REABSORPTION\n [1] \"ATP1A1\"   \"ATP1A2\"   \"ATP1A3\"   \"ATP1A4\"   \"ATP1B1\"   \"ATP1B2\"  \n [7] \"ATP1B3\"   \"ATP1B4\"   \"FXYD2\"    \"FXYD4\"    \"HSD11B1\"  \"HSD11B2\" \n[13] \"IGF1\"     \"INS\"      \"INSR\"     \"IRS1\"     \"IRS2\"     \"IRS4\"    \n[19] \"KCNJ1\"    \"KRAS\"     \"MAPK1\"    \"MAPK3\"    \"NEDD4L\"   \"NR3C2\"   \n[25] \"PDPK1\"    \"PIK3CA\"   \"PIK3CB\"   \"PIK3CD\"   \"PIK3CG\"   \"PIK3R1\"  \n[31] \"PIK3R2\"   \"PIK3R3\"   \"PIK3R5\"   \"PRKCA\"    \"PRKCB\"    \"PRKCG\"   \n[37] \"SCNN1A\"   \"SCNN1B\"   \"SCNN1G\"   \"SFN\"      \"SGK1\"     \"SLC9A3R2\"\n\n## GO\nGO_df_all &lt;- msigdbr(species = \"Homo sapiens\",\n                      category = \"C5\")  \nGO_df &lt;- dplyr::select(GO_df_all, gs_name, gene_symbol, gs_exact_source, gs_subcat)\nGO_df &lt;- GO_df[GO_df$gs_subcat != \"HPO\",]\ngo_list &lt;- split(GO_df$gene_symbol, GO_df$gs_name) # Grouping gene symbols by gs_name\nhead(go_list)\n\n$GOBP_10_FORMYLTETRAHYDROFOLATE_METABOLIC_PROCESS\n[1] \"AASDHPPT\" \"ALDH1L1\"  \"ALDH1L2\"  \"MTHFD1\"   \"MTHFD1L\"  \"MTHFD2L\" \n\n$GOBP_2_OXOGLUTARATE_METABOLIC_PROCESS\n [1] \"AADAT\"  \"ADHFE1\" \"D2HGDH\" \"DLST\"   \"GOT1\"   \"GOT2\"   \"GPT2\"   \"IDH1\"  \n [9] \"IDH2\"   \"IDH3B\"  \"KYAT3\"  \"L2HGDH\" \"MRPS36\" \"MRPS36\" \"OGDH\"   \"OGDHL\" \n[17] \"PHYH\"   \"TAT\"   \n\n$GOBP_2FE_2S_CLUSTER_ASSEMBLY\n[1] \"BOLA2\"  \"BOLA2B\" \"GLRX3\"  \"GLRX5\"  \"HSCB\"   \"NFS1\"  \n\n$GOBP_3_PHOSPHOADENOSINE_5_PHOSPHOSULFATE_BIOSYNTHETIC_PROCESS\n[1] \"PAPSS1\"  \"PAPSS2\"  \"SLC26A1\" \"SLC26A2\" \"SLC35B2\" \"SLC35B3\"\n\n$GOBP_3_PHOSPHOADENOSINE_5_PHOSPHOSULFATE_METABOLIC_PROCESS\n [1] \"ABHD14B\" \"BPNT1\"   \"ENPP1\"   \"PAPSS1\"  \"PAPSS2\"  \"SLC26A1\" \"SLC26A2\"\n [8] \"SLC35B2\" \"SLC35B3\" \"SULT1A1\" \"SULT1A2\" \"SULT1A3\" \"SULT1A4\" \"SULT1B1\"\n[15] \"SULT1C3\" \"SULT1C4\" \"SULT1E1\" \"SULT2A1\" \"SULT2B1\" \"TPST1\"   \"TPST2\"  \n\n$GOBP_3_UTR_MEDIATED_MRNA_DESTABILIZATION\n [1] \"CPEB3\"   \"DHX36\"   \"DHX36\"   \"DND1\"    \"DND1\"    \"HNRNPD\"  \"KHSRP\"  \n [8] \"MOV10\"   \"PLEKHN1\" \"RBM24\"   \"RC3H1\"   \"TARDBP\"  \"TRIM71\"  \"UPF1\"   \n[15] \"ZC3H12A\" \"ZC3H12D\" \"ZFP36\"   \"ZFP36L1\" \"ZFP36L2\"\n\nlibrary(GSVA)\n\nWarning: package 'GSVA' was built under R version 4.3.3\n\ngsva_kegg &lt;- gsva(expr = HeatdataDeseq2, \n                  gset.idx.list = kegg_list, \n                  kcdf = \"Poisson\", #\"Gaussian\" for logCPM, logRPKM, logTPM, \"Poisson\" for counts\n                  verbose = TRUE\n                  #parallel.sz = parallel::detectCores() # Utilize all available cores\n                  )\n\nWarning: Calling gsva(expr=., gset.idx.list=., method=., ...) is deprecated;\nuse a method-specific parameter object (see '?gsva').\n\n\nWarning in .gsva(expr, mapped.gset.idx.list, method, kcdf, rnaseq, abs.ranking,\n: Some gene sets have size one. Consider setting 'min.sz &gt; 1'.\n\n\nEstimating GSVA scores for 171 gene sets.\nEstimating ECDFs with Poisson kernels\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |                                                                      |   1%\n  |                                                                            \n  |=                                                                     |   1%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |==                                                                    |   4%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |===                                                                   |   5%\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=======                                                               |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |=======                                                               |  11%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |=========                                                             |  12%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |===========                                                           |  15%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |============                                                          |  18%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |==============                                                        |  19%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |===============                                                       |  21%\n  |                                                                            \n  |===============                                                       |  22%\n  |                                                                            \n  |================                                                      |  22%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |=================                                                     |  25%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |====================                                                  |  28%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |======================                                                |  32%\n  |                                                                            \n  |=======================                                               |  32%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |========================                                              |  34%\n  |                                                                            \n  |========================                                              |  35%\n  |                                                                            \n  |=========================                                             |  35%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |===========================                                           |  39%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |=============================                                         |  42%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |================================                                      |  45%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |=================================                                     |  47%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |==================================                                    |  49%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=====================================                                 |  53%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |======================================                                |  55%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |=========================================                             |  58%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |===========================================                           |  61%\n  |                                                                            \n  |===========================================                           |  62%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |=============================================                         |  65%\n  |                                                                            \n  |==============================================                        |  65%\n  |                                                                            \n  |==============================================                        |  66%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |===============================================                       |  68%\n  |                                                                            \n  |================================================                      |  68%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |==================================================                    |  72%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |====================================================                  |  75%\n  |                                                                            \n  |=====================================================                 |  75%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |======================================================                |  77%\n  |                                                                            \n  |======================================================                |  78%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |=======================================================               |  79%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |========================================================              |  81%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |=========================================================             |  82%\n  |                                                                            \n  |==========================================================            |  82%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |===========================================================           |  85%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |============================================================          |  86%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |=============================================================         |  88%\n  |                                                                            \n  |==============================================================        |  88%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |===============================================================       |  89%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |===============================================================       |  91%\n  |                                                                            \n  |================================================================      |  91%\n  |                                                                            \n  |================================================================      |  92%\n  |                                                                            \n  |=================================================================     |  92%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |=================================================================     |  94%\n  |                                                                            \n  |==================================================================    |  94%\n  |                                                                            \n  |==================================================================    |  95%\n  |                                                                            \n  |===================================================================   |  95%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |====================================================================  |  96%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |====================================================================  |  98%\n  |                                                                            \n  |===================================================================== |  98%\n  |                                                                            \n  |===================================================================== |  99%\n  |                                                                            \n  |======================================================================|  99%\n  |                                                                            \n  |======================================================================| 100%\n\n#write.csv(gsva_mat, \"gsva_go_matrix.csv\")\n\ngsva_go &lt;- gsva(expr = HeatdataDeseq2, \n                gset.idx.list = go_list, \n                kcdf = \"Poisson\", #\"Gaussian\" for logCPM, logRPKM, logTPM, \"Poisson\" for counts\n                verbose = TRUE\n                #parallel.sz = parallel::detectCores() # Utilize all available cores\n                )\n\nWarning: Calling gsva(expr=., gset.idx.list=., method=., ...) is deprecated;\nuse a method-specific parameter object (see '?gsva').\nWarning: Some gene sets have size one. Consider setting 'min.sz &gt; 1'.\n\n\nEstimating GSVA scores for 7997 gene sets.\nEstimating ECDFs with Poisson kernels\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |                                                                      |   1%\n  |                                                                            \n  |=                                                                     |   1%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |==                                                                    |   4%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |===                                                                   |   5%\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=======                                                               |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |=======                                                               |  11%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |=========                                                             |  12%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |=========                                                             |  14%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |===========                                                           |  15%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |============                                                          |  16%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |============                                                          |  18%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |==============                                                        |  19%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |==============                                                        |  21%\n  |                                                                            \n  |===============                                                       |  21%\n  |                                                                            \n  |===============                                                       |  22%\n  |                                                                            \n  |================                                                      |  22%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |================                                                      |  24%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |=================                                                     |  25%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |===================                                                   |  26%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |===================                                                   |  28%\n  |                                                                            \n  |====================                                                  |  28%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |=====================                                                 |  29%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |=====================                                                 |  31%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |======================                                                |  32%\n  |                                                                            \n  |=======================                                               |  32%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |=======================                                               |  34%\n  |                                                                            \n  |========================                                              |  34%\n  |                                                                            \n  |========================                                              |  35%\n  |                                                                            \n  |=========================                                             |  35%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |==========================                                            |  36%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |==========================                                            |  38%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |===========================                                           |  39%\n  |                                                                            \n  |============================                                          |  39%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |============================                                          |  41%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |=============================                                         |  42%\n  |                                                                            \n  |==============================                                        |  42%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |==============================                                        |  44%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |===============================                                       |  45%\n  |                                                                            \n  |================================                                      |  45%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |=================================                                     |  46%\n  |                                                                            \n  |=================================                                     |  47%\n  |                                                                            \n  |=================================                                     |  48%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |==================================                                    |  49%\n  |                                                                            \n  |===================================                                   |  49%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |===================================                                   |  51%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=====================================                                 |  52%\n  |                                                                            \n  |=====================================                                 |  53%\n  |                                                                            \n  |=====================================                                 |  54%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |======================================                                |  55%\n  |                                                                            \n  |=======================================                               |  55%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |========================================                              |  56%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |========================================                              |  58%\n  |                                                                            \n  |=========================================                             |  58%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |==========================================                            |  59%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |==========================================                            |  61%\n  |                                                                            \n  |===========================================                           |  61%\n  |                                                                            \n  |===========================================                           |  62%\n  |                                                                            \n  |============================================                          |  62%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |============================================                          |  64%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |=============================================                         |  65%\n  |                                                                            \n  |==============================================                        |  65%\n  |                                                                            \n  |==============================================                        |  66%\n  |                                                                            \n  |===============================================                       |  66%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |===============================================                       |  68%\n  |                                                                            \n  |================================================                      |  68%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |=================================================                     |  69%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |=================================================                     |  71%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |==================================================                    |  72%\n  |                                                                            \n  |===================================================                   |  72%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |===================================================                   |  74%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |====================================================                  |  75%\n  |                                                                            \n  |=====================================================                 |  75%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |======================================================                |  76%\n  |                                                                            \n  |======================================================                |  77%\n  |                                                                            \n  |======================================================                |  78%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |=======================================================               |  79%\n  |                                                                            \n  |========================================================              |  79%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |========================================================              |  81%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |=========================================================             |  82%\n  |                                                                            \n  |==========================================================            |  82%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |==========================================================            |  84%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |===========================================================           |  85%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |============================================================          |  86%\n  |                                                                            \n  |=============================================================         |  86%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |=============================================================         |  88%\n  |                                                                            \n  |==============================================================        |  88%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |===============================================================       |  89%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |===============================================================       |  91%\n  |                                                                            \n  |================================================================      |  91%\n  |                                                                            \n  |================================================================      |  92%\n  |                                                                            \n  |=================================================================     |  92%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |=================================================================     |  94%\n  |                                                                            \n  |==================================================================    |  94%\n  |                                                                            \n  |==================================================================    |  95%\n  |                                                                            \n  |===================================================================   |  95%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |====================================================================  |  96%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |====================================================================  |  98%\n  |                                                                            \n  |===================================================================== |  98%\n  |                                                                            \n  |===================================================================== |  99%\n  |                                                                            \n  |======================================================================|  99%\n  |                                                                            \n  |======================================================================| 100%\n\n#write.csv(gsva_mat, \"gsva_go_matrix.csv\")\n\nssgsea_kegg &lt;- gsva(expr = HeatdataDeseq2, \n                    gset.idx.list = kegg_list, \n                    kcdf = \"Poisson\", #\"Gaussian\" for logCPM, logRPKM, logTPM, \"Poisson\" for counts\n                    method = \"ssgsea\",\n                    verbose = TRUE\n                    #parallel.sz = parallel::detectCores() # Utilize all available cores\n)\n\nWarning: Calling gsva(expr=., gset.idx.list=., method=., ...) is deprecated;\nuse a method-specific parameter object (see '?gsva').\nWarning: Some gene sets have size one. Consider setting 'min.sz &gt; 1'.\n\n\nEstimating ssGSEA scores for 171 gene sets.\n[1] \"Calculating ranks...\"\n[1] \"Calculating absolute values from ranks...\"\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=                                                                     |   1%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |=========                                                             |  12%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |============                                                          |  18%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |===============                                                       |  21%\n  |                                                                            \n  |===============                                                       |  22%\n  |                                                                            \n  |================                                                      |  22%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |===================                                                   |  28%\n  |                                                                            \n  |====================                                                  |  28%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |======================                                                |  32%\n  |                                                                            \n  |=======================                                               |  32%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |========================                                              |  34%\n  |                                                                            \n  |========================                                              |  35%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |==========================                                            |  38%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |===========================                                           |  39%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |=============================                                         |  42%\n  |                                                                            \n  |==============================                                        |  42%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |================================                                      |  45%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |=================================                                     |  47%\n  |                                                                            \n  |=================================                                     |  48%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |==================================                                    |  49%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=====================================                                 |  52%\n  |                                                                            \n  |=====================================                                 |  53%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |======================================                                |  55%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |========================================                              |  58%\n  |                                                                            \n  |=========================================                             |  58%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |===========================================                           |  61%\n  |                                                                            \n  |===========================================                           |  62%\n  |                                                                            \n  |============================================                          |  62%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |==============================================                        |  65%\n  |                                                                            \n  |==============================================                        |  66%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |===============================================                       |  68%\n  |                                                                            \n  |================================================                      |  68%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |==================================================                    |  72%\n  |                                                                            \n  |===================================================                   |  72%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |====================================================                  |  75%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |======================================================                |  77%\n  |                                                                            \n  |======================================================                |  78%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |=======================================================               |  79%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |=========================================================             |  82%\n  |                                                                            \n  |==========================================================            |  82%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |============================================================          |  86%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |=============================================================         |  88%\n  |                                                                            \n  |==============================================================        |  88%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |================================================================      |  91%\n  |                                                                            \n  |================================================================      |  92%\n  |                                                                            \n  |=================================================================     |  92%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |==================================================================    |  94%\n  |                                                                            \n  |==================================================================    |  95%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |====================================================================  |  98%\n  |                                                                            \n  |===================================================================== |  98%\n  |                                                                            \n  |===================================================================== |  99%\n  |                                                                            \n  |======================================================================| 100%\n\n[1] \"Normalizing...\"\n\n#write.csv(gsva_mat, \"gsva_go_matrix.csv\")\n\nssgsea_go &lt;- gsva(expr = HeatdataDeseq2, \n                  gset.idx.list = go_list, \n                  kcdf = \"Poisson\", #\"Gaussian\" for logCPM, logRPKM, logTPM, \"Poisson\" for counts\n                  method = \"ssgsea\",\n                  verbose = TRUE\n                  #parallel.sz = parallel::detectCores() # Utilize all available cores\n)\n\nWarning: Calling gsva(expr=., gset.idx.list=., method=., ...) is deprecated;\nuse a method-specific parameter object (see '?gsva').\nWarning: Some gene sets have size one. Consider setting 'min.sz &gt; 1'.\n\n\nEstimating ssGSEA scores for 7997 gene sets.\n[1] \"Calculating ranks...\"\n[1] \"Calculating absolute values from ranks...\"\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=                                                                     |   1%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |====                                                                  |   5%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |=========                                                             |  12%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |==========                                                            |  15%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |============                                                          |  18%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |===============                                                       |  21%\n  |                                                                            \n  |===============                                                       |  22%\n  |                                                                            \n  |================                                                      |  22%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |===================                                                   |  28%\n  |                                                                            \n  |====================                                                  |  28%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |======================                                                |  31%\n  |                                                                            \n  |======================                                                |  32%\n  |                                                                            \n  |=======================                                               |  32%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |========================                                              |  34%\n  |                                                                            \n  |========================                                              |  35%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |==========================                                            |  38%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |===========================                                           |  39%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |=============================                                         |  41%\n  |                                                                            \n  |=============================                                         |  42%\n  |                                                                            \n  |==============================                                        |  42%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |================================                                      |  45%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |=================================                                     |  47%\n  |                                                                            \n  |=================================                                     |  48%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |==================================                                    |  49%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=====================================                                 |  52%\n  |                                                                            \n  |=====================================                                 |  53%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |======================================                                |  55%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |========================================                              |  58%\n  |                                                                            \n  |=========================================                             |  58%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |===========================================                           |  61%\n  |                                                                            \n  |===========================================                           |  62%\n  |                                                                            \n  |============================================                          |  62%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |==============================================                        |  65%\n  |                                                                            \n  |==============================================                        |  66%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |===============================================                       |  68%\n  |                                                                            \n  |================================================                      |  68%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |==================================================                    |  72%\n  |                                                                            \n  |===================================================                   |  72%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |====================================================                  |  75%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |======================================================                |  77%\n  |                                                                            \n  |======================================================                |  78%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |=======================================================               |  79%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |=========================================================             |  81%\n  |                                                                            \n  |=========================================================             |  82%\n  |                                                                            \n  |==========================================================            |  82%\n  |                                                                            \n  |==========================================================            |  83%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |============================================================          |  86%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |=============================================================         |  88%\n  |                                                                            \n  |==============================================================        |  88%\n  |                                                                            \n  |==============================================================        |  89%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |================================================================      |  91%\n  |                                                                            \n  |================================================================      |  92%\n  |                                                                            \n  |=================================================================     |  92%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |==================================================================    |  94%\n  |                                                                            \n  |==================================================================    |  95%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |====================================================================  |  97%\n  |                                                                            \n  |====================================================================  |  98%\n  |                                                                            \n  |===================================================================== |  98%\n  |                                                                            \n  |===================================================================== |  99%\n  |                                                                            \n  |======================================================================| 100%\n\n[1] \"Normalizing...\"\n\n#write.csv(gsva_mat, \"gsva_go_matrix.csv\")\n\n\n# Data transformation for GSVA of KEGG\n#### Differential analysis using limma ####\n\n# Assigning group labels for tumor and normal samples\ngroup &lt;- c(rep('tumor', 60), rep('normal', 60))\ngroup &lt;- factor(group, levels = c(\"normal\", \"tumor\"))\n\n# Constructing the design matrix\ndesign &lt;- model.matrix(~0 + factor(group))\ncolnames(design) &lt;- levels(factor(group))\nrownames(design) &lt;- colnames(gsva_kegg)\n\n# Forming the contrast matrix for differential analysis\ncon &lt;- paste(rev(levels(group)), collapse = \"-\")\ncont.matrix &lt;- limma::makeContrasts(contrasts = c(con), levels = design)\n\n# Fitting the linear model\nfit &lt;- limma::lmFit(gsva_kegg, design)\nfit2 &lt;- limma::contrasts.fit(fit, cont.matrix)\nfit2 &lt;- limma::eBayes(fit2)\n\n# Retrieving differential expression results\ntempOutput &lt;- limma::topTable(fit2, coef = con, n = Inf)\ngsva_kegg_limma &lt;- stats::na.omit(tempOutput)\n\n#### Visualization of differential analysis results from GSVA ####\n## Setting filtering thresholds\npadj_cutoff = 0.05\nlog2FC_cutoff = log2(2)\n\n# Filtering significant gene sets\nkeep &lt;- rownames(gsva_kegg_limma[gsva_kegg_limma$adj.P.Val &lt; padj_cutoff & abs(gsva_kegg_limma$logFC) &gt; log2FC_cutoff, ])\nlength(keep)\n\n[1] 14\n\n# Extracting the top 10 elements from the limma analysis results\nkeep_top10 &lt;- keep[1:10]\n# Selecting rows in gsva_kegg that match the top 10 genes from keep\ngsva_kegg_limma_head10 &lt;- gsva_kegg[rownames(gsva_kegg) %in% keep_top10, ]\n\n# Checking if row names are set, assuming the first column as row names if not set\nif (is.null(rownames(gsva_kegg_limma_head10))) {\n  gsva_kegg_limma_head10 &lt;- gsva_kegg_limma_head10 %&gt;%\n    mutate(RowID = row_number()) %&gt;%  # Adding a row number for each row\n    column_to_rownames(var=\"RowID\")  # Setting this row number as row names\n}\n\ngsva_kegg_limma_head10 &lt;- as.data.frame(gsva_kegg_limma_head10)\n\n# To preserve row names in the long format data, first convert row names into a column of the data frame\ngsva_kegg_limma_head10 &lt;- gsva_kegg_limma_head10 %&gt;%\n  tibble::rownames_to_column(var = \"Gene\")  # Convert row names to a column named Gene\n\n# Transforming the dataframe from wide to long format, including the newly added row names column\ngsva_kegg_HeatdataDeseq &lt;- gsva_kegg_limma_head10 %&gt;%\n  pivot_longer(\n    cols = -Gene,    # Transforming all columns except the Gene column\n    names_to = \"Sample\",  # Creating a new column to store the original column names\n    values_to = \"value\"   # Creating a new column to store the values\n  )\n\n# Displaying the transformed data\nprint(gsva_kegg_HeatdataDeseq)\n\n# A tibble: 1,200 × 3\n   Gene                                             Sample    value\n   &lt;chr&gt;                                            &lt;chr&gt;     &lt;dbl&gt;\n 1 KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM TCGA_1   0.935 \n 2 KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM TCGA_2   0.782 \n 3 KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM TCGA_3  -0.0794\n 4 KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM TCGA_4   0.257 \n 5 KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM TCGA_5   0.565 \n 6 KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM TCGA_6  -0.0225\n 7 KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM TCGA_7   0.661 \n 8 KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM TCGA_8   0.867 \n 9 KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM TCGA_9   0.249 \n10 KEGG_AMINO_SUGAR_AND_NUCLEOTIDE_SUGAR_METABOLISM TCGA_10  0.753 \n# ℹ 1,190 more rows\n\n\n\n# Subsetting the first 10 rows from HeatdataDeseq2\nHeatdataDeseq3 &lt;- HeatdataDeseq2[1:10,]\n\n# Applying logarithmic transformation and converting to a data frame\nHeatdataDeseq3 &lt;- as.data.frame(log_transform(HeatdataDeseq3))\n\n[1] \"log2 transform finished\"\n\n# Check if row names are set, if not, assume the first column as row names\nif (is.null(rownames(HeatdataDeseq3))) {\n  HeatdataDeseq3 &lt;- HeatdataDeseq3 %&gt;%\n    mutate(RowID = row_number()) %&gt;%  # Add a row number to each row\n    column_to_rownames(var=\"RowID\")   # Set this row number as row names\n}\n\n# To retain row names in a long format, first convert row names to a column in the data frame\nHeatdataDeseq3 &lt;- HeatdataDeseq3 %&gt;%\n  tibble::rownames_to_column(var = \"Gene\")  # Convert row names to a column named 'Gene'\n\n# Transforming the data frame from wide to long format, including the newly added row name column\nlong_format_HeatdataDeseq &lt;- HeatdataDeseq3 %&gt;%\n  pivot_longer(\n    cols = -Gene,          # Transform all columns except for 'Gene'\n    names_to = \"Sample\",   # Create a new column to store original column names\n    values_to = \"value\"    # Create a new column to store values\n  )\n\n# Display the transformed data\nprint(long_format_HeatdataDeseq)\n\n# A tibble: 1,200 × 3\n   Gene  Sample  value\n   &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt;\n 1 A2M   TCGA_1   14.4\n 2 A2M   TCGA_2   15.1\n 3 A2M   TCGA_3   16.1\n 4 A2M   TCGA_4   18.8\n 5 A2M   TCGA_5   16.0\n 6 A2M   TCGA_6   18.6\n 7 A2M   TCGA_7   17.4\n 8 A2M   TCGA_8   13.0\n 9 A2M   TCGA_9   18.0\n10 A2M   TCGA_10  13.3\n# ℹ 1,190 more rows\n\n\n\n# Selecting the top 10 rows from ssgsea_kegg for display\nssgsea_kegg_head10 &lt;- as.data.frame(ssgsea_kegg[1:10,])\n\n# Check if row names are set, if not, assume the first column as row names\nif (is.null(rownames(ssgsea_kegg_head10))) {\n  ssgsea_kegg_head10 &lt;- ssgsea_kegg_head10 %&gt;%\n    mutate(RowID = row_number()) %&gt;%  # Add a row number to each row\n    column_to_rownames(var=\"RowID\")   # Set this row number as row names\n}\n\nssgsea_kegg_head10 &lt;- as.data.frame(ssgsea_kegg_head10)\n\n# To preserve row names in the long format data, first convert row names into a column of the data frame\nssgsea_kegg_head10 &lt;- ssgsea_kegg_head10 %&gt;%\n  tibble::rownames_to_column(var = \"Gene\")  # Convert row names to a column named Gene\n\n# Transforming the data frame from wide to long format, including the newly added row name column\nssgsea_kegg_HeatdataDeseq &lt;- ssgsea_kegg_head10 %&gt;%\n  pivot_longer(\n    cols = -Gene,          # Transform all columns except for 'Gene'\n    names_to = \"Sample\",   # Create a new column to store original column names\n    values_to = \"value\"    # Create a new column to store values\n  )\n\n# Display the transformed data\nprint(ssgsea_kegg_HeatdataDeseq)\n\n# A tibble: 1,200 × 3\n   Gene                  Sample   value\n   &lt;chr&gt;                 &lt;chr&gt;    &lt;dbl&gt;\n 1 KEGG_ABC_TRANSPORTERS TCGA_1  0.181 \n 2 KEGG_ABC_TRANSPORTERS TCGA_2  0.207 \n 3 KEGG_ABC_TRANSPORTERS TCGA_3  0.178 \n 4 KEGG_ABC_TRANSPORTERS TCGA_4  0.258 \n 5 KEGG_ABC_TRANSPORTERS TCGA_5  0.218 \n 6 KEGG_ABC_TRANSPORTERS TCGA_6  0.237 \n 7 KEGG_ABC_TRANSPORTERS TCGA_7  0.0993\n 8 KEGG_ABC_TRANSPORTERS TCGA_8  0.245 \n 9 KEGG_ABC_TRANSPORTERS TCGA_9  0.178 \n10 KEGG_ABC_TRANSPORTERS TCGA_10 0.212 \n# ℹ 1,190 more rows\n\n\n\nvalues=c(\"#491588\", \"#301b8d\", \"#1a237a\", \"#11479c\", \"#0a5797\",\"#0b5f63\",\"#074d41\",\"#1f5e27\",\"#366928\",\"#827729\",\"#f28131\",\"#fc7226\",\"#e3551e\",\"#bd3a1b\", \"#c62828\", \"#ad1457\", \"#6a1b9a\")\nrow.names(HeatdataDeseq3)&lt;- HeatdataDeseq3$Gene\nHeatdataDeseq3$Gene &lt;- NULL\niindata&lt;-as.data.frame(t(HeatdataDeseq3))\nheatdata.clust_new&lt;-hclust(dist(iindata,method = \"euclidean\"),method = \"complete\")\n\np1=ggtree(heatdata.clust_new,branch.length='none',layout=\"circular\",size=0.3, xlim=c(30,NA))\n#p1\np0&lt;-p1+geom_text(aes(label=node))##watch node\n\np0\n\n\n\n\n\np1&lt;-p1+geom_hilight(node=137, fill = \"#491588\", alpha = .4, extend =107)+\n  geom_hilight(node=157, fill = \"#1976d2\", alpha = .3, extend =107)+\n  geom_hilight(node=161, fill = \"#1976d2\", alpha = .3, extend =106)+\n  geom_hilight(node=179, fill = \"#388e3c\", alpha = .4, extend =107)+\n  geom_hilight(node=127, fill = \"#f9a825\", alpha = .3, extend =107)+\n  geom_hilight(node=150, fill = \"#491588\", alpha = .4, extend =105)+\n  geom_hilight(node=128, fill = \"#1976d2\", alpha = .3, extend =107)+\n  geom_hilight(node=189, fill = \"#388e3c\", alpha = .4, extend =105)+\n  geom_hilight(node=131, fill = \"#f9a825\", alpha = .3, extend =106)\n\np1\n\n\n\n\n\ngene_colors &lt;- c(\"#491588\", \"#301b8d\", \"#1a237a\", \"#11479c\", \"#0a5797\",\"#0b5f63\",\"#074d41\",\"#1f5e27\",\"#366928\",\"#827729\")\np2 &lt;- create_base_plot(p1, long_format_HeatdataDeseq, gene_colors)\n\np2\n\n\n\n\n\n# Add a boxplot layer to the base plot\np3 &lt;- add_boxplot(p2, long_format_HeatdataDeseq)\n\np3\n\n\n\n\n\ngene_colors &lt;- c(\"#491588\", \"#301b8d\", \"#1a237a\", \"#11479c\", \"#0a5797\",\"#0b5f63\",\"#074d41\",\"#1f5e27\",\"#366928\",\"#827729\")\n# Add a new tile layer for SSGSEA data\np4 &lt;- add_new_tile_layer(p3, ssgsea_kegg_HeatdataDeseq, gene_colors, \"Ssgsea Term\")\n\np4\n\n\n\n\n\n# Add another boxplot layer with specific aesthetic adjustments\np5 &lt;- add_boxplot(p4, ssgsea_kegg_HeatdataDeseq, fill_color=\"#f28131\", alpha=0.65, offset=0.32)\n\np5\n\n\n\n\n\ngene_colors &lt;- c(\"#491588\", \"#301b8d\", \"#1a237a\", \"#11479c\", \"#0a5797\",\"#0b5f63\",\"#074d41\",\"#1f5e27\",\"#366928\",\"#827729\")\n# Add a new tile layer for GSVA data with specific alpha and offset adjustments\np6 &lt;- add_new_tile_layer(p5, gsva_kegg_HeatdataDeseq, gene_colors, \"Gsva Term\", alpha_value=c(0.3, 0.9), offset=0.02)\n\np6\n\n\n\n\n\ngene_colors &lt;- c(\"#491588\", \"#301b8d\", \"#1a237a\", \"#11479c\", \"#0a5797\",\"#0b5f63\",\"#074d41\",\"#1f5e27\",\"#366928\",\"#827729\")\np7 &lt;- circos_fruits(p1,\n                            long_format_HeatdataDeseq,\n                            ssgsea_kegg_HeatdataDeseq,\n                            gsva_kegg_HeatdataDeseq,\n                            gene_colors)\np_final &lt;- p7 + geom_strip(25, 114, label=\"TCGA_GTEX\", offset=100, barsize=2, extend=1, color=\"#9575cd\", alpha=0.5, hjust=\"center\", align=TRUE, offset.text=19, angle=-90)\n\n\nprint(p_final)"
  },
  {
    "objectID": "Circos Fruit.html#reference",
    "href": "Circos Fruit.html#reference",
    "title": "13  Circos Fruit",
    "section": "13.4 Reference",
    "text": "13.4 Reference\n\n\nggplot2:\n\n\ngithub:ggplot2\nAn implementation of the Grammar of Graphics in R\n\n\nggtreeExtra:\n\n\nS Xu, Z Dai, P Guo, X Fu, S Liu, L Zhou, W Tang, T Feng, M Chen, L Zhan, T Wu, E Hu, Y Jiang, X Bo and G Yu*. ggtreeExtra: Compact visualization of richly annotated phylogenetic data. Molecular Biology and Evolution. 2021, 38(9):4039-4042. \n\n\nggtree:\n\n\nG Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. 2017, 8(1):28-36.\n\n\nclusterProfiler 4.0:\n\n\nT Wu#, E Hu#, S Xu, M Chen, P Guo, Z Dai, T Feng, L Zhou, W Tang, L Zhan, X Fu, S Liu, X Bo, G Yu. clusterProfiler 4.0: A universal enrichment tool for interpreting omics data. The Innovation. 2021, 2(3):100141."
  },
  {
    "objectID": "Enrichment Circlize.html#genelist",
    "href": "Enrichment Circlize.html#genelist",
    "title": "14  Enrichment Circlize",
    "section": "14.1 geneList",
    "text": "14.1 geneList\n\nDEG_deseq2 &lt;- readRDS('../test_TransProR/Select DEGs/DEG_deseq2.Rdata')\nDEG_edgeR &lt;- readRDS('../test_TransProR/Select DEGs/DEG_edgeR.Rdata')\nDEG_limma_voom &lt;- readRDS('../test_TransProR/Select DEGs/DEG_limma_voom.Rdata')\nWilcoxon_rank_sum_testoutRst &lt;- readRDS('../test_TransProR/Select DEGs/Wilcoxon_rank_sum_testoutRst.Rdata')\n\n\nDEG_deseq2_geneList &lt;- DEG_deseq2$log2FoldChange\nnames(DEG_deseq2_geneList) = row.names(DEG_deseq2)\nDEG_deseq2_geneList = sort(DEG_deseq2_geneList, decreasing = TRUE)\nhead(DEG_deseq2_geneList)\n\n     HTN3 LINC01502     MT-TP      HTN1    MAGEA4  MTRNR2L1 \n 13.30557  13.26522  13.22724  12.69964  12.46226  12.42012 \n\nDEG_edgeR_geneList &lt;- DEG_edgeR$logFC\nnames(DEG_edgeR_geneList) = row.names(DEG_edgeR)\nDEG_edgeR_geneList = sort(DEG_edgeR_geneList, decreasing = TRUE)\nhead(DEG_edgeR_geneList)\n\n    HTN3    MT-TP   RN7SL2     HTN1    BANCR   MAGEA4 \n14.33849 14.29320 12.44780 12.30199 12.05221 11.96610 \n\nDEG_limma_voom_geneList &lt;- DEG_limma_voom$logFC\nnames(DEG_limma_voom_geneList) = row.names(DEG_limma_voom)\nDEG_limma_voom_geneList = sort(DEG_limma_voom_geneList, decreasing = TRUE)\nhead(DEG_limma_voom_geneList)\n\n        PRAME         MT-TP RP11-599J14.2        RN7SL2    LHFPL3-AS1 \n    11.897366     10.952225      9.753235      9.524066      9.006715 \n         SPP1 \n     8.678482 \n\nWilcoxon_rank_sum_testoutRst_geneList &lt;- Wilcoxon_rank_sum_testoutRst$log2foldChange\nnames(Wilcoxon_rank_sum_testoutRst_geneList) = row.names(Wilcoxon_rank_sum_testoutRst)\nWilcoxon_rank_sum_testoutRst_geneList = sort(Wilcoxon_rank_sum_testoutRst_geneList, decreasing = TRUE)\nhead(Wilcoxon_rank_sum_testoutRst_geneList)\n\n   MT-TP    BANCR   RN7SL2    PRAME    IGHGP   MAGEA3 \n13.52891 11.68135 11.67955 11.32951 11.00800 10.93607"
  },
  {
    "objectID": "Enrichment Circlize.html#symbols.gmt",
    "href": "Enrichment Circlize.html#symbols.gmt",
    "title": "14  Enrichment Circlize",
    "section": "14.2 symbols.gmt",
    "text": "14.2 symbols.gmt\n\nhallmarks_pathways &lt;- gmtPathways(\"../gmt/h.all.v7.4.symbols.gmt\")\ngo_pathways &lt;- gmtPathways(\"../gmt/c5.go.v7.4.symbols.gmt\")\nkegg_pathways &lt;- gmtPathways(\"../gmt/c2.cp.kegg.v7.4.symbols.gmt\")"
  },
  {
    "objectID": "Enrichment Circlize.html#fgseahallmarksgokegg",
    "href": "Enrichment Circlize.html#fgseahallmarksgokegg",
    "title": "14  Enrichment Circlize",
    "section": "14.3 fgsea:hallmarks/go/kegg",
    "text": "14.3 fgsea:hallmarks/go/kegg\n\n14.3.1 deseq2\nset.seed(11)\ndeseq2_hallmarks_fgseaRes &lt;- fgsea(hallmarks_pathways, DEG_deseq2_geneList, minSize=15, maxSize=500, nperm = 10000)\n\n### Calculate genecount\n\ndeseq2_hallmarks_fgseaRes$leadingEdge &lt;- as.character(deseq2_hallmarks_fgseaRes$leadingEdge)\ndeseq2_hallmarks_fgseaRes$genecount &lt;- NA  # Initialize new column\n\nfor(i in 1:nrow(deseq2_hallmarks_fgseaRes)){\n  print(i)\n  term = deseq2_hallmarks_fgseaRes$leadingEdge[i]\n  # 1. Split\n  term_split = unlist(strsplit(term, split=\",\", fixed=TRUE))\n  # Add gene count calculation\n  deseq2_hallmarks_fgseaRes$genecount[i] = length(term_split)\n}\n\nset.seed(12)\ndeseq2_go_fgseaRes &lt;- fgsea(go_pathways, DEG_deseq2_geneList, minSize=15, maxSize=500, nperm = 10000)\n\n### Calculate genecount\n\ndeseq2_go_fgseaRes$leadingEdge &lt;- as.character(deseq2_go_fgseaRes$leadingEdge)\ndeseq2_go_fgseaRes$genecount &lt;- NA  # Initialize new column\n\nfor(i in 1:nrow(deseq2_go_fgseaRes)){\n  print(i)\n  term = deseq2_go_fgseaRes$leadingEdge[i]\n  # 1. Split\n  term_split = unlist(strsplit(term, split=\",\", fixed=TRUE))\n  # Add gene count calculation\n  deseq2_go_fgseaRes$genecount[i] = length(term_split)\n}\n\nset.seed(13)\ndeseq2_kegg_fgseaRes &lt;- fgsea(kegg_pathways, DEG_deseq2_geneList, minSize=15, maxSize=500, nperm = 10000)\n\n### Calculate genecount\n\ndeseq2_kegg_fgseaRes$leadingEdge &lt;- as.character(deseq2_kegg_fgseaRes$leadingEdge)\ndeseq2_kegg_fgseaRes$genecount &lt;- NA  # Initialize new column\n\nfor(i in 1:nrow(deseq2_kegg_fgseaRes)){\n  print(i)\n  term = deseq2_kegg_fgseaRes$leadingEdge[i]\n  # 1. Split\n  term_split = unlist(strsplit(term, split=\",\", fixed=TRUE))\n  # Add gene count calculation\n  deseq2_kegg_fgseaRes$genecount[i] = length(term_split)\n}\n\n\n14.3.2 edgeR\nset.seed(21)\nedgeR_hallmarks_fgseaRes &lt;- fgsea(hallmarks_pathways, DEG_edgeR_geneList, minSize=15, maxSize=500, nperm = 10000)\n\n### Calculate genecount\n\nedgeR_hallmarks_fgseaRes$leadingEdge &lt;- as.character(edgeR_hallmarks_fgseaRes$leadingEdge)\nedgeR_hallmarks_fgseaRes$genecount &lt;- NA  # Initialize new column\n\nfor(i in 1:nrow(edgeR_hallmarks_fgseaRes)){\n  print(i)\n  term = edgeR_hallmarks_fgseaRes$leadingEdge[i]\n  # 1. Split\n  term_split = unlist(strsplit(term, split=\",\", fixed=TRUE))\n  # Add gene count calculation\n  edgeR_hallmarks_fgseaRes$genecount[i] = length(term_split)\n}\n\nset.seed(22)\nedgeR_go_fgseaRes &lt;- fgsea(go_pathways, DEG_edgeR_geneList, minSize=15, maxSize=500, nperm = 10000)\n\n### Calculate genecount\n\nedgeR_go_fgseaRes$leadingEdge &lt;- as.character(edgeR_go_fgseaRes$leadingEdge)\nedgeR_go_fgseaRes$genecount &lt;- NA  # Initialize new column\n\nfor(i in 1:nrow(edgeR_go_fgseaRes)){\n  print(i)\n  term = edgeR_go_fgseaRes$leadingEdge[i]\n  # 1. Split\n  term_split = unlist(strsplit(term, split=\",\", fixed=TRUE))\n  # Add gene count calculation\n  edgeR_go_fgseaRes$genecount[i] = length(term_split)\n}\n\nset.seed(23)\nedgeR_kegg_fgseaRes &lt;- fgsea(kegg_pathways, DEG_edgeR_geneList, minSize=15, maxSize=500, nperm = 10000)\n\n### Calculate genecount\n\nedgeR_kegg_fgseaRes$leadingEdge &lt;- as.character(edgeR_kegg_fgseaRes$leadingEdge)\nedgeR_kegg_fgseaRes$genecount &lt;- NA  # Initialize new column\n\nfor(i in 1:nrow(edgeR_kegg_fgseaRes)){\n  print(i)\n  term = edgeR_kegg_fgseaRes$leadingEdge[i]\n  # 1. Split\n  term_split = unlist(strsplit(term, split=\",\", fixed=TRUE))\n  # Add gene count calculation\n  edgeR_kegg_fgseaRes$genecount[i] = length(term_split)\n}\n\n\n14.3.3 limma\nset.seed(31)\nlimma_hallmarks_fgseaRes &lt;- fgsea(hallmarks_pathways, DEG_limma_voom_geneList, minSize=15, maxSize=500, nperm = 10000)\n\n### Calculate genecount\n\nlimma_hallmarks_fgseaRes$leadingEdge &lt;- as.character(limma_hallmarks_fgseaRes$leadingEdge)\nlimma_hallmarks_fgseaRes$genecount &lt;- NA  # Initialize new column\n\nfor(i in 1:nrow(limma_hallmarks_fgseaRes)){\n  print(i)\n  term = limma_hallmarks_fgseaRes$leadingEdge[i]\n  # 1. Split\n  term_split = unlist(strsplit(term, split=\",\", fixed=TRUE))\n  # Add gene count calculation\n  limma_hallmarks_fgseaRes$genecount[i] = length(term_split)\n}\n\nset.seed(32)\nlimma_go_fgseaRes &lt;- fgsea(go_pathways, DEG_limma_voom_geneList, minSize=15, maxSize=500, nperm = 10000)\n\n### Calculate genecount\n\nlimma_go_fgseaRes$leadingEdge &lt;- as.character(limma_go_fgseaRes$leadingEdge)\nlimma_go_fgseaRes$genecount &lt;- NA  # Initialize new column\n\nfor(i in 1:nrow(limma_go_fgseaRes)){\n  print(i)\n  term = limma_go_fgseaRes$leadingEdge[i]\n  # 1. Split\n  term_split = unlist(strsplit(term, split=\",\", fixed=TRUE))\n  # Add gene count calculation\n  limma_go_fgseaRes$genecount[i] = length(term_split)\n}\n\nset.seed(33)\nlimma_kegg_fgseaRes &lt;- fgsea(kegg_pathways, DEG_limma_voom_geneList, minSize=15, maxSize=500, nperm = 10000)\n\n### Calculate genecount\n\nlimma_kegg_fgseaRes$leadingEdge &lt;- as.character(limma_kegg_fgseaRes$leadingEdge)\nlimma_kegg_fgseaRes$genecount &lt;- NA  # Initialize new column\n\nfor(i in 1:nrow(limma_kegg_fgseaRes)){\n  print(i)\n  term = limma_kegg_fgseaRes$leadingEdge[i]\n  # 1. Split\n  term_split = unlist(strsplit(term, split=\",\", fixed=TRUE))\n  # Add gene count calculation\n  limma_kegg_fgseaRes$genecount[i] = length(term_split)\n}"
  },
  {
    "objectID": "Enrichment Circlize.html#adjustment",
    "href": "Enrichment Circlize.html#adjustment",
    "title": "14  Enrichment Circlize",
    "section": "14.4 Adjustment",
    "text": "14.4 Adjustment\n\n14.4.1 deseq2\nresult &lt;- adjust_export_pathway(fgseaRes =deseq2_hallmarks_fgseaRes, nTop = 10)\ndeseq2_hallmarks_UpDown_topPathways &lt;- result$combinedPathways\ndeseq2_hallmarks_fgseaRes &lt;- result$fgseaRes\nresult &lt;- adjust_export_pathway(fgseaRes =deseq2_go_fgseaRes, nTop = 100)\ndeseq2_go_UpDown_topPathways &lt;- result$combinedPathways\ndeseq2_go_fgseaRes &lt;- result$fgseaRes\nresult &lt;- adjust_export_pathway(fgseaRes =deseq2_kegg_fgseaRes, nTop = 10)\ndeseq2_kegg_UpDown_topPathways &lt;- result$combinedPathways\ndeseq2_kegg_fgseaRes &lt;- result$fgseaRes\n\n\n14.4.2 edgeR\nresult &lt;- adjust_export_pathway(fgseaRes =edgeR_hallmarks_fgseaRes, nTop = 10)\nedgeR_hallmarks_UpDown_topPathways &lt;- result$combinedPathways\nedgeR_hallmarks_fgseaRes &lt;- result$fgseaRes\nresult &lt;- adjust_export_pathway(fgseaRes =edgeR_go_fgseaRes, nTop = 100)\nedgeR_go_UpDown_topPathways &lt;- result$combinedPathways\nedgeR_go_fgseaRes &lt;- result$fgseaRes\nresult &lt;- adjust_export_pathway(fgseaRes =edgeR_kegg_fgseaRes, nTop = 10)\nedgeR_kegg_UpDown_topPathways &lt;- result$combinedPathways\nedgeR_kegg_fgseaRes &lt;- result$fgseaRes\n\n\n14.4.3 limma\nresult &lt;- adjust_export_pathway(fgseaRes =limma_hallmarks_fgseaRes, nTop = 10)\nlimma_hallmarks_UpDown_topPathways &lt;- result$combinedPathways\nlimma_hallmarks_fgseaRes &lt;- result$fgseaRes\nresult &lt;- adjust_export_pathway(fgseaRes =limma_go_fgseaRes, nTop = 100)\nlimma_go_UpDown_topPathways &lt;- result$combinedPathways\nlimma_go_fgseaRes &lt;- result$fgseaRes\nresult &lt;- adjust_export_pathway(fgseaRes =limma_kegg_fgseaRes, nTop = 10)\nlimma_kegg_UpDown_topPathways &lt;- result$combinedPathways\nlimma_kegg_fgseaRes &lt;- result$fgseaRes"
  },
  {
    "objectID": "Enrichment Circlize.html#common_elements",
    "href": "Enrichment Circlize.html#common_elements",
    "title": "14  Enrichment Circlize",
    "section": "14.5 common_elements",
    "text": "14.5 common_elements\n\n# Use Reduce and intersect to calculate the intersection of all vectors\nkegg_UpDown_common_elements &lt;- Reduce(intersect, list(limma_kegg_UpDown_topPathways, \n                                                      edgeR_kegg_UpDown_topPathways, \n                                                      deseq2_kegg_UpDown_topPathways))\n# Print the intersection results\nprint(kegg_UpDown_common_elements)\n\n [1] \"Primary Immunodeficiency\"                    \n [2] \"Allograft Rejection\"                         \n [3] \"Graft Versus Host Disease\"                   \n [4] \"Autoimmune Thyroid Disease\"                  \n [5] \"Type I Diabetes Mellitus\"                    \n [6] \"Systemic Lupus Erythematosus\"                \n [7] \"Antigen Processing And Presentation\"         \n [8] \"Arachidonic Acid Metabolism\"                 \n [9] \"Metabolism Of Xenobiotics By Cytochrome P450\"\n[10] \"Drug Metabolism Cytochrome P450\"             \n[11] \"Retinol Metabolism\"                          \n\n# Use Reduce and intersect to calculate the intersection of all vectors\ngo_UpDown_common_elements &lt;- Reduce(intersect, list(limma_go_UpDown_topPathways,\n                                                    edgeR_go_UpDown_topPathways,\n                                                    deseq2_go_UpDown_topPathways))\n# Print the intersection results\nprint(go_UpDown_common_elements)\n\n [1] \"Mhc Protein Complex\"                                                                                \n [2] \"Mhc Protein Complex Binding\"                                                                        \n [3] \"Peptide Antigen Binding\"                                                                            \n [4] \"Lumenal Side Of Endoplasmic Reticulum Membrane\"                                                     \n [5] \"Tolerance Induction\"                                                                                \n [6] \"T Cell Receptor Complex\"                                                                            \n [7] \"Positive Regulation Of Interleukin 2 Production\"                                                    \n [8] \"Immunoglobulin Complex Circulating\"                                                                 \n [9] \"Regulatory T Cell Differentiation\"                                                                  \n[10] \"Lumenal Side Of Membrane\"                                                                           \n[11] \"Immunoglobulin Receptor Binding\"                                                                    \n[12] \"Positive T Cell Selection\"                                                                          \n[13] \"Regulation Of Natural Killer Cell Mediated Immunity\"                                                \n[14] \"T Cell Mediated Cytotoxicity\"                                                                       \n[15] \"Regulation Of T Cell Receptor Signaling Pathway\"                                                    \n[16] \"Immunological Synapse\"                                                                              \n[17] \"Cellular Defense Response\"                                                                          \n[18] \"T Cell Selection\"                                                                                   \n[19] \"Phagocytosis Recognition\"                                                                           \n[20] \"Negative Regulation Of Viral Genome Replication\"                                                    \n[21] \"Positive Regulation Of Cell Killing\"                                                                \n[22] \"Pigment Biosynthetic Process\"                                                                       \n[23] \"Immunoglobulin Complex\"                                                                             \n[24] \"Regulation Of B Cell Proliferation\"                                                                 \n[25] \"Positive Regulation Of Alpha Beta T Cell Activation\"                                                \n[26] \"Regulation Of Antigen Receptor Mediated Signaling Pathway\"                                          \n[27] \"Regulation Of Complement Activation\"                                                                \n[28] \"Positive Regulation Of Interferon Gamma Production\"                                                 \n[29] \"Regulation Of Leukocyte Mediated Cytotoxicity\"                                                      \n[30] \"Tertiary Granule Membrane\"                                                                          \n[31] \"B Cell Proliferation\"                                                                               \n[32] \"Regulation Of Cell Killing\"                                                                         \n[33] \"Specific Granule Membrane\"                                                                          \n[34] \"Humoral Immune Response Mediated By Circulating Immunoglobulin\"                                     \n[35] \"Positive Regulation Of T Cell Proliferation\"                                                        \n[36] \"B Cell Receptor Signaling Pathway\"                                                                  \n[37] \"Antigen Binding\"                                                                                    \n[38] \"Regulation Of Alpha Beta T Cell Activation\"                                                         \n[39] \"Regulation Of Humoral Immune Response\"                                                              \n[40] \"Complement Activation\"                                                                              \n[41] \"Membrane Invagination\"                                                                              \n[42] \"Positive Regulation Of B Cell Activation\"                                                           \n[43] \"Alpha Beta T Cell Differentiation\"                                                                  \n[44] \"Blood Microparticle\"                                                                                \n[45] \"Positive Regulation Of Leukocyte Mediated Immunity\"                                                 \n[46] \"Epithelial Cell Proliferation\"                                                                      \n[47] \"Endopeptidase Activity\"                                                                             \n[48] \"Fatty Acid Metabolic Process\"                                                                       \n[49] \"Epidermis Development\"                                                                              \n[50] \"Skin Development\"                                                                                   \n[51] \"Epidermal Cell Differentiation\"                                                                     \n[52] \"Contractile Fiber\"                                                                                  \n[53] \"Fat Cell Differentiation\"                                                                           \n[54] \"Keratinocyte Differentiation\"                                                                       \n[55] \"Hormone Metabolic Process\"                                                                          \n[56] \"Serine Hydrolase Activity\"                                                                          \n[57] \"Intermediate Filament Cytoskeleton\"                                                                 \n[58] \"Keratinization\"                                                                                     \n[59] \"Response To Xenobiotic Stimulus\"                                                                    \n[60] \"Intermediate Filament\"                                                                              \n[61] \"Striated Muscle Cell Development\"                                                                   \n[62] \"Primary Alcohol Metabolic Process\"                                                                  \n[63] \"Cellular Component Assembly Involved In Morphogenesis\"                                              \n[64] \"Skin Epidermis Development\"                                                                         \n[65] \"Desmosome\"                                                                                          \n[66] \"Regulation Of Water Loss Via Skin\"                                                                  \n[67] \"Aromatase Activity\"                                                                                 \n[68] \"Cell Cell Junction\"                                                                                 \n[69] \"Regulation Of Systemic Arterial Blood Pressure\"                                                     \n[70] \"Epithelial Cell Development\"                                                                        \n[71] \"Oxidoreductase Activity Acting On Paired Donors With Incorporation Or Reduction Of Molecular Oxygen\"\n[72] \"Lipid Catabolic Process\"                                                                            \n[73] \"Cellular Modified Amino Acid Metabolic Process\"                                                     \n[74] \"Heart Morphogenesis\"                                                                                \n[75] \"Cell Cell Junction Organization\"                                                                    \n[76] \"Cardiac Muscle Tissue Development\"                                                                  \n\n# Use Reduce and intersect to calculate the intersection of all vectors\nhallmarks_UpDown_common_elements &lt;- Reduce(intersect, list(limma_hallmarks_UpDown_topPathways,\n                                                          edgeR_hallmarks_UpDown_topPathways,\n                                                          deseq2_hallmarks_UpDown_topPathways))\n# Print the intersection results\nprint(hallmarks_UpDown_common_elements)\n\n [1] \"Interferon Alpha Response\"         \"Allograft Rejection\"              \n [3] \"Complement\"                        \"Inflammatory Response\"            \n [5] \"Interferon Gamma Response\"         \"G2m Checkpoint\"                   \n [7] \"E2f Targets\"                       \"Il6 Jak Stat3 Signaling\"          \n [9] \"Estrogen Response Early\"           \"Estrogen Response Late\"           \n[11] \"Myogenesis\"                        \"Kras Signaling Dn\"                \n[13] \"P53 Pathway\"                       \"Hypoxia\"                          \n[15] \"Epithelial Mesenchymal Transition\" \"Apical Junction\"                  \n[17] \"Xenobiotic Metabolism\"            \n\n\n\n# Randomly select 10 pathways from the provided list, ensuring that each pathway name does not exceed 10 words.\nhallmarks_selected_pathways &lt;- selectPathways(hallmarks_UpDown_common_elements, max_words = 10, num_select = 10)\nprint(hallmarks_selected_pathways)\n\n [1] \"Complement\"                \"Estrogen Response Late\"   \n [3] \"Kras Signaling Dn\"         \"Allograft Rejection\"      \n [5] \"P53 Pathway\"               \"Myogenesis\"               \n [7] \"Interferon Gamma Response\" \"G2m Checkpoint\"           \n [9] \"Estrogen Response Early\"   \"Interferon Alpha Response\"\n\ngo_selected_pathways &lt;- selectPathways(go_UpDown_common_elements, max_words = 10, num_select = 10)\nprint(go_selected_pathways)\n\n [1] \"Epidermal Cell Differentiation\"                 \n [2] \"Alpha Beta T Cell Differentiation\"              \n [3] \"Desmosome\"                                      \n [4] \"Membrane Invagination\"                          \n [5] \"Regulation Of Water Loss Via Skin\"              \n [6] \"Regulation Of T Cell Receptor Signaling Pathway\"\n [7] \"Positive Regulation Of B Cell Activation\"       \n [8] \"Immunological Synapse\"                          \n [9] \"Intermediate Filament Cytoskeleton\"             \n[10] \"Skin Development\"                               \n\nkegg_selected_pathways &lt;- selectPathways(kegg_UpDown_common_elements, max_words = 10, num_select = 10)\nprint(kegg_selected_pathways)\n\n [1] \"Metabolism Of Xenobiotics By Cytochrome P450\"\n [2] \"Retinol Metabolism\"                          \n [3] \"Primary Immunodeficiency\"                    \n [4] \"Allograft Rejection\"                         \n [5] \"Type I Diabetes Mellitus\"                    \n [6] \"Autoimmune Thyroid Disease\"                  \n [7] \"Drug Metabolism Cytochrome P450\"             \n [8] \"Systemic Lupus Erythematosus\"                \n [9] \"Arachidonic Acid Metabolism\"                 \n[10] \"Antigen Processing And Presentation\""
  },
  {
    "objectID": "Enrichment Circlize.html#merge-data",
    "href": "Enrichment Circlize.html#merge-data",
    "title": "14  Enrichment Circlize",
    "section": "14.6 Merge data",
    "text": "14.6 Merge data\n\n14.6.1 Hallmarks\n\n# Filter data\ndeseq2_hallmarks_filtered_fgseaRes &lt;- deseq2_hallmarks_fgseaRes[deseq2_hallmarks_fgseaRes$pathway %in% hallmarks_selected_pathways, ]\n# Select 'pathway' and 'genecount' columns\ndeseq2_hallmarks_filtered_10fgseaRes &lt;- deseq2_hallmarks_filtered_fgseaRes[, c(\"pathway\", \"genecount\")]\n# Print results\nprint(deseq2_hallmarks_filtered_10fgseaRes)\n\n                      pathway genecount\n                       &lt;char&gt;     &lt;int&gt;\n 1:            G2m Checkpoint       113\n 2:   Estrogen Response Early        71\n 3:    Estrogen Response Late        70\n 4:                Myogenesis        56\n 5: Interferon Alpha Response        53\n 6: Interferon Gamma Response        99\n 7:                Complement        81\n 8:               P53 Pathway        52\n 9:       Allograft Rejection        83\n10:         Kras Signaling Dn        65\n\ncolnames(deseq2_hallmarks_filtered_10fgseaRes) &lt;- c(\"pathway\", \"deseq2\")\n\n# Filter data\nedgeR_hallmarks_filtered_fgseaRes &lt;- edgeR_hallmarks_fgseaRes[edgeR_hallmarks_fgseaRes$pathway %in% hallmarks_selected_pathways, ]\n# Select 'pathway' and 'genecount' columns\nedgeR_hallmarks_filtered_10fgseaRes &lt;- edgeR_hallmarks_filtered_fgseaRes[, c(\"pathway\", \"genecount\")]\n# Print results\nprint(edgeR_hallmarks_filtered_10fgseaRes)\n\n                      pathway genecount\n                       &lt;char&gt;     &lt;int&gt;\n 1:            G2m Checkpoint       112\n 2:   Estrogen Response Early        70\n 3:    Estrogen Response Late        68\n 4:                Myogenesis        59\n 5: Interferon Alpha Response        50\n 6: Interferon Gamma Response        95\n 7:                Complement        79\n 8:               P53 Pathway        52\n 9:       Allograft Rejection        82\n10:         Kras Signaling Dn        54\n\ncolnames(edgeR_hallmarks_filtered_10fgseaRes) &lt;- c(\"pathway\", \"edgeR\")\n\n# Filter data\nlimma_hallmarks_filtered_fgseaRes &lt;- limma_hallmarks_fgseaRes[limma_hallmarks_fgseaRes$pathway %in% hallmarks_selected_pathways, ]\n# Select 'pathway' and 'genecount' columns\nlimma_hallmarks_filtered_10fgseaRes &lt;- limma_hallmarks_filtered_fgseaRes[, c(\"pathway\", \"genecount\")]\n# Print results\nprint(limma_hallmarks_filtered_10fgseaRes)\n\n                      pathway genecount\n                       &lt;char&gt;     &lt;int&gt;\n 1:            G2m Checkpoint        70\n 2:   Estrogen Response Early        74\n 3:    Estrogen Response Late        67\n 4:                Myogenesis        62\n 5: Interferon Alpha Response        52\n 6: Interferon Gamma Response        86\n 7:                Complement        56\n 8:               P53 Pathway        61\n 9:       Allograft Rejection        88\n10:         Kras Signaling Dn        63\n\ncolnames(limma_hallmarks_filtered_10fgseaRes) &lt;- c(\"pathway\", \"limma\")\n\n# Use full_join to merge dataframes\nhallmarks_combined_df &lt;- deseq2_hallmarks_filtered_10fgseaRes %&gt;%\n  full_join(edgeR_hallmarks_filtered_10fgseaRes, by = \"pathway\") %&gt;%\n  full_join(limma_hallmarks_filtered_10fgseaRes, by = \"pathway\")\n\n# View the merged dataframe\nprint(hallmarks_combined_df)\n\n                      pathway deseq2 edgeR limma\n                       &lt;char&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1:            G2m Checkpoint    113   112    70\n 2:   Estrogen Response Early     71    70    74\n 3:    Estrogen Response Late     70    68    67\n 4:                Myogenesis     56    59    62\n 5: Interferon Alpha Response     53    50    52\n 6: Interferon Gamma Response     99    95    86\n 7:                Complement     81    79    56\n 8:               P53 Pathway     52    52    61\n 9:       Allograft Rejection     83    82    88\n10:         Kras Signaling Dn     65    54    63\n\n# Add a prefix \"hallmarks.\" to the pathway column\nhallmarks_combined_df &lt;- hallmarks_combined_df %&gt;%\n  mutate(pathway = paste(\"Hallmarks.\", pathway))\n\n# Print the modified dataframe to view results\nprint(hallmarks_combined_df)\n\n                                 pathway deseq2 edgeR limma\n                                  &lt;char&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1:            Hallmarks. G2m Checkpoint    113   112    70\n 2:   Hallmarks. Estrogen Response Early     71    70    74\n 3:    Hallmarks. Estrogen Response Late     70    68    67\n 4:                Hallmarks. Myogenesis     56    59    62\n 5: Hallmarks. Interferon Alpha Response     53    50    52\n 6: Hallmarks. Interferon Gamma Response     99    95    86\n 7:                Hallmarks. Complement     81    79    56\n 8:               Hallmarks. P53 Pathway     52    52    61\n 9:       Hallmarks. Allograft Rejection     83    82    88\n10:         Hallmarks. Kras Signaling Dn     65    54    63\n\n\n\n\n14.6.2 GO\n\n# Filter data\ndeseq2_go_filtered_fgseaRes &lt;- deseq2_go_fgseaRes[deseq2_go_fgseaRes$pathway %in% go_selected_pathways, ]\n# Select 'pathway' and 'genecount' columns\ndeseq2_go_filtered_10fgseaRes &lt;- deseq2_go_filtered_fgseaRes[, c(\"pathway\", \"genecount\")]\n# Print results\nprint(deseq2_go_filtered_10fgseaRes)\n\n                                            pathway genecount\n                                             &lt;char&gt;     &lt;int&gt;\n 1:                  Epidermal Cell Differentiation       209\n 2:                           Membrane Invagination        60\n 3:               Regulation Of Water Loss Via Skin        18\n 4:                                Skin Development       224\n 5:               Alpha Beta T Cell Differentiation        43\n 6: Regulation Of T Cell Receptor Signaling Pathway        19\n 7:        Positive Regulation Of B Cell Activation        76\n 8:                           Immunological Synapse        21\n 9:                                       Desmosome        14\n10:              Intermediate Filament Cytoskeleton       128\n\ncolnames(deseq2_go_filtered_10fgseaRes) &lt;- c(\"pathway\", \"deseq2\")\n\n# Filter data\nedgeR_go_filtered_fgseaRes &lt;- edgeR_go_fgseaRes[edgeR_go_fgseaRes$pathway %in% go_selected_pathways, ]\n# Select 'pathway' and 'genecount' columns\nedgeR_go_filtered_10fgseaRes &lt;- edgeR_go_filtered_fgseaRes[, c(\"pathway\", \"genecount\")]\n# Print results\nprint(edgeR_go_filtered_10fgseaRes)\n\n                                            pathway genecount\n                                             &lt;char&gt;     &lt;int&gt;\n 1:                  Epidermal Cell Differentiation       204\n 2:                           Membrane Invagination        58\n 3:               Regulation Of Water Loss Via Skin        18\n 4:                                Skin Development       216\n 5:               Alpha Beta T Cell Differentiation        44\n 6: Regulation Of T Cell Receptor Signaling Pathway        19\n 7:        Positive Regulation Of B Cell Activation        68\n 8:                           Immunological Synapse        21\n 9:                                       Desmosome        14\n10:              Intermediate Filament Cytoskeleton       131\n\ncolnames(edgeR_go_filtered_10fgseaRes) &lt;- c(\"pathway\", \"edgeR\")\n\n# Filter data\nlimma_go_filtered_fgseaRes &lt;- limma_go_fgseaRes[limma_go_fgseaRes$pathway %in% go_selected_pathways, ]\n# Select 'pathway' and 'genecount' columns\nlimma_go_filtered_10fgseaRes &lt;- limma_go_filtered_fgseaRes[, c(\"pathway\", \"genecount\")]\n# Print results\nprint(limma_go_filtered_10fgseaRes)\n\n                                            pathway genecount\n                                             &lt;char&gt;     &lt;int&gt;\n 1:                  Epidermal Cell Differentiation       117\n 2:                           Membrane Invagination        42\n 3:               Regulation Of Water Loss Via Skin        14\n 4:                                Skin Development       136\n 5:               Alpha Beta T Cell Differentiation        36\n 6: Regulation Of T Cell Receptor Signaling Pathway        17\n 7:        Positive Regulation Of B Cell Activation        46\n 8:                           Immunological Synapse        21\n 9:                                       Desmosome        12\n10:              Intermediate Filament Cytoskeleton        48\n\ncolnames(limma_go_filtered_10fgseaRes) &lt;- c(\"pathway\", \"limma\")\n\nlibrary(dplyr)\n# Use full_join to merge dataframes\ngo_combined_df &lt;- deseq2_go_filtered_10fgseaRes %&gt;%\n  full_join(edgeR_go_filtered_10fgseaRes, by = \"pathway\") %&gt;%\n  full_join(limma_go_filtered_10fgseaRes, by = \"pathway\")\n\n# View the merged dataframe\nprint(go_combined_df)\n\n                                            pathway deseq2 edgeR limma\n                                             &lt;char&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1:                  Epidermal Cell Differentiation    209   204   117\n 2:                           Membrane Invagination     60    58    42\n 3:               Regulation Of Water Loss Via Skin     18    18    14\n 4:                                Skin Development    224   216   136\n 5:               Alpha Beta T Cell Differentiation     43    44    36\n 6: Regulation Of T Cell Receptor Signaling Pathway     19    19    17\n 7:        Positive Regulation Of B Cell Activation     76    68    46\n 8:                           Immunological Synapse     21    21    21\n 9:                                       Desmosome     14    14    12\n10:              Intermediate Filament Cytoskeleton    128   131    48\n\n# Add a prefix \"GO.\" to the pathway column\ngo_combined_df &lt;- go_combined_df %&gt;%\n  mutate(pathway = paste(\"GO.\", pathway))\n\n# Print the modified dataframe to view results\nprint(go_combined_df)\n\n                                                pathway deseq2 edgeR limma\n                                                 &lt;char&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1:                  GO. Epidermal Cell Differentiation    209   204   117\n 2:                           GO. Membrane Invagination     60    58    42\n 3:               GO. Regulation Of Water Loss Via Skin     18    18    14\n 4:                                GO. Skin Development    224   216   136\n 5:               GO. Alpha Beta T Cell Differentiation     43    44    36\n 6: GO. Regulation Of T Cell Receptor Signaling Pathway     19    19    17\n 7:        GO. Positive Regulation Of B Cell Activation     76    68    46\n 8:                           GO. Immunological Synapse     21    21    21\n 9:                                       GO. Desmosome     14    14    12\n10:              GO. Intermediate Filament Cytoskeleton    128   131    48\n\n\n\n\n14.6.3 KEGG\n\n# Filter data\ndeseq2_kegg_filtered_fgseaRes &lt;- deseq2_kegg_fgseaRes[deseq2_kegg_fgseaRes$pathway %in% kegg_selected_pathways, ]\n# Select 'pathway' and 'genecount' columns\ndeseq2_kegg_filtered_10fgseaRes &lt;- deseq2_kegg_filtered_fgseaRes[, c(\"pathway\", \"genecount\")]\n# Print results\nprint(deseq2_kegg_filtered_10fgseaRes)\n\n                                         pathway genecount\n                                          &lt;char&gt;     &lt;int&gt;\n 1:                  Arachidonic Acid Metabolism        25\n 2:                 Systemic Lupus Erythematosus        25\n 3:                     Primary Immunodeficiency        22\n 4:                           Retinol Metabolism        31\n 5: Metabolism Of Xenobiotics By Cytochrome P450        37\n 6:              Drug Metabolism Cytochrome P450        37\n 7:          Antigen Processing And Presentation        54\n 8:                     Type I Diabetes Mellitus        28\n 9:                   Autoimmune Thyroid Disease        26\n10:                          Allograft Rejection        27\n\ncolnames(deseq2_kegg_filtered_10fgseaRes) &lt;- c(\"pathway\", \"deseq2\")\n\n# Filter data\nedgeR_kegg_filtered_fgseaRes &lt;- edgeR_kegg_fgseaRes[edgeR_kegg_fgseaRes$pathway %in% kegg_selected_pathways, ]\n# Select 'pathway' and 'genecount' columns\nedgeR_kegg_filtered_10fgseaRes &lt;- edgeR_kegg_filtered_fgseaRes[, c(\"pathway\", \"genecount\")]\n# Print results\nprint(edgeR_kegg_filtered_10fgseaRes)\n\n                                         pathway genecount\n                                          &lt;char&gt;     &lt;int&gt;\n 1:                  Arachidonic Acid Metabolism        23\n 2:                 Systemic Lupus Erythematosus        27\n 3:                     Primary Immunodeficiency        22\n 4:                           Retinol Metabolism        30\n 5: Metabolism Of Xenobiotics By Cytochrome P450        36\n 6:              Drug Metabolism Cytochrome P450        36\n 7:          Antigen Processing And Presentation        43\n 8:                     Type I Diabetes Mellitus        27\n 9:                   Autoimmune Thyroid Disease        25\n10:                          Allograft Rejection        26\n\ncolnames(edgeR_kegg_filtered_10fgseaRes) &lt;- c(\"pathway\", \"edgeR\")\n\n# Filter data\nlimma_kegg_filtered_fgseaRes &lt;- limma_kegg_fgseaRes[limma_kegg_fgseaRes$pathway %in% kegg_selected_pathways, ]\n# Select 'pathway' and 'genecount' columns\nlimma_kegg_filtered_10fgseaRes &lt;- limma_kegg_filtered_fgseaRes[, c(\"pathway\", \"genecount\")]\n# Print results\nprint(limma_kegg_filtered_10fgseaRes)\n\n                                         pathway genecount\n                                          &lt;char&gt;     &lt;int&gt;\n 1:                  Arachidonic Acid Metabolism        19\n 2:                 Systemic Lupus Erythematosus        26\n 3:                     Primary Immunodeficiency        16\n 4:                           Retinol Metabolism        19\n 5: Metabolism Of Xenobiotics By Cytochrome P450        22\n 6:              Drug Metabolism Cytochrome P450        24\n 7:          Antigen Processing And Presentation        35\n 8:                     Type I Diabetes Mellitus        26\n 9:                   Autoimmune Thyroid Disease        25\n10:                          Allograft Rejection        24\n\ncolnames(limma_kegg_filtered_10fgseaRes) &lt;- c(\"pathway\", \"limma\")\n\nlibrary(dplyr)\n# Use full_join to merge dataframes\nkegg_combined_df &lt;- deseq2_kegg_filtered_10fgseaRes %&gt;%\n  full_join(edgeR_kegg_filtered_10fgseaRes, by = \"pathway\") %&gt;%\n  full_join(limma_kegg_filtered_10fgseaRes, by = \"pathway\")\n\n# View the merged dataframe\nprint(kegg_combined_df)\n\n                                         pathway deseq2 edgeR limma\n                                          &lt;char&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1:                  Arachidonic Acid Metabolism     25    23    19\n 2:                 Systemic Lupus Erythematosus     25    27    26\n 3:                     Primary Immunodeficiency     22    22    16\n 4:                           Retinol Metabolism     31    30    19\n 5: Metabolism Of Xenobiotics By Cytochrome P450     37    36    22\n 6:              Drug Metabolism Cytochrome P450     37    36    24\n 7:          Antigen Processing And Presentation     54    43    35\n 8:                     Type I Diabetes Mellitus     28    27    26\n 9:                   Autoimmune Thyroid Disease     26    25    25\n10:                          Allograft Rejection     27    26    24\n\n# Add a prefix \"KEGG.\" to the pathway column\nkegg_combined_df &lt;- kegg_combined_df %&gt;%\n  mutate(pathway = paste(\"KEGG.\", pathway))\n\n# Print the modified dataframe to view results\nprint(kegg_combined_df)\n\n                                               pathway deseq2 edgeR limma\n                                                &lt;char&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1:                  KEGG. Arachidonic Acid Metabolism     25    23    19\n 2:                 KEGG. Systemic Lupus Erythematosus     25    27    26\n 3:                     KEGG. Primary Immunodeficiency     22    22    16\n 4:                           KEGG. Retinol Metabolism     31    30    19\n 5: KEGG. Metabolism Of Xenobiotics By Cytochrome P450     37    36    22\n 6:              KEGG. Drug Metabolism Cytochrome P450     37    36    24\n 7:          KEGG. Antigen Processing And Presentation     54    43    35\n 8:                     KEGG. Type I Diabetes Mellitus     28    27    26\n 9:                   KEGG. Autoimmune Thyroid Disease     26    25    25\n10:                          KEGG. Allograft Rejection     27    26    24\n\n\n\n\n14.6.4 Calculate the total number of genes\n\n# Calculate the total number of genes across different samples/methods for the same pathway\n# Add 'hallmarks_count' column to the dataframe\nhallmarks_combined_count_df &lt;- hallmarks_combined_df %&gt;%\n  mutate(hallmarks_count = rowSums(select(., deseq2, edgeR, limma), na.rm = TRUE))\nhallmarks_combined_count_df &lt;- hallmarks_combined_count_df %&gt;%\n  arrange(hallmarks_count)  # Sort in ascending order by default\nprint(hallmarks_combined_count_df)\n\n                                 pathway deseq2 edgeR limma hallmarks_count\n                                  &lt;char&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt;           &lt;num&gt;\n 1: Hallmarks. Interferon Alpha Response     53    50    52             155\n 2:               Hallmarks. P53 Pathway     52    52    61             165\n 3:                Hallmarks. Myogenesis     56    59    62             177\n 4:         Hallmarks. Kras Signaling Dn     65    54    63             182\n 5:    Hallmarks. Estrogen Response Late     70    68    67             205\n 6:   Hallmarks. Estrogen Response Early     71    70    74             215\n 7:                Hallmarks. Complement     81    79    56             216\n 8:       Hallmarks. Allograft Rejection     83    82    88             253\n 9: Hallmarks. Interferon Gamma Response     99    95    86             280\n10:            Hallmarks. G2m Checkpoint    113   112    70             295\n\n# Calculate the total number of genes across different samples/methods for the same pathway\n# Add 'go_count' column to the dataframe\ngo_combined_count_df &lt;- go_combined_df %&gt;%\n  mutate(go_count = rowSums(select(., deseq2, edgeR, limma), na.rm = TRUE))\ngo_combined_count_df &lt;- go_combined_count_df %&gt;%\n  arrange(go_count)  # Sort in ascending order by default\nprint(go_combined_count_df)\n\n                                                pathway deseq2 edgeR limma\n                                                 &lt;char&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1:                                       GO. Desmosome     14    14    12\n 2:               GO. Regulation Of Water Loss Via Skin     18    18    14\n 3: GO. Regulation Of T Cell Receptor Signaling Pathway     19    19    17\n 4:                           GO. Immunological Synapse     21    21    21\n 5:               GO. Alpha Beta T Cell Differentiation     43    44    36\n 6:                           GO. Membrane Invagination     60    58    42\n 7:        GO. Positive Regulation Of B Cell Activation     76    68    46\n 8:              GO. Intermediate Filament Cytoskeleton    128   131    48\n 9:                  GO. Epidermal Cell Differentiation    209   204   117\n10:                                GO. Skin Development    224   216   136\n    go_count\n       &lt;num&gt;\n 1:       40\n 2:       50\n 3:       55\n 4:       63\n 5:      123\n 6:      160\n 7:      190\n 8:      307\n 9:      530\n10:      576\n\n# Calculate the total number of genes across different samples/methods for the same pathway\n# Add 'kegg_count' column to the dataframe\nkegg_combined_count_df &lt;- kegg_combined_df %&gt;%\n  mutate(kegg_count = rowSums(select(., deseq2, edgeR, limma), na.rm = TRUE))\nkegg_combined_count_df &lt;- kegg_combined_count_df %&gt;%\n  arrange(kegg_count)  # Sort in ascending order by default\nprint(kegg_combined_count_df)\n\n                                               pathway deseq2 edgeR limma\n                                                &lt;char&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1:                     KEGG. Primary Immunodeficiency     22    22    16\n 2:                  KEGG. Arachidonic Acid Metabolism     25    23    19\n 3:                   KEGG. Autoimmune Thyroid Disease     26    25    25\n 4:                          KEGG. Allograft Rejection     27    26    24\n 5:                 KEGG. Systemic Lupus Erythematosus     25    27    26\n 6:                           KEGG. Retinol Metabolism     31    30    19\n 7:                     KEGG. Type I Diabetes Mellitus     28    27    26\n 8: KEGG. Metabolism Of Xenobiotics By Cytochrome P450     37    36    22\n 9:              KEGG. Drug Metabolism Cytochrome P450     37    36    24\n10:          KEGG. Antigen Processing And Presentation     54    43    35\n    kegg_count\n         &lt;num&gt;\n 1:         60\n 2:         67\n 3:         76\n 4:         77\n 5:         78\n 6:         80\n 7:         81\n 8:         95\n 9:         97\n10:        132"
  },
  {
    "objectID": "Enrichment Circlize.html#convert-to-long-format",
    "href": "Enrichment Circlize.html#convert-to-long-format",
    "title": "14  Enrichment Circlize",
    "section": "14.7 Convert to long format",
    "text": "14.7 Convert to long format\n\n# Use pivot_longer to convert from wide to long format\nkegg_long_df &lt;- kegg_combined_count_df %&gt;%\n  pivot_longer(\n    cols = c(limma, deseq2, edgeR, kegg_count),\n    names_to = \"method/group\",\n    values_to = \"genecount\"\n  )\n# Print the transformed long format dataframe\nprint(kegg_long_df)\n\n# A tibble: 40 × 3\n   pathway                           `method/group` genecount\n   &lt;chr&gt;                             &lt;chr&gt;              &lt;dbl&gt;\n 1 KEGG. Primary Immunodeficiency    limma                 16\n 2 KEGG. Primary Immunodeficiency    deseq2                22\n 3 KEGG. Primary Immunodeficiency    edgeR                 22\n 4 KEGG. Primary Immunodeficiency    kegg_count            60\n 5 KEGG. Arachidonic Acid Metabolism limma                 19\n 6 KEGG. Arachidonic Acid Metabolism deseq2                25\n 7 KEGG. Arachidonic Acid Metabolism edgeR                 23\n 8 KEGG. Arachidonic Acid Metabolism kegg_count            67\n 9 KEGG. Autoimmune Thyroid Disease  limma                 25\n10 KEGG. Autoimmune Thyroid Disease  deseq2                26\n# ℹ 30 more rows\n\n# Use pivot_longer to convert from wide to long format\ngo_long_df &lt;- go_combined_count_df %&gt;%\n  pivot_longer(\n    cols = c(limma, deseq2, edgeR, go_count),\n    names_to = \"method/group\",\n    values_to = \"genecount\"\n  )\n# Print the transformed long format dataframe\nprint(go_long_df)\n\n# A tibble: 40 × 3\n   pathway                                             `method/group` genecount\n   &lt;chr&gt;                                               &lt;chr&gt;              &lt;dbl&gt;\n 1 GO. Desmosome                                       limma                 12\n 2 GO. Desmosome                                       deseq2                14\n 3 GO. Desmosome                                       edgeR                 14\n 4 GO. Desmosome                                       go_count              40\n 5 GO. Regulation Of Water Loss Via Skin               limma                 14\n 6 GO. Regulation Of Water Loss Via Skin               deseq2                18\n 7 GO. Regulation Of Water Loss Via Skin               edgeR                 18\n 8 GO. Regulation Of Water Loss Via Skin               go_count              50\n 9 GO. Regulation Of T Cell Receptor Signaling Pathway limma                 17\n10 GO. Regulation Of T Cell Receptor Signaling Pathway deseq2                19\n# ℹ 30 more rows\n\n# Use pivot_longer to convert from wide to long format\nhallmarks_long_df &lt;- hallmarks_combined_count_df %&gt;%\n  pivot_longer(\n    cols = c(limma, deseq2, edgeR, hallmarks_count),\n    names_to = \"method/group\",\n    values_to = \"genecount\"\n  )\n# Print the transformed long format dataframe\nprint(hallmarks_long_df)\n\n# A tibble: 40 × 3\n   pathway                              `method/group`  genecount\n   &lt;chr&gt;                                &lt;chr&gt;               &lt;dbl&gt;\n 1 Hallmarks. Interferon Alpha Response limma                  52\n 2 Hallmarks. Interferon Alpha Response deseq2                 53\n 3 Hallmarks. Interferon Alpha Response edgeR                  50\n 4 Hallmarks. Interferon Alpha Response hallmarks_count       155\n 5 Hallmarks. P53 Pathway               limma                  61\n 6 Hallmarks. P53 Pathway               deseq2                 52\n 7 Hallmarks. P53 Pathway               edgeR                  52\n 8 Hallmarks. P53 Pathway               hallmarks_count       165\n 9 Hallmarks. Myogenesis                limma                  62\n10 Hallmarks. Myogenesis                deseq2                 56\n# ℹ 30 more rows\n\n\n\n# Use rbind to merge these three dataframes\nall_combined_df &lt;- rbind(kegg_long_df, hallmarks_long_df, go_long_df)\n# Print the merged dataframe to check the results\nprint(all_combined_df)\n\n# A tibble: 120 × 3\n   pathway                           `method/group` genecount\n   &lt;chr&gt;                             &lt;chr&gt;              &lt;dbl&gt;\n 1 KEGG. Primary Immunodeficiency    limma                 16\n 2 KEGG. Primary Immunodeficiency    deseq2                22\n 3 KEGG. Primary Immunodeficiency    edgeR                 22\n 4 KEGG. Primary Immunodeficiency    kegg_count            60\n 5 KEGG. Arachidonic Acid Metabolism limma                 19\n 6 KEGG. Arachidonic Acid Metabolism deseq2                25\n 7 KEGG. Arachidonic Acid Metabolism edgeR                 23\n 8 KEGG. Arachidonic Acid Metabolism kegg_count            67\n 9 KEGG. Autoimmune Thyroid Disease  limma                 25\n10 KEGG. Autoimmune Thyroid Disease  deseq2                26\n# ℹ 110 more rows\n\ncolnames(all_combined_df) &lt;- c(\"from\", \"to\", \"value\")\n\n# Extract and deduplicate the 'from' column\nunique_from &lt;- unique(all_combined_df$from)\nprint(\"Unique 'from' values:\")\n\n[1] \"Unique 'from' values:\"\n\nprint(unique_from)\n\n [1] \"KEGG. Primary Immunodeficiency\"                     \n [2] \"KEGG. Arachidonic Acid Metabolism\"                  \n [3] \"KEGG. Autoimmune Thyroid Disease\"                   \n [4] \"KEGG. Allograft Rejection\"                          \n [5] \"KEGG. Systemic Lupus Erythematosus\"                 \n [6] \"KEGG. Retinol Metabolism\"                           \n [7] \"KEGG. Type I Diabetes Mellitus\"                     \n [8] \"KEGG. Metabolism Of Xenobiotics By Cytochrome P450\" \n [9] \"KEGG. Drug Metabolism Cytochrome P450\"              \n[10] \"KEGG. Antigen Processing And Presentation\"          \n[11] \"Hallmarks. Interferon Alpha Response\"               \n[12] \"Hallmarks. P53 Pathway\"                             \n[13] \"Hallmarks. Myogenesis\"                              \n[14] \"Hallmarks. Kras Signaling Dn\"                       \n[15] \"Hallmarks. Estrogen Response Late\"                  \n[16] \"Hallmarks. Estrogen Response Early\"                 \n[17] \"Hallmarks. Complement\"                              \n[18] \"Hallmarks. Allograft Rejection\"                     \n[19] \"Hallmarks. Interferon Gamma Response\"               \n[20] \"Hallmarks. G2m Checkpoint\"                          \n[21] \"GO. Desmosome\"                                      \n[22] \"GO. Regulation Of Water Loss Via Skin\"              \n[23] \"GO. Regulation Of T Cell Receptor Signaling Pathway\"\n[24] \"GO. Immunological Synapse\"                          \n[25] \"GO. Alpha Beta T Cell Differentiation\"              \n[26] \"GO. Membrane Invagination\"                          \n[27] \"GO. Positive Regulation Of B Cell Activation\"       \n[28] \"GO. Intermediate Filament Cytoskeleton\"             \n[29] \"GO. Epidermal Cell Differentiation\"                 \n[30] \"GO. Skin Development\"                               \n\n# Extract and deduplicate the 'to' column\nunique_to &lt;- unique(all_combined_df$to)\nprint(\"Unique 'to' values:\")\n\n[1] \"Unique 'to' values:\"\n\nprint(unique_to)\n\n[1] \"limma\"           \"deseq2\"          \"edgeR\"           \"kegg_count\"     \n[5] \"hallmarks_count\" \"go_count\""
  },
  {
    "objectID": "Enrichment Circlize.html#enrichment-circlize",
    "href": "Enrichment Circlize.html#enrichment-circlize",
    "title": "14  Enrichment Circlize",
    "section": "14.8 Enrichment Circlize",
    "text": "14.8 Enrichment Circlize\n\n14.8.1 prepare data\n\noriginal_colors &lt;- c(\n  `KEGG. Primary Immunodeficiency` = \"#0d47a1\",\n  `KEGG. Arachidonic Acid Metabolism` = \"#2058ab\",\n  `KEGG. Autoimmune Thyroid Disease` = \"#3469b5\",\n  `KEGG. Allograft Rejection` = \"#4779bf\",\n  `KEGG. Systemic Lupus Erythematosus` = \"#5a8ac9\",\n  `KEGG. Retinol Metabolism` = \"#6e9bd3\",\n  `KEGG. Type I Diabetes Mellitus` = \"#81acdd\",\n  `KEGG. Metabolism Of Xenobiotics By Cytochrome P450` = \"#94bce7\",\n  `KEGG. Drug Metabolism Cytochrome P450` = \"#a8cdf1\",\n  `KEGG. Antigen Processing And Presentation` = \"#bbdefb\",\n  `Hallmarks. Interferon Alpha Response` = \"#1b5e20\",\n  `Hallmarks. P53 Pathway` = \"#2e6d33\",\n  `Hallmarks. Myogenesis` = \"#417c46\",\n  `Hallmarks. Kras Signaling Dn` = \"#558b58\",\n  `Hallmarks. Estrogen Response Late` = \"#689a6b\",\n  `Hallmarks. Estrogen Response Early` = \"#7baa7e\",\n  `Hallmarks. Complement` = \"#8eb991\",\n  `Hallmarks. Allograft Rejection` = \"#a2c8a3\",\n  `Hallmarks. Interferon Gamma Response` = \"#b5d7b6\",\n  `Hallmarks. G2m Checkpoint` = \"#c8e6c9\",\n  `GO. Desmosome` = \"#ff6f00\",\n  `GO. Regulation Of Water Loss Via Skin` = \"#ff7d14\",\n  `GO. Regulation Of T Cell Receptor Signaling Pathway` = \"#ff8b28\",\n  `GO. Immunological Synapse` = \"#ff993c\",\n  `GO. Alpha Beta T Cell Differentiation` = \"#ffa750\",\n  `GO. Membrane Invagination` = \"#ffb463\",\n  `GO. Positive Regulation Of B Cell Activation` = \"#ffc277\",\n  `GO. Intermediate Filament Cytoskeleton` = \"#ffd08b\",\n  `GO. Epidermal Cell Differentiation` = \"#ffde9f\",\n  `GO. Skin Development` = \"#ffecb3\",\n  `limma` = \"#ab47bc\",\n  `deseq2` = \"#7e57c2\",\n  `edgeR` = \"#3f51b5\",\n  `kegg_count` = \"#4979bb\",\n  `hallmarks_count` = \"#6a9a6f\",\n  `go_count` = \"#fda85d\"\n)\nlabels &lt;- c(\n  \"KEGG. Primary Immunodeficiency\",                     \n  \"KEGG. Arachidonic Acid Metabolism\",                  \n  \"KEGG. Autoimmune Thyroid Disease\",                   \n  \"KEGG. Allograft Rejection\",                          \n  \"KEGG. Systemic Lupus Erythematosus\",                 \n  \"KEGG. Retinol Metabolism\",                           \n  \"KEGG. Type I Diabetes Mellitus\",                     \n  \"KEGG. Metabolism Of Xenobiotics By Cytochrome P450\", \n  \"KEGG. Drug Metabolism Cytochrome P450\",              \n  \"KEGG. Antigen Processing And Presentation\",          \n  \"Hallmarks. Interferon Alpha Response\",               \n  \"Hallmarks. P53 Pathway\",                             \n  \"Hallmarks. Myogenesis\",                              \n  \"Hallmarks. Kras Signaling Dn\",                       \n  \"Hallmarks. Estrogen Response Late\",                  \n  \"Hallmarks. Estrogen Response Early\",                 \n  \"Hallmarks. Complement\",                              \n  \"Hallmarks. Allograft Rejection\",                     \n  \"Hallmarks. Interferon Gamma Response\",               \n  \"Hallmarks. G2m Checkpoint\",                          \n  \"GO. Desmosome\",                                      \n  \"GO. Regulation Of Water Loss Via Skin\",              \n  \"GO. Regulation Of T Cell Receptor Signaling Pathway\",\n  \"GO. Immunological Synapse\",                          \n  \"GO. Alpha Beta T Cell Differentiation\",              \n  \"GO. Membrane Invagination\",                         \n  \"GO. Positive Regulation Of B Cell Activation\",       \n  \"GO. Intermediate Filament Cytoskeleton\",             \n  \"GO. Epidermal Cell Differentiation\",                 \n  \"GO. Skin Development\"                  \n)\n\n# 定义颜色\ncolors &lt;- c(\n  \"#0d47a1\",\n  \"#2058ab\",\n  \"#3469b5\",\n  \"#4779bf\",\n  \"#5a8ac9\",\n  \"#6e9bd3\",\n  \"#81acdd\",\n  \"#94bce7\",\n  \"#a8cdf1\",\n  \"#bbdefb\",\n  \"#1b5e20\",\n  \"#2e6d33\",\n  \"#417c46\",\n  \"#558b58\",\n  \"#689a6b\",\n  \"#7baa7e\",\n  \"#8eb991\",\n  \"#a2c8a3\",\n  \"#b5d7b6\",\n  \"#c8e6c9\",\n  \"#ff6f00\",\n  \"#ff7d14\",\n  \"#ff8b28\",\n  \"#ff993c\",\n  \"#ffa750\",\n  \"#ffb463\",\n  \"#ffc277\",\n  \"#ffd08b\",\n  \"#ffde9f\",\n  \"#ffecb3\"\n)\nlabels2 &lt;- c(\"limma\",\n            \"deseq2\",\n            \"edgeR\",\n            \"kegg_count\",\n            \"hallmarks_count\",\n            \"go_count\")\ncolors2 &lt;- c(\"#ab47bc\",\n            \"#7e57c2\",\n            \"#3f51b5\",\n            \"#4979bb\",\n            \"#6a9a6f\",\n            \"#fda85d\")\n\n\nenrichment_circlize(all_combined_df, original_colors, labels, colors, labels2, colors2, font_size = 10)"
  },
  {
    "objectID": "Enrichment Circlize.html#reference",
    "href": "Enrichment Circlize.html#reference",
    "title": "14  Enrichment Circlize",
    "section": "14.9 Reference",
    "text": "14.9 Reference\n\n\nggplot2:\n\n\ngithub:ggplot2\nAn implementation of the Grammar of Graphics in R\n\n\nGSVA:\n\n\nGSVA: gene set variation analysis for microarray and RNA-seq data\n\n\nfgsea:\n\n\nfgsea is an R-package for fast preranked gene set enrichment analysis (GSEA). \n\n\nclusterProfiler 4.0:\n\n\nT Wu#, E Hu#, S Xu, M Chen, P Guo, Z Dai, T Feng, L Zhou, W Tang, L Zhan, X Fu, S Liu, X Bo, G Yu. clusterProfiler 4.0: A universal enrichment tool for interpreting omics data. The Innovation. 2021, 2(3):100141. \n\n\ncirclize:\n\n\nZuguang Gu, et al., circlize Implements and enhances circular visualization in R. Bioinformatics (Oxford, England) 2014."
  },
  {
    "objectID": "Contact.html",
    "href": "Contact.html",
    "title": "15  Contact",
    "section": "",
    "text": "Any problems encountered or inspiration gained from using this R package can be addressed by contacting me in the following ways. I am very willing to help you wholeheartedly.\n\nemailgithub\n\n\nyudongyue@mail.nankai.edu.cn\n\n\nhttps://github.com/SSSYDYSSS/TransProR\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nShould there be any omissions in the cited references that are significantly related to the content discussed herein, we would be immensely grateful to be informed by our esteemed users. Additionally, we sincerely apologize for any imperfections that may exist within this manual."
  }
]