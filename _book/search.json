[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TransProRBook",
    "section": "",
    "text": "Preface\nAnalysis and visualization of transcriptomic data are currently in progress. Future directions include multi-modal fusion, sparse learning, and the investigation of spatio-temporal effects."
  },
  {
    "objectID": "index.html#transpror-installation",
    "href": "index.html#transpror-installation",
    "title": "TransProRBook",
    "section": "TransProR Installation",
    "text": "TransProR Installation\nYou can install the released version of TransProR from CRAN with:\ninstall.packages(\"TransProR\")\nYou can install the development version of TransProR like so:\ninstall.packages(\"devtools\")\ndevtools::install_github(\"SSSYDYSSS/TransProR\")\n\ninstall.packages(\"remotes\")\ndevtools::install_github(\"SSSYDYSSS/TransProR\")"
  },
  {
    "objectID": "index.html#system-requirements",
    "href": "index.html#system-requirements",
    "title": "TransProRBook",
    "section": "System Requirements",
    "text": "System Requirements\n\nPython version 3.10 or higher is required."
  },
  {
    "objectID": "index.html#python-dependencies",
    "href": "index.html#python-dependencies",
    "title": "TransProRBook",
    "section": "Python Dependencies",
    "text": "Python Dependencies\nThis package requires several Python libraries to function properly. The following are the main dependencies:\n\nTransProPy\n\nPlease ensure these Python libraries are installed in your environment before you proceed with using this package. You can quickly install them using the command below:"
  },
  {
    "objectID": "index.html#environment-setup",
    "href": "index.html#environment-setup",
    "title": "TransProRBook",
    "section": "Environment Setup",
    "text": "Environment Setup\nTo run this project, we recommend using conda, a popular Python environment and package manager. Please follow the steps below to set up your environment:"
  },
  {
    "objectID": "index.html#creating-the-environment",
    "href": "index.html#creating-the-environment",
    "title": "TransProRBook",
    "section": "Creating the Environment",
    "text": "Creating the Environment\nFirst, if you have not installed conda yet, please visit the Miniconda website and follow the instructions for installation. Once you have conda installed, you can create a new environment named “TransPro” that includes all the dependencies required to run this project.\nRun the following command in your command line to create a new environment:\nconda create --name TransPro python=3.10 # or higher version if preferred.\npip3 install TransProPy \nThis version helps guide users through the installation process more smoothly, taking into account various common scenarios they might encounter. It suggests considering the environment management system and potential system-specific quirks, improving the overall user experience.\nFor more detailed information or troubleshooting, please refer to the documentation of each individual Python package."
  },
  {
    "objectID": "index.html#contributing",
    "href": "index.html#contributing",
    "title": "TransProRBook",
    "section": "Contributing",
    "text": "Contributing\nThis manual is free and open source, so please do open an issue if you notice a problem!"
  },
  {
    "objectID": "Data Source and Introduction.html",
    "href": "Data Source and Introduction.html",
    "title": "1  Data Source and Introduction",
    "section": "",
    "text": "2 Data Download and Processing Statement"
  },
  {
    "objectID": "Data Source and Introduction.html#characteristics-of-the-tcga-database",
    "href": "Data Source and Introduction.html#characteristics-of-the-tcga-database",
    "title": "1  Data Source and Introduction",
    "section": "1.1 Characteristics of the TCGA Database:",
    "text": "1.1 Characteristics of the TCGA Database:\n\nRich Cancer Tissue Sample Data:\n\n\nThe TCGA (The Cancer Genome Atlas) database amasses a substantial volume of tissue sample data across a variety of cancer types, encompassing multi-dimensional data such as genomics, transcriptomics, and proteomics. This repository serves as a valuable resource for cancer research, enabling researchers to delve into the biological mechanisms of cancer at multiple levels.\n\n\nPrimary Focus on Cancer Types:\n\n\nThe core objective of TCGA is to unveil the molecular mechanisms, pathogenic genes, and mutation frequencies of different cancer types through integrative analysis, thereby providing a robust scientific basis for the diagnosis, treatment, and prevention of cancer.\n\n\nLimited Quantity of Normal Tissue Samples:\n\n\nDespite the richness of cancer sample data, TCGA has a relatively limited number of normal tissue samples, which to some extent, restricts its application in comparative studies between normal and cancerous tissues."
  },
  {
    "objectID": "Data Source and Introduction.html#characteristics-of-the-gtex-database",
    "href": "Data Source and Introduction.html#characteristics-of-the-gtex-database",
    "title": "1  Data Source and Introduction",
    "section": "1.2 Characteristics of the GTEx Database:",
    "text": "1.2 Characteristics of the GTEx Database:\n\nCovers Normal Tissue Sample Data from Multiple Organs and Tissues:\n\n\nThe GTEx (Genotype-Tissue Expression) database, by collecting samples from a variety of organs and tissues, offers an extensive gene expression data resource. This is crucial for understanding the heterogeneity of gene expression across different tissues and the functionality of genes under normal physiological conditions.\n\n\nFocus on Gene Expression Patterns in Normal Tissues:\n\n\nGTEx aims to reveal the patterns and variations of gene expression in normal tissues, providing a valuable foundation for researching gene functionality and regulatory mechanisms."
  },
  {
    "objectID": "Data Source and Introduction.html#demands-and-challenges-of-joint-analysis",
    "href": "Data Source and Introduction.html#demands-and-challenges-of-joint-analysis",
    "title": "1  Data Source and Introduction",
    "section": "1.3 Demands and Challenges of Joint Analysis:",
    "text": "1.3 Demands and Challenges of Joint Analysis:\n\nNeed to Augment Normal Tissue Sample Volume:\n\n\nGiven the limited number of normal tissue samples in the TCGA database, it’s essential to source additional normal tissue samples from other databases like GTEx, for a more comprehensive and accurate cancer research.\n\n\nComplexity of Data Integration:\n\n\nThe joint analysis of the TCGA and GTEx databases entails data integration and standardization, requiring a meticulous and scientific approach to ensure the efficacy of data integration and the accuracy of analysis results. This may include data cleansing, standardization, and a unified analysis workflow to ensure that data obtained from different databases can be accurately and effectively combined for analysis."
  },
  {
    "objectID": "Data Source and Introduction.html#ucsc-xena-data-download-pipeline",
    "href": "Data Source and Introduction.html#ucsc-xena-data-download-pipeline",
    "title": "1  Data Source and Introduction",
    "section": "2.1 UCSC Xena Data Download pipeline：",
    "text": "2.1 UCSC Xena Data Download pipeline：\n\n\nLog in to the official website: http://xena.ucsc.edu/\nClick “Launch Xena” to enter the main interface: https://xenabrowser.net/\nClick “DATA SETS” to enter the dataset interface: https://xenabrowser.net/datapages/\nTCGA and GTEX Data Download:\n\nGDC TCGA Breast Cancer (BRCA) (20 datasets)\n\nHTSeq - Counts (n=1,217) GDC Hub\n\ndownload (Download link, copyable)\nID/Gene Mapping (Download link, copyable)\n\nPhenotype (n=1,284) GDC Hub\n\ndownload (Download link, copyable)\n\nsurvival data (n=1,260) GDC Hub\n\ndownload (Download link, copyable)\n\n\nGDC TCGA Melanoma (SKCM) (14 datasets)\n\nHTSeq - Counts (n=472) GDC Hub\n\ndownload (Download link, copyable)\nID/Gene Mapping (Download link, copyable)\n\nPhenotype (n=477) GDC Hub\n\ndownload (Download link, copyable)\n\nsurvival data (n=463) GDC Hub\n\ndownload (Download link, copyable)\n\n\nGTEX\n\nTOIL RSEM expected_count (n=7,845) UCSC Toil RNA-seq Recompute\n\ndownload (Download link, copyable)\nID/Gene Mapping (Download link, copyable)\n\nGTEX phenotype (n=9,783) UCSC Toil RNA-seq Recompute\n\ndownload (Download link, copyable)"
  },
  {
    "objectID": "Data Source and Introduction.html#data-type",
    "href": "Data Source and Introduction.html#data-type",
    "title": "1  Data Source and Introduction",
    "section": "2.2 Data Type",
    "text": "2.2 Data Type\n\n2.2.1 count\nIn the context of RNA-seq data analysis, “Count” is an important concept. It represents the number of times each gene or transcript is measured in an RNA-seq experiment. Typically, these counts are obtained through sequencing machines, which measure the number of fragments associated with each gene or transcript, also known as “reads count” or “fragment count,” which indicates how many times each gene or transcript is covered or mapped in the sequencing data. These count data serve as the starting point for RNA-seq data analysis, providing raw information about the expression of genes or transcripts in different samples.\n\n2.2.1.1 Use Cases:\n\nGene Expression Analysis:\n\n\nCount data can be used to compare the relative expression levels of different genes. By tallying the counts for each gene, we can determine which genes are expressed more or less in various samples, identifying key genes.\n\n\nDifferential Expression Analysis:\n\n\nDifferential expression analysis aims to study changes in gene expression levels between different conditions or groups. In this context, count data is employed to compare gene expression levels under different conditions, often requiring statistical models to identify genes with significant differences.\n\n\nClustering Analysis:\n\n\nCount data can also be used for clustering analysis to identify groups of genes or samples with similar expression patterns. Through clustering analysis, genes with similar expression patterns can be grouped together.\n\n\nGene Annotation:\n\n\nCount data helps determine which genes or transcripts have evidence of measurement in the sequencing data, which is crucial for gene annotation.\n\n\n\n2.2.1.2 Advantages:\n\nIntuitiveness:\n\n\nCount data is obtained directly from RNA-seq experiments, providing an intuitive and straightforward representation of gene expression.\n\n\nFlexibility:\n\n\nCount data is versatile and applicable to various RNA-seq data analysis tasks, including basic gene expression analysis and more complex differential expression analysis.\n\n\n\n2.2.1.3 Disadvantages:\n\nImpact of Sequencing Depth and Gene Length:\n\n\nCount data is influenced by sequencing depth and gene length, necessitating standardization when comparing expression levels between different samples or genes.\n\n\nZero Inflation:\n\n\nFor lowly expressed genes, count data may exhibit zero inflation, where counts are predominantly zero. Specialized statistical methods are required to address this issue.\n\n\nResource-Intensive:\n\n\nHandling raw count data can demand significant computational resources and storage space, particularly for large-scale RNA-seq datasets.\n\nIn summary, count data plays a pivotal role in RNA-seq data analysis but typically requires further standardization and analysis to derive meaningful results. It is suitable for use with RNA-seq data types, particularly for gene expression analysis and differential expression analysis.\n\n\n\n2.2.2 RPKM\nRPKM (Reads Per Kilobase of transcript per Million mapped reads) is a method used for quantifying gene expression. This technique overcomes two major barriers: the differences in sequencing depth between samples and the comparison of genes of different lengths. Below is a deeper analysis of the concept, calculation, and application of RPKM, as well as some of its limitations.\n\n2.2.2.1 Principle and Calculation of RPKM:\n\nPrinciple:\n\n\nThe RPKM method corrects the read data in sequencing experiments, making it unaffected by sequencing depth and gene length differences, thereby allowing for a more accurate comparison of gene expression levels under different conditions.\n\n\nCalculation Formula: \\[\nRPKM = \\frac{10^9 \\times C}{N \\times L}\n\\]\nWhere:\n\n\nC is the read count for a specific gene.\nN is the total number of mapped reads in the sequencing experiment.\nL is the transcript length (gene length in base pairs).\nThe \\(\\boldsymbol{10^9}\\) in the formula is a standardization factor used to adjust the units, making the results more comprehensible.\n\n\n\n2.2.2.2 Application Scenarios:\n\nTranscriptomic Studies:\n\n\nIn transcriptome sequencing (RNA-seq), researchers often use RPKM to quantify gene expression, especially when comparing samples from different species, different tissues, or under different treatment conditions.\n\n\nQuantitative Studies of Gene Expression:\n\n\nRPKM provides a way to standardize gene expression data, allowing data obtained from different experiments or under different conditions to be compared.\n\n\n\n\n2.2.3 Advantages:\n\nCorrection for Gene Length:\n\n\nRPKM takes into account the length of the genes, allowing for a fair comparison of expression levels between long and short genes, resolving the issue of read count bias. - Normalization for Sequencing Depth:\n\n\nBy standardizing the total mapped reads, RPKM allows researchers to compare data from different sequencing experiments.\n\n\n2.2.3.1 Challenges:\n\nBias in Low-Abundance Transcripts:\n\n\nRPKM may overestimate the expression levels for genes with low expression because their expression could be amplified due to statistical fluctuations or limitations in sequencing depth.\n\n\nNo Correction for Technical Variations:\n\n\nRPKM does not correct for technical biases that may occur during library preparation or sequencing, and additional statistical methods may be required to correct these biases.\n\n\nNot Suitable for Transcript Diversity:\n\n\nIf a gene has multiple isoforms, RPKM calculation may not reflect the true expression status of each transcript variant.\n\nTherefore, while RPKM is an important tool in RNA-seq data analysis, researchers need to consider its limitations when using it and consider employing other complementary methods, such as TPM (Transcripts Per Million) or more advanced quantification methods like model-based methods (e.g., DESeq2 or edgeR), which can handle differences and variations in data under different samples and conditions more effectively.\n\n\n\n2.2.4 FPKM\nFPKM (Fragments Per Kilobase of transcript, per Million mapped fragments) is an enhancement over RPKM, accounting for the number of sequenced fragments instead of just read counts. This modification is crucial, particularly when a single read might encompass multiple fragments due to events like “split reads” or “spliced reads” in sequencing data.\n\n2.2.4.1 FPKM Calculation:\n\nThe formula for calculating FPKM is: \\[\nFPKM = \\frac{\\text{Number of fragments mapped to a gene}}{(\\frac{\\text{Total mapped fragments}}{1,000,000}) \\times (\\frac{\\text{Length of the gene}}{1,000})}\n\\]\nWhere:\n\n\n“Fragment count of gene” refers to the number of fragments for a specific gene.\n“Gene length in kilobases” is the measurement of the gene length, using kilobases (thousands of base pairs) as the unit.\n“Total mapped fragments in millions” represents the summation of all fragments aligned with the reference genome, expressed in millions.\n\n\n\n2.2.4.2 Suitability:\nFPKM is utilized in situations similar to RPKM, primarily in RNA-seq data analysis, especially when comparing expression levels across genes or between different samples. FPKM allows a more equitable comparison of gene expression by taking into account both gene length and sequencing depth.\n\n\n2.2.4.3 Advantages:\n\nRecognizes gene length, making it suitable for comparing expression levels across genes of diverse lengths.By normalizing per million mapped fragments, FPKM enables more fair comparisons between different samples.\n\n\n\n2.2.4.4 Disadvantages:\n\nIt may misrepresent low-abundance genes, as the total number of mapped fragments in the denominator could lead to inflated FPKM values for these genes.It doesn’t account for potential biases, such as discrepancies in sequencing depth, necessitating further adjustments.\n\n\n\n2.2.4.5 RPKM vs. FPKM:\nThough they appear similar, the necessity for FPKM in addition to RPKM comes from their unique applications and methods of calculation.\n\nDifferences:\nCalculation Basis:\n\n\nWhile RPKM normalizes gene expression levels based on read counts, gene length, and total reads, FPKM does so using fragment counts. This approach is essential for instances where a single read may correspond to multiple fragments.\n\n\nReads vs. Fragments:\n\n\nRPKM, the earlier introduced method, accounts for read counts. FPKM, an advancement over RPKM, considers fragment counts, which is vital for scenarios involving “split reads” or “spliced reads.”\n\n\nNomenclature:\n\n\nRPKM (Reads Per Kilobase of transcript, per Million mapped reads) emphasizes normalization using read counts, whereas FPKM highlights normalization based on fragment counts.\n\n\n\n2.2.4.6 Why FPKM?\n\n\nRPKM is tailored for single-end sequencing, whereas FPKM is more applicable for paired-end RNA-seq because it takes into account that two reads can map to a single fragment, thus avoiding duplication in counting.\nFPKM is generally preferred over RPKM as it offers more precision by including fragment counts, which is particularly important for genes undergoing splicing events.\n\n\n\n\n2.2.4.7 Choosing Between RPKM and FPKM:\nWhile FPKM is generally a better choice due to its enhanced accuracy, the advent of more modern methods like TPM (Transcripts Per Million) has overshadowed both RPKM and FPKM in RNA-seq data analysis. TPM normalizes expression levels based on every million mapped transcripts and is not influenced by gene length or sequencing depth, providing a more reliable reflection of relative expression levels.\n\n\n\n2.2.5 TPM\nTPM (Transcripts Per Million) is an accurate method for measuring gene expression levels, capable of eliminating the effects of sequencing depth and transcript length differences between various samples.\nTo calculate TPM, we first need to obtain the normalized read counts for each transcript, which are then standardized per million transcripts. The steps are as follows:\nCalculate the read counts for each transcript, considering the effective length of the transcript (i.e., excluding the length of non-coding regions).\nCompute the ratio of each transcript’s read count to its effective length, then multiply this ratio by a normalization factor to enable comparisons between samples.\n\n2.2.5.1 TPM calculation formula is as follows:\n\\[\nTPM_i = \\left( \\frac{x_i}{l_i} \\right) \\left( \\frac{1}{\\sum_j \\frac{x_j}{l_j}} \\right) 10^6\n\\]\n\n\n2.2.5.2 Where:\n\n\\(\\boldsymbol{x_i}\\) represents the read count of a specific transcript.\n\\(\\boldsymbol{l_i}\\) is the effective length of the transcript (in kilobases).\nSubscripts \\(\\boldsymbol{i}\\) and \\(\\boldsymbol{j}\\) denote different transcripts.\n\\(\\boldsymbol{\\sum_j \\frac{x_j}{l_j}}\\) is the sum of all transcript read counts ratios to their effective lengths.\n\n\n\n2.2.5.3 The main differences between TPM and RPKM/FPKM:\n\nCalculation method:\n\n\nWith TPM, the expression level of each transcript is first normalized to the length of the transcript, then standardized to the total transcript expression in the sample. In contrast, RPKM/FPKM directly utilize the read counts of transcripts or fragments, normalizing based on transcript length and total read counts.\n\n\nNormalization target:\n\n\nAfter calculating TPM, the total of the TPM values for all transcripts will be 1,000,000, facilitating comparisons between different samples. The total for RPKM/FPKM is not consistent, as they are based on read counts.\n\n\nImpact of gene length:\n\n\nTPM normalizes the effect of gene length on expression level calculations by considering transcript length, making comparisons between transcripts of varying lengths more equitable. Although RPKM/FPKM also standardize based on length, they do not entirely eliminate the influence of gene length when comparing between samples.\n\n\n\n2.2.5.4 The preference for TPM is primarily based on the following reasons:\n\nAccuracy:\n\n\nTPM more accurately reflects the actual expression levels of transcripts, without biases due to differences in sequencing depth or gene length between samples.\n\n\nComparability:\n\n\nTPM values, after standardization, allow for direct comparisons of transcript expression levels between different samples and experiments.\n\n\nUniversality:\n\n\nThe TPM calculation method is suitable for various transcriptomic studies, including gene expression quantification, differential expression analysis, and more.\n\nIn summary, while RPKM/FPKM remain useful in certain contexts, TPM is more widely accepted and utilized in modern transcriptomic analyses due to its accuracy and comparability.\n\n\n\n2.2.6 CPM\nCPM (Counts Per Million) is another prevalent normalization method for assessing gene or transcript expression levels, alongside other techniques such as RPKM, FPKM, and TPM. The principle behind CPM is to standardize the number of times a gene or transcript is measured (counts), allowing for the comparison of expression levels across different genes or transcripts while accounting for the total number of measurements. By normalizing each gene or transcript’s expression levels to per million measurements, CPM minimizes the impact of sequencing depth and differences between samples.\nThe calculation formula for CPM is as follows: \\[\nCPM = \\frac{\\text{Counts of gene/transcript} \\times 10^6}{\\sum (\\text{Counts of all genes/transcripts})}\n\\]\n\n2.2.6.1 Where:\n\n“Counts of gene/transcript” refers to the number of measurements (counts) for a particular gene or transcript.\n“\\(\\boldsymbol{\\sum}\\)” represents the summation symbol, calculating the total counts for all genes or transcripts.\n\n\n\n2.2.6.2 CPM is applicable for:\n\nComparing relative expression levels of different genes or transcripts.\nComparing gene expression levels between samples, particularly when considering variations in sequencing depth and among samples.\n\n\n\n2.2.6.3 Advantages:\n\n\nCPM is a straightforward and intuitive method of normalization, easy to understand and compute.\nIt’s suitable for comparisons between different samples, enabling a fairer assessment of gene expression differences.\n\n\n\n\n2.2.6.4 Disadvantages:\n\n\nCPM may encounter issues with lowly expressed genes because the denominator includes the total counts. For these genes, a smaller denominator might inflate the CPM value, leading to inaccuracies.\nCPM does not account for factors like gene length and sequencing depth, potentially compromising accuracy in certain scenarios.\n\n\nDespite its limitations, CPM stands as a relatively rapid and simplistic normalization technique, fitting for basic RNA-seq data analysis tasks. For instance, during differential analysis, it’s sometimes necessary to eliminate low-expression genes. Here, CPM calculations become relevant, aiding in the exclusion of these genes based on set criteria. For straightforward adjustments of counts, one can utilize the cpm() function within the edgeR package.\n\n\n\n2.2.7 RSEM\nHere, we delve further into the core principles and computational methods of RSEM (RNA-Seq by Expectation-Maximization). RSEM stands as a powerful tool for accurately estimating the expression levels of genes or transcripts. It is particularly proficient in handling RNA sequencing data, resolving issues of multimapping and accounting for sequence mismatches. At the heart of RSEM is the Expectation-Maximization (EM) algorithm, a statistical technique used for estimating the parameters of a probability model, especially in cases where the model involves latent variables that are not directly observable. By maximizing the log-likelihood function of the data, RSEM enables more accurate inference of the relative abundance of transcripts.\n\n2.2.7.1 The computation process of RSEM:\n\n1.E-step (Expectation):\n\n\nUtilizing the current estimates of the parameters, RSEM calculates the expected value of each transcript being sequenced. This step takes into account the sequencing error rate and the multimapping of reads.\n\n\n2.M-step (Maximization):\n\n\nBased on the data generated in the E-step, RSEM updates the parameter estimates to maximize the likelihood of the read data.\n\nGiven the complexity of the calculations and models involved in RSEM, specialized software tools are usually employed for execution. These tools have built-in necessary mathematical models and numerical optimization methods, relieving the user from delving into the intricate details behind them.\n\n\n2.2.7.2 Scope of Application:\n\n\nHigh-precision estimation of transcript abundance, suitable for complex samples with a large number of genes and transcripts, and high heterogeneity.\nQuantitative comparison of gene expression differences between different samples and studying variations between isoforms of transcripts.\n\n\n\n\n2.2.7.3 Advantages:\n\n\nRSEM accurately handles multimapped reads, offering a more precise expression level estimate compared to traditional methods.\nThrough sophisticated statistical models, RSEM fully considers the uncertainties of reads and potential errors during the sequencing process.\n\n\n\n\n2.2.7.4 Disadvantages:\n\n\nThe RSEM calculation process is resource-intensive and time-consuming, potentially unsuitable for large-scale samples or rapid analysis workflows.\nIt requires high-quality data input and is sensitive to low-quality or highly biased data.\n\n\nIn practice, there’s an essential distinction between RSEM’s “expected_count” and the conventional raw “count.” The “expected_count” in RSEM is a statistically estimated floating-point number considering the uncertainties of read assignment, while traditional “count” is merely an integer read count based on raw sequencing data. This difference enables RSEM to provide more in-depth and accurate information on transcript abundance in certain scenarios."
  },
  {
    "objectID": "Data Source and Introduction.html#tcga-count-data",
    "href": "Data Source and Introduction.html#tcga-count-data",
    "title": "1  Data Source and Introduction",
    "section": "4.1 TCGA Count Data",
    "text": "4.1 TCGA Count Data\n\n\nSTAR Alignment and Counting: The primary counting data in TCGA is generated by STAR, which provides gene ID, unstranded, and stranded counts data following alignment.\nMulti-dimensional Data Collection: TCGA collects many types of data including molecular characterization data for over 20,000 tumor and normal samples, contributing to the count data."
  },
  {
    "objectID": "Data Source and Introduction.html#gtex-expected-count-data",
    "href": "Data Source and Introduction.html#gtex-expected-count-data",
    "title": "1  Data Source and Introduction",
    "section": "4.2 GTEx Expected Count Data",
    "text": "4.2 GTEx Expected Count Data\n\n\nPipeline Components for RNA-seq Alignment, Quantification: GTEx utilizes a pipeline for RNA-seq alignment, quantification, and quality control among other analysis tasks, which lead to the generation of expected count data.\nAlignment and Expression Quantification: GTEx RNA-seq pipeline involves alignment (STAR), QC (RNA-SeQC), and expression quantification (RSEM & RNA-SeQC) for generating expected count data.\n76-base, Paired-end Illumina TruSeq RNA Protocol: GTEx uses a 76-base, paired-end Illumina TruSeq RNA protocol, averaging around 50 million aligned reads per sample for RNA sequencing.\n\n\n:::"
  },
  {
    "objectID": "Extract Rawdata from TCGA and GTEX.html#library-package",
    "href": "Extract Rawdata from TCGA and GTEX.html#library-package",
    "title": "2  Extract Rawdata from TCGA and GTEX",
    "section": "2.1 Library Package",
    "text": "2.1 Library Package\n\nlibrary(TransProR)\n\n            _______ _____            _   _  _____ _____  _____   ____  _____  \n           |__   __|  __ \\     /\\   | \\ | |/ ____|  __ \\|  __ \\ / __ \\|  __ \\ \n              | |  | |__) |   /  \\  |  \\| | (___ | |__) | |__) | |  | | |__) |\n              | |  |  _  /   / /\\ \\ | . ` |\\___ \\|  ___/|  _  /| |  | |  _  / \n              | |  | | \\ \\  / ____ \\| |\\  |____) | |    | | \\ \\| |__| | | \\ \\ \n              |_|  |_|  \\_\\/_/    \\_\\_| \\_|_____/|_|    |_|  \\_\\\\____/|_|  \\_\\\n                                                                   \n                                                                   \n                                                            \n                                                            \n         _    _ _______       _____ _____ _______     _________     _______ _____ _____ \n    /\\  | |  | |__   __|     / ____/ ____/ ____\\ \\   / /  __ \\ \\   / / ____/ ____/ ____|\n   /  \\ | |  | |  | |       | (___| (___| (___  \\ \\_/ /| |  | \\ \\_/ / (___| (___| (___  \n  / /\\ \\| |  | |  | |        \\___ \\\\___ \\\\___ \\  \\   / | |  | |\\   / \\___ \\\\___ \\\\___ \\ \n / ____ \\ |__| |  | |        ____) |___) |___) |  | |  | |__| | | |  ____) |___) |___) |\n/_/    \\_\\____/   |_|       |_____/_____/_____/   |_|  |_____/  |_| |_____/_____/_____/ \n                                                                                        \n                                                                                        \n\nprint(paste(\"TransProR version:\", packageVersion(\"TransProR\")))\n\n[1] \"TransProR version: 0.0.1\""
  },
  {
    "objectID": "Extract Rawdata from TCGA and GTEX.html#seek-gtex-organ",
    "href": "Extract Rawdata from TCGA and GTEX.html#seek-gtex-organ",
    "title": "2  Extract Rawdata from TCGA and GTEX",
    "section": "2.2 Seek Gtex Organ",
    "text": "2.2 Seek Gtex Organ\n\nSeekGtexOrgan &lt;- seek_gtex_organ(path = \"../test_TransProR/download_data/GTEX_phenotype\")\nprint(SeekGtexOrgan)\n\n\n &lt;not provided&gt;  Adipose Tissue   Adrenal Gland         Bladder           Blood \n              5             621             161              13             595 \n   Blood Vessel     Bone Marrow           Brain          Breast    Cervix Uteri \n            753             102            1426             221              11 \n          Colon       Esophagus  Fallopian Tube           Heart          Kidney \n            384             805               7             493              38 \n          Liver            Lung          Muscle           Nerve           Ovary \n            141             381             478             335             112 \n       Pancreas       Pituitary        Prostate  Salivary Gland            Skin \n            203             126             122              71             977 \nSmall Intestine          Spleen         Stomach          Testis         Thyroid \n            106             121             209             208             366 \n         Uterus          Vagina \n             93              99"
  },
  {
    "objectID": "Extract Rawdata from TCGA and GTEX.html#get-tcga-exp",
    "href": "Extract Rawdata from TCGA and GTEX.html#get-tcga-exp",
    "title": "2  Extract Rawdata from TCGA and GTEX",
    "section": "2.3 Get Tcga Exp",
    "text": "2.3 Get Tcga Exp\n\n2.3.1 SKCM-Skin-TCGA\n\nSKCM_exp &lt;- get_tcga_exp(\n  counts_file_path = \"../test_TransProR/download_data/TCGA-SKCM.htseq_counts.tsv\", \n  gene_probes_file_path = \"../test_TransProR/download_data/TCGA_gencode.v22.annotation.gene.probeMap\",\n  phenotype_file_path = \"../test_TransProR/download_data/TCGA-skcm.GDC_phenotype.tsv\", \n  output_file_path = '../test_TransProR/generated_data1/SKCM_Skin_TCGA_exp.rds'\n)\n\nNumber of 'Primary Tumor' or 'Metastatic' samples:  474 \nNumber of 'normal' samples: 3 \n\nhead(SKCM_exp[[\"tumor_tcga_data\"]])[1:5, 1:5]\n\n         TCGA-D9-A4Z2-01A TCGA-ER-A2NH-06A TCGA-BF-A5EO-01A TCGA-D9-A6EA-06A\nTSPAN6          12.107871        10.504819        10.055282        10.642052\nTNMD             0.000000         1.584963         0.000000         1.584963\nDPM1            10.992938        10.378295         8.945444        11.236014\nSCYL3           10.126704         9.121534         7.930737         9.562242\nC1orf112         9.861087         8.629357         7.918863         9.221587\n         TCGA-D9-A4Z3-01A\nTSPAN6          10.516685\nTNMD             0.000000\nDPM1             9.981567\nSCYL3            8.754888\nC1orf112         8.854868\n\nhead(SKCM_exp[[\"normal_tcga_data\"]], n = 10) # Because there is only one column.\n\n         TCGA-GN-A4U8-11A\nTSPAN6           8.344296\nTNMD             1.000000\nDPM1            11.171177\nSCYL3           10.159871\nC1orf112         9.250298\nFGR             11.024447\nCFH             11.387479\nFUCA2           11.595724\nGCLC            10.848623\nNFYA            11.457381\n\n\n\n\n2.3.2 BRCA-Breast-TCGA\n\nBRCA_exp &lt;- get_tcga_exp(\n  counts_file_path = \"../test_TransProR/download_data/TCGA-BRCA.htseq_counts.tsv\", \n  gene_probes_file_path = \"../test_TransProR/download_data/TCGA_gencode.v22.annotation.gene.probeMap\",\n  phenotype_file_path = \"../test_TransProR/download_data/TCGA-BRCA.GDC_phenotype.tsv\", \n  output_file_path = '../test_TransProR/generated_data1/BRCA_Breast_TCGA_exp.rds'\n)\n\nNumber of 'Primary Tumor' or 'Metastatic' samples:  1121 \nNumber of 'normal' samples: 162 \n\nhead(BRCA_exp[[\"tumor_tcga_data\"]])[1:5, 1:5]\n\n         TCGA-A2-A0CY-01A TCGA-B6-A40B-01A TCGA-AO-A0J8-01A TCGA-A8-A08J-01A\nTSPAN6           11.62890        11.924813        11.921469        11.209453\nTNMD              0.00000         5.392317         5.087463         3.000000\nDPM1             10.29921        11.054604        11.068106        12.284246\nSCYL3            10.13443        11.045077        12.086800        11.473706\nC1orf112          8.80090         9.413628        10.357552         8.988685\n         TCGA-E2-A14N-01A\nTSPAN6          11.400346\nTNMD             3.584963\nDPM1            11.253257\nSCYL3            9.873444\nC1orf112        10.255029\n\nhead(BRCA_exp[[\"normal_tcga_data\"]])[1:5, 1:5]\n\n         TCGA-BH-A1F0-11B TCGA-BH-A0BZ-11A TCGA-AC-A2FM-11B TCGA-BH-A0HA-11A\nTSPAN6          12.782998        12.245256        11.983706        12.296916\nTNMD             9.766529        12.024101         8.693487         7.882643\nDPM1            11.373409        10.696098        10.894818        10.788718\nSCYL3           10.772315        10.560333         9.539159        11.275543\nC1orf112         8.700440         8.299208         7.721099         8.724514\n         TCGA-BH-A1FU-11A\nTSPAN6          11.288289\nTNMD             6.942515\nDPM1            10.023754\nSCYL3           10.309476\nC1orf112         8.290019\n\n\n\n\n2.3.3 LGG-Brain-TCGA\n\nLGG_exp &lt;- get_tcga_exp(\n  counts_file_path = \"../test_TransProR/download_data/TCGA-LGG.htseq_counts.tsv\", \n  gene_probes_file_path = \"../test_TransProR/download_data/TCGA_gencode.v22.annotation.gene.probeMap\",\n  phenotype_file_path = \"../test_TransProR/download_data/TCGA-LGG.GDC_phenotype.tsv\", \n  output_file_path = '../test_TransProR/generated_data1/LGG_Brain_TCGA_exp.rds'\n)\n\nNumber of 'Primary Tumor' or 'Metastatic' samples:  516 \nNumber of 'normal' samples: 2 \n\nhead(LGG_exp[[\"tumor_tcga_data\"]])[1:5, 1:5]\n\n         TCGA-VM-A8C8-01A TCGA-VV-A829-01A TCGA-DH-5141-01A TCGA-RY-A840-01A\nTSPAN6          10.797662        11.439311        11.856815        11.157978\nTNMD             0.000000         1.584963         4.247928         1.000000\nDPM1            10.036174        10.108524        10.130571         9.896332\nSCYL3            8.810572         9.566054         9.030667         9.147205\nC1orf112         7.607330         8.118941         6.845490         7.285402\n         TCGA-DB-A64V-01A\nTSPAN6          11.401946\nTNMD             2.000000\nDPM1            10.193525\nSCYL3            9.105909\nC1orf112         7.584963\n\nLGG_exp[[\"normal_tcga_data\"]]\n\ndata frame with 0 columns and 58387 rows\n\n\n\n\n2.3.4 THCA-Thyroid-TCGA\n\nTHCA_exp &lt;- get_tcga_exp(\n  counts_file_path = \"../test_TransProR/download_data/TCGA-THCA.htseq_counts.tsv\", \n  gene_probes_file_path = \"../test_TransProR/download_data/TCGA_gencode.v22.annotation.gene.probeMap\",\n  phenotype_file_path = \"../test_TransProR/download_data/TCGA-THCA.GDC_phenotype.tsv\", \n  output_file_path = '../test_TransProR/generated_data1/THCA_Thyroid_TCGA_exp.rds'\n)\n\nNumber of 'Primary Tumor' or 'Metastatic' samples:  515 \nNumber of 'normal' samples: 100 \n\nhead(THCA_exp[[\"tumor_tcga_data\"]])[1:5, 1:5]\n\n         TCGA-BJ-A28W-01A TCGA-EM-A1CT-01A TCGA-EL-A4JZ-01A TCGA-EL-A3CT-01A\nTSPAN6          10.029287        10.314017        11.273796        12.054943\nTNMD             2.000000         0.000000         1.000000         3.000000\nDPM1            10.148477         9.485829        10.704768        10.770664\nSCYL3            8.820179         9.287712         9.594325         9.092757\nC1orf112         6.954196         7.383704         7.820179         7.629357\n         TCGA-ET-A2MY-01A\nTSPAN6          11.271463\nTNMD             0.000000\nDPM1            10.754052\nSCYL3           10.034799\nC1orf112         7.912889\n\nhead(THCA_exp[[\"normal_tcga_data\"]])[1:5, 1:5]\n\n         TCGA-BJ-A28W-11A TCGA-EM-A1CT-11A TCGA-EL-A3MX-11A TCGA-DO-A1JZ-11A\nTSPAN6           9.946906        12.236612        12.162706        11.880349\nTNMD             1.000000         3.000000         3.459432         2.807355\nDPM1             9.923327        11.420487        11.103943        10.531381\nSCYL3            8.005625        10.169925        10.740624         9.812177\nC1orf112         5.554589         7.768184         8.022368         6.977280\n         TCGA-EL-A3TA-11A\nTSPAN6          12.423116\nTNMD             3.169925\nDPM1            11.236612\nSCYL3           10.586840\nC1orf112         7.800900"
  },
  {
    "objectID": "Extract Rawdata from TCGA and GTEX.html#get-gtex-exp",
    "href": "Extract Rawdata from TCGA and GTEX.html#get-gtex-exp",
    "title": "2  Extract Rawdata from TCGA and GTEX",
    "section": "2.4 Get Gtex Exp",
    "text": "2.4 Get Gtex Exp\n\n2.4.1 Skin-SKCM-Gtex\n\nSkin_SKCM_gtex &lt;- get_gtex_exp(\n  organ_specific = \"Skin\",\n  file_path = \"../test_TransProR/download_data/gtex_gene_expected_count\", \n  probe_map_path = \"../test_TransProR/download_data/gtex_probeMap_gencode.v23.annotation.gene.probemap\",\n  pheno_path = \"../test_TransProR/download_data/GTEX_phenotype\", \n  output_path = '../test_TransProR/generated_data1/Skin_SKCM_Gtex.rds'\n)\n\nNumber of samples for Skin : 977 \n\nhead(Skin_SKCM_gtex)[1:5, 1:5]\n\n         GTEX-111CU-1126-SM-5EGIM GTEX-111CU-1926-SM-5GZYZ\nTSPAN6                     7.9715                   9.6935\nTNMD                       3.3219                   6.4757\nDPM1                       8.5078                   9.3619\nSCYL3                      8.1741                   9.6454\nC1orf112                   6.1930                   8.0506\n         GTEX-111FC-0126-SM-5N9DL GTEX-111FC-2526-SM-5GZXU\nTSPAN6                     8.0821                   8.8329\nTNMD                       6.7944                   7.4838\nDPM1                       9.6865                   9.0580\nSCYL3                     10.0769                   9.2662\nC1orf112                   7.9006                   7.5869\n         GTEX-111VG-0008-SM-5Q5BG\nTSPAN6                     8.7649\nTNMD                       0.0000\nDPM1                      10.0126\nSCYL3                      7.9960\nC1orf112                   8.1122\n\n\n\n\n2.4.2 Brain-LGG-Gtex\n\nBrain_LGG_gtex &lt;- get_gtex_exp(\n  organ_specific = \"Brain\",\n  file_path = \"../test_TransProR/download_data/gtex_gene_expected_count\", \n  probe_map_path = \"../test_TransProR/download_data/gtex_probeMap_gencode.v23.annotation.gene.probemap\",\n  pheno_path = \"../test_TransProR/download_data/GTEX_phenotype\", \n  output_path = '../test_TransProR/generated_data1/Brain_LGG_Gtex.rds'\n)\n\nNumber of samples for Brain : 1426 \n\nhead(Brain_LGG_gtex)[1:5, 1:5]\n\n         GTEX-1117F-3226-SM-5N9CT GTEX-111FC-3126-SM-5GZZ2\nTSPAN6                     9.3354                   7.9189\nTNMD                       2.0000                   2.5850\nDPM1                       8.6475                   9.0471\nSCYL3                      7.5673                   8.7225\nC1orf112                   6.8245                   7.3181\n         GTEX-111FC-3326-SM-5GZYV GTEX-1128S-2726-SM-5H12C\nTSPAN6                     6.9307                   8.0389\nTNMD                       0.0000                   2.0000\nDPM1                       8.4757                   8.8392\nSCYL3                      8.6133                   8.0100\nC1orf112                   8.2355                   6.5732\n         GTEX-1128S-2826-SM-5N9DI\nTSPAN6                     5.8580\nTNMD                       0.0000\nDPM1                       8.2574\nSCYL3                      7.7710\nC1orf112                   7.9459\n\n\n\n\n2.4.3 Breast-BRCA-Gtex\n\nBreast_BRCA_gtex &lt;- get_gtex_exp(\n  organ_specific = \"Breast\",\n  file_path = \"../test_TransProR/download_data/gtex_gene_expected_count\", \n  probe_map_path = \"../test_TransProR/download_data/gtex_probeMap_gencode.v23.annotation.gene.probemap\",\n  pheno_path = \"../test_TransProR/download_data/GTEX_phenotype\", \n  output_path = '../test_TransProR/generated_data1/Breast_BRCA_Gtex.rds'\n)\n\nNumber of samples for Breast : 221 \n\nhead(Breast_BRCA_gtex)[1:5, 1:5]\n\n         GTEX-1117F-2826-SM-5GZXL GTEX-111YS-1926-SM-5GICC\nTSPAN6                    11.1799                  11.3761\nTNMD                       9.7465                   7.2854\nDPM1                       9.3015                   9.7879\nSCYL3                      9.0717                  10.1061\nC1orf112                   7.8004                   8.3124\n         GTEX-117XS-1926-SM-5GICO GTEX-117YX-1426-SM-5H12H\nTSPAN6                    11.9826                  10.2842\nTNMD                      10.3805                   6.9307\nDPM1                       9.9099                   9.4367\nSCYL3                      9.4578                   8.9093\nC1orf112                   6.9977                   7.7427\n         GTEX-1192X-2326-SM-5987X\nTSPAN6                    11.0505\nTNMD                       8.1849\nDPM1                       9.9614\nSCYL3                     10.0083\nC1orf112                   8.7283\n\n\n\n\n2.4.4 Thyroid-THCA-Gtex\n\nThyroid_THCA_gtex &lt;- get_gtex_exp(\n  organ_specific = \"Thyroid\",\n  file_path = \"../test_TransProR/download_data/gtex_gene_expected_count\", \n  probe_map_path = \"../test_TransProR/download_data/gtex_probeMap_gencode.v23.annotation.gene.probemap\",\n  pheno_path = \"../test_TransProR/download_data/GTEX_phenotype\", \n  output_path = '../test_TransProR/generated_data1/Thyroid_THCA_Gtex.rds'\n)\n\nNumber of samples for Thyroid : 366 \n\nhead(Thyroid_THCA_gtex)[1:5, 1:5]\n\n         GTEX-111CU-0226-SM-5GZXC GTEX-111FC-1026-SM-5GZX1\nTSPAN6                    10.0553                  10.0701\nTNMD                       2.0000                   4.3923\nDPM1                      10.0993                   9.5774\nSCYL3                      9.6425                   9.5058\nC1orf112                   7.4736                   7.6001\n         GTEX-111VG-0526-SM-5N9BW GTEX-111YS-0726-SM-5GZY8\nTSPAN6                     8.9658                   9.1674\nTNMD                       2.0000                   3.0000\nDPM1                       9.2668                   9.3859\nSCYL3                      8.9591                   9.2350\nC1orf112                   7.6817                   7.5346\n         GTEX-1122O-0226-SM-5N9DA\nTSPAN6                     9.4533\nTNMD                       2.8074\nDPM1                       9.2668\nSCYL3                      9.3993\nC1orf112                   7.1872"
  },
  {
    "objectID": "Remove Batch Effect.html#different-tumor-types-in-tcga",
    "href": "Remove Batch Effect.html#different-tumor-types-in-tcga",
    "title": "3  Remove Batch Effect",
    "section": "3.1 Different tumor types in TCGA",
    "text": "3.1 Different tumor types in TCGA\nPlease note: The TumorHistologicalTypes/NormalHistologicalTypes classifications are specific to the data in the TCGA database.\n\n3.1.1 SKCM_combat_count\n\nSKCM_combat_count &lt;- combat_tumor(\n    tumor_data_path = \"../test_TransProR/generated_data1/SKCM_Skin_TCGA_exp_tumor.rds\", \n    CombatTumor_output_path = \"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\",\n    auto_mode = T,\n    default_input = \"01,06\"\n)\n\nTumorHistologicalTypes\n 01  06  07 \n103 367   1 \nFound 2 batches\nUsing null model in ComBat-seq.\nAdjusting for 0 covariate(s) or covariate level(s)\nEstimating dispersions\nFitting the GLM model\nShrinkage off - using GLM estimates for parameters\nAdjusting the data\n\nhead(SKCM_combat_count)[1:5, 1:5]\n\n         TCGA-D9-A4Z2-01A TCGA-ER-A2NH-06A TCGA-BF-A5EO-01A TCGA-D9-A6EA-06A\nTSPAN6               5707             1447             1049             1636\nTNMD                    0                2                0                2\nDPM1                 2201             1296              624             2482\nSCYL3                1261              524              307              714\nC1orf112             1107              373              295              564\n         TCGA-D9-A4Z3-01A\nTSPAN6               1511\nTNMD                    0\nDPM1                 1180\nSCYL3                 522\nC1orf112              557\n\n\n\n\n3.1.2 BRCA_combat_count\n\nBRCA_combat_count &lt;- combat_tumor(\n    tumor_data_path = \"../test_TransProR/generated_data1/BRCA_Breast_TCGA_exp_tumor.rds\", \n    CombatTumor_output_path = \"../test_TransProR/generated_data1/removebatch_BRCA_Breast_TCGA_exp_tumor.rds\",\n    auto_mode = T,\n    default_input = \"01\"\n)\n\nTumorHistologicalTypes\n  01   06 \n1097    7 \n\nhead(BRCA_combat_count)[1:5, 1:5]\n\n         TCGA-A2-A0CY-01A TCGA-B6-A40B-01A TCGA-AO-A0J8-01A TCGA-A8-A08J-01A\nTSPAN6               3166             3886             3878             2366\nTNMD                    0               41               32                7\nDPM1                 1259             2126             2146             4987\nSCYL3                1123             2112             4348             2843\nC1orf112              445              681             1311              506\n         TCGA-E2-A14N-01A\nTSPAN6               2701\nTNMD                   11\nDPM1                 2439\nSCYL3                 936\nC1orf112             1221\n\n\n\n\n3.1.3 LGG_combat_count\n\nLGG_combat_count &lt;- combat_tumor(\n    tumor_data_path = \"../test_TransProR/generated_data1/LGG_Brain_TCGA_exp_tumor.rds\", \n    CombatTumor_output_path = \"../test_TransProR/generated_data1/removebatch_LGG_Brain_TCGA_exp_tumor.rds\",\n    auto_mode = T,\n    default_input = \"01\"\n)\n\nTumorHistologicalTypes\n 01 \n511 \n\nhead(LGG_combat_count)[1:5, 1:5]\n\n         TCGA-VM-A8C8-01A TCGA-VV-A829-01A TCGA-DH-5141-01A TCGA-RY-A840-01A\nTSPAN6               1779             2776             3708             2284\nTNMD                    0                2               17                1\nDPM1                 1049             1102             1119              951\nSCYL3                 447              757              522              565\nC1orf112              193              276              113              155\n         TCGA-DB-A64V-01A\nTSPAN6               2704\nTNMD                    3\nDPM1                 1170\nSCYL3                 550\nC1orf112              191\n\n\n\n\n3.1.4 THCA_combat_count\n\nTHCA_combat_count&lt;-combat_tumor(\n    tumor_data_path = \"../test_TransProR/generated_data1/THCA_Thyroid_TCGA_exp_tumor.rds\", \n    CombatTumor_output_path = \"../test_TransProR/generated_data1/removebatch_THCA_Thyroid_TCGA_exp_tumor.rds\",\n    auto_mode = T,\n    default_input = \"01\"\n)\n\nTumorHistologicalTypes\n 01  06 \n502   8 \n\nhead(THCA_combat_count)[1:5, 1:5]\n\n         TCGA-BJ-A28W-01A TCGA-EM-A1CT-01A TCGA-EL-A4JZ-01A TCGA-EL-A3CT-01A\nTSPAN6               1044             1271             2474             4254\nTNMD                    3                0                1                7\nDPM1                 1134              715             1668             1746\nSCYL3                 451              623              772              545\nC1orf112              122              165              225              196\n         TCGA-ET-A2MY-01A\nTSPAN6               2471\nTNMD                    0\nDPM1                 1726\nSCYL3                1048\nC1orf112              240"
  },
  {
    "objectID": "Remove Batch Effect.html#gtex-and-tgcas-normal-tissue",
    "href": "Remove Batch Effect.html#gtex-and-tgcas-normal-tissue",
    "title": "3  Remove Batch Effect",
    "section": "3.2 GTEX and TGCA’s normal tissue",
    "text": "3.2 GTEX and TGCA’s normal tissue\n\n3.2.1 SKCM_Skin_Combat_Normal_TCGA_GTEX_count\n\nSKCM_Skin_Combat_Normal_TCGA_GTEX_count &lt;- Combat_Normal(\n    TCGA_normal_data_path = \"../test_TransProR/generated_data1/SKCM_Skin_TCGA_exp_normal.rds\", \n    gtex_data_path = '../test_TransProR/generated_data1/Skin_SKCM_Gtex.rds', \n    CombatNormal_output_path = '../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds',\n    auto_mode = T,\n    default_input = \"skip\"\n)\n\nNormalHistologicalTypes\n11 \n 1 \n\nhead(SKCM_Skin_Combat_Normal_TCGA_GTEX_count)[1:5, 1:5]\n\n         GTEX-111CU-1126-SM-5EGIM GTEX-111CU-1926-SM-5GZYZ\nTSPAN6                        249                      827\nTNMD                            8                       87\nDPM1                          363                      656\nSCYL3                         287                      799\nC1orf112                       72                      264\n         GTEX-111FC-0126-SM-5N9DL GTEX-111FC-2526-SM-5GZXU\nTSPAN6                        269                      455\nTNMD                          109                      177\nDPM1                          822                      532\nSCYL3                        1079                      614\nC1orf112                      237                      191\n         GTEX-111VG-0008-SM-5Q5BG\nTSPAN6                        434\nTNMD                            0\nDPM1                         1031\nSCYL3                         254\nC1orf112                      275\n\n\n\n\n3.2.2 BRCA_Breast_Combat_Normal_TCGA_GTEX_count\n\nBRCA_Breast_Combat_Normal_TCGA_GTEX_count &lt;- Combat_Normal(\n    TCGA_normal_data_path = \"../test_TransProR/generated_data1/BRCA_Breast_TCGA_exp_normal.rds\", \n    gtex_data_path = '../test_TransProR/generated_data1/Breast_BRCA_Gtex.rds', \n    CombatNormal_output_path = '../test_TransProR/generated_data1/removebatch_BRCA_Breast_Normal_TCGA_GTEX_count.rds',\n    auto_mode = T,\n    default_input = \"11\"\n)\n\nNormalHistologicalTypes\n 11 \n113 \nFound 2 batches\nUsing null model in ComBat-seq.\nAdjusting for 0 covariate(s) or covariate level(s)\nEstimating dispersions\nFitting the GLM model\nShrinkage off - using GLM estimates for parameters\nAdjusting the data\n\nhead(BRCA_Breast_Combat_Normal_TCGA_GTEX_count)[1:5, 1:5]\n\n          TCGA-BH-A1F0-11B TCGA-BH-A0BZ-11A TCGA-AC-A2FM-11B TCGA-BH-A0HA-11A\n5_8S_rRNA                0                0                0                0\n5S_rRNA                  0                0                0                0\n7SK                      0                0                0                0\nA1BG                   113               41              246              175\nA1BG-AS1               250              147              381              239\n          TCGA-BH-A1FU-11A\n5_8S_rRNA                0\n5S_rRNA                  0\n7SK                      0\nA1BG                   147\nA1BG-AS1               150\n\n\n\n\n3.2.3 LGG_Brain_Combat_Normal_TCGA_GTEX_count\n\nLGG_Brain_Combat_Normal_TCGA_GTEX_count &lt;- Combat_Normal(\n    TCGA_normal_data_path = \"../test_TransProR/generated_data1/LGG_Brain_TCGA_exp_normal.rds\", \n    gtex_data_path = '../test_TransProR/generated_data1/Brain_LGG_Gtex.rds', \n    CombatNormal_output_path = '../test_TransProR/generated_data1/removebatch_LGG_Brain_Normal_TCGA_GTEX_count.rds',\n    auto_mode = T,\n    default_input = \"skip\"\n)\n\n&lt; table of extent 0 &gt;\n\nhead(LGG_Brain_Combat_Normal_TCGA_GTEX_count)[1:5, 1:5]\n\n         GTEX-1117F-3226-SM-5N9CT GTEX-111FC-3126-SM-5GZZ2\nTSPAN6                        645                      241\nTNMD                            3                        5\nDPM1                          400                      527\nSCYL3                         188                      421\nC1orf112                      112                      158\n         GTEX-111FC-3326-SM-5GZYV GTEX-1128S-2726-SM-5H12C\nTSPAN6                        120                      261\nTNMD                            0                        3\nDPM1                          354                      456\nSCYL3                         390                      256\nC1orf112                      300                       94\n         GTEX-1128S-2826-SM-5N9DI\nTSPAN6                         57\nTNMD                            0\nDPM1                          305\nSCYL3                         217\nC1orf112                      245\n\n\n\n\n3.2.4 THCA_Thyroid_Combat_Normal_TCGA_GTEX_count\n\nTHCA_Thyroid_Combat_Normal_TCGA_GTEX_count &lt;- Combat_Normal(\n    TCGA_normal_data_path = \"../test_TransProR/generated_data1/THCA_Thyroid_TCGA_exp_normal.rds\", \n    gtex_data_path = '../test_TransProR/generated_data1/Thyroid_THCA_Gtex.rds', \n    CombatNormal_output_path = '../test_TransProR/generated_data1/removebatch_THCA_Thyroid_Normal_TCGA_GTEX_count.rds',\n    auto_mode = T,\n    default_input = \"11\"\n)\n\nNormalHistologicalTypes\n11 \n58 \nFound 2 batches\nUsing null model in ComBat-seq.\nAdjusting for 0 covariate(s) or covariate level(s)\nEstimating dispersions\nFitting the GLM model\nShrinkage off - using GLM estimates for parameters\nAdjusting the data\n\nhead(THCA_Thyroid_Combat_Normal_TCGA_GTEX_count)[1:5, 1:5]\n\n          TCGA-BJ-A28W-11A TCGA-EM-A1CT-11A TCGA-EL-A3MX-11A TCGA-DO-A1JZ-11A\n5_8S_rRNA                0                0                0                0\n5S_rRNA                  0                0                0                0\n7SK                      0                0                0                0\nA1BG                   203              233              206              148\nA1BG-AS1               240              323              360              324\n          TCGA-EL-A3TA-11A\n5_8S_rRNA                0\n5S_rRNA                  0\n7SK                      0\nA1BG                   154\nA1BG-AS1               249"
  },
  {
    "objectID": "Select DEGs.html#performing-differential-analysis-using-deseq2",
    "href": "Select DEGs.html#performing-differential-analysis-using-deseq2",
    "title": "4  Select DEGs",
    "section": "4.1 Performing differential analysis using DESeq2",
    "text": "4.1 Performing differential analysis using DESeq2\nDESeq2(Differential Expression using DESeq2)\n\nPrinciple: DESeq2 is based on a negative binomial distribution model, taking into account the discreteness and variability of gene expression data, as well as the impact of library size differences on differential analysis. DESeq2 reduces technical variation between samples through normalization transformations and scaling factors, then estimates the dispersion of gene expression. It employs the negative binomial distribution model to identify differentially expressed genes and corrects for multiple testing issues. DESeq2 is suitable for small sample RNA sequencing data and performs particularly well with a small number of samples, effectively handling inter-sample variability, technical noise, and batch effects.\nInput Data Type: DESeq2 is designed for RNA-seq data and requires count data for each gene. It typically uses raw count matrices without the need for pre-normalization or scaling. DESeq2 requires the input data to be a matrix composed of integers. In addition to importing counts, DESeq2 officially provides a method to directly import txi objects generated by tximport if salmon was used upstream.\n\n\nDEG_deseq2 &lt;- DESeq2_analyze(\n    tumor_file = \"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\", \n    normal_file = '../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds',\n    output_file = '../test_TransProR/Select DEGs/DEG_deseq2.Rdata',\n    logFC = 2.5,\n    p_value = 0.01\n)\n\nGroup Table:\ngroup\nnormal  tumor \n   811    470 \n\n\nconverting counts to integer mode\n\n\nestimating size factors\n\n\nestimating dispersions\n\n\ngene-wise dispersion estimates\n\n\nmean-dispersion relationship\n\n\nfinal dispersion estimates\n\n\nfitting model and testing\n\n\n-- replacing outliers and refitting for 4831 genes\n-- DESeq argument 'minReplicatesForReplace' = 7 \n-- original counts are preserved in counts(dds)\n\n\nestimating dispersions\n\n\nfitting model and testing\n\n\nChange Table:\n\n  down stable     up \n  3824  48356   4199 \n\nhead(DEG_deseq2, 5)\n\n          baseMean log2FoldChange      lfcSE      stat pvalue padj change\nA1BG      134.6084      -2.549682 0.05677219 -44.91075      0    0   down\nA2M     30208.9912       3.251168 0.08394645  38.72907      0    0     up\nAADACL2   801.4538      -8.229956 0.18969649 -43.38486      0    0   down\nAARS2    1153.5493       1.624753 0.03283522  49.48202      0    0 stable\nAARSD1    567.8672      -2.082289 0.02275703 -91.50088      0    0 stable"
  },
  {
    "objectID": "Select DEGs.html#performing-differential-analysis-using-edger",
    "href": "Select DEGs.html#performing-differential-analysis-using-edger",
    "title": "4  Select DEGs",
    "section": "4.2 Performing differential analysis using edgeR",
    "text": "4.2 Performing differential analysis using edgeR\nedgeR(Empirical Analysis of Digital Gene Expression Data in R)\n\nPrinciple: Similar to DESeq2, edgeR also accounts for the dispersion in data. It utilizes a negative binomial distribution model and different normalization methods, such as TMM (Trimmed Mean of M values), to address technical variations between samples. edgeR employs a hypothesis-testing framework to identify differentially expressed genes and uses multiple testing correction akin to the Benjamini-Hochberg method. edgeR performs better with a larger number of samples and is suitable for medium-scale RNA sequencing data, offering high sensitivity and accuracy.\nInput Data Type: edgeR is also applicable to RNA-seq data, requiring expression counts for each gene. It uses the raw count matrix and does not require normalization or standardization. When using edgeR, it is important to select the appropriate analysis algorithm; the official recommendation for bulk RNA-seq is the quasi-likelihood (QL) F-test tests, and for scRNA-seq or data without replicates, the likelihood ratio test is suggested.\n\n\nDEG_edgeR &lt;- edgeR_analyze(\n    tumor_file = \"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\", \n    normal_file = '../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds',\n    output_file = '../test_TransProR/Select DEGs/DEG_edgeR.Rdata',\n    logFC_threshold = 2.5,\n    p_value_threshold = 0.01\n)\n\nGroup Table:\ngroup\nnormal  tumor \n   811    470 \nChange Table:\n\n  down stable     up \n  2984  20294   3842 \n\nhead(DEG_edgeR, 5)\n\n                  logFC   logCPM        LR PValue FDR change\nCH507-513H4.4 -16.46830 8.739277  9184.402      0   0   down\nCH507-513H4.3 -16.18797 8.739279  8829.571      0   0   down\nXBP1          -15.00117 5.932264 40023.604      0   0   down\nCH507-513H4.6 -14.81025 8.739297  7042.096      0   0   down\nKREMEN1       -14.45332 5.384819 22028.487      0   0   down"
  },
  {
    "objectID": "Select DEGs.html#performing-differential-analysis-using-limma",
    "href": "Select DEGs.html#performing-differential-analysis-using-limma",
    "title": "4  Select DEGs",
    "section": "4.3 Performing differential analysis using limma",
    "text": "4.3 Performing differential analysis using limma\nlimma(Linear Models for Microarray Data)\n\nPrinciple: Initially developed for gene chip data, limma was later adapted for RNA sequencing data. It is based on linear models and employs weighted least squares for estimating differences in gene expression, and a Bayesian approach for correcting multiple testing issues. Limma excels in handling large-scale data and is suitable for high-throughput data analysis, such as chip and large-scale RNA sequencing data, effectively controlling the false positive rate.\nInput Data Type: limma is applicable to various types of high-throughput data, including chip data and RNA-seq. It requires the expression values for each gene, which can be either raw counts or already normalized values. There are two methods for differential analysis in limma: limma-trend and voom. The difference between these two methods is minimal when the sequencing depth of samples is similar, but voom has advantages when there is a significant difference in sequencing depth, hence voom is generally the preferred method for differential analysis.\n\n\nDEG_limma_voom &lt;- limma_analyze(\n    tumor_file = \"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\", \n    normal_file = '../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds',\n    output_file = '../test_TransProR/Select DEGs/DEG_limma_voom.Rdata',\n    logFC_threshold = 2.5,\n    p_value_threshold = 0.01\n)\n\nGroup Table:\ngroup\nnormal  tumor \n   811    470 \nChange Table:\n\n  down stable     up \n  1874  16990   1611 \n\nhead(DEG_limma_voom, 5)\n\n             logFC    AveExpr         t P.Value adj.P.Val        B change\nTOMM6   -11.347906  1.6560534 -319.5710       0         0 2790.496   down\nEEF1G   -11.484561  6.6305909 -218.5213       0         0 2324.291   down\nXBP1    -12.063108  2.1101301 -192.0646       0         0 2162.558   down\nARL6IP4  -5.415435  4.6609716 -189.5647       0         0 2149.674   down\nCMC4     -7.768105 -0.5940984 -187.1232       0         0 2129.708   down"
  },
  {
    "objectID": "Select DEGs.html#wilcoxon-rank-sum-test",
    "href": "Select DEGs.html#wilcoxon-rank-sum-test",
    "title": "4  Select DEGs",
    "section": "4.4 Wilcoxon Rank-Sum Test",
    "text": "4.4 Wilcoxon Rank-Sum Test\n\nExperiments indicate that the Wilcoxon rank-sum test, as a non-parametric test, is not recommended when the sample size per condition is less than eight. However, once the sample size per condition exceeds eight, the Wilcoxon rank-sum test performs comparably or better than the three parametric testing methods (DESeq2, edgeR, and limma-voom) or other non-parametric testing methods.\nThe three parametric testing methods DESeq2, edgeR, and limma were all initially developed to address the problem of analysis with small sample sizes. In population-level studies, which typically have larger sample sizes (at least several dozen), parametric assumptions are often unnecessary. Additionally, larger sample sizes are more likely to include several outliers that, when they violate assumptions, can lead to unstable p-values and consequently invalidate FDR.\nUnlike DESeq2, edgeR, and limma, the Wilcoxon rank-sum test, as a non-regression method, cannot adjust for various potential confounding factors (such as differences in sequencing depth). To use the Wilcoxon rank-sum test, it is generally recommended that RNA-seq samples first be normalized to eliminate batch effects before computation.\nNote: The method selected for function implementation in this section is: edgeR TMM + wilcox.test analysis\n\n\noutRst &lt;- Wilcoxon_analyze(\n    tumor_file = \"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\", \n    normal_file = '../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds',\n    output_file = '../test_TransProR/Select DEGs/Wilcoxon_rank_sum_testoutRst.Rdata',\n    logFC_threshold = 2.5,\n    fdr_threshold = 0.01\n)\n\nGroup Table:\ngroup\nnormal  tumor \n   811    470 \nChange Table:\n\n  down stable     up \n  2274  16922   1279 \n\nhead(outRst, 5)\n\n         log2foldChange       pValues           FDR change\nA1BG         -2.5194525 1.483409e-169 2.270014e-168   down\nA1BG-AS1     -0.0397057  2.557352e-09  3.168066e-09 stable\nA2M           3.3982953 2.364713e-144 1.946823e-143     up\nA2M-AS1       1.7154226  2.001256e-47  3.931655e-47 stable\nA2ML1        -5.1498685 3.597150e-115 1.712431e-114   down"
  },
  {
    "objectID": "Select DEGs.html#four-degs-venn",
    "href": "Select DEGs.html#four-degs-venn",
    "title": "4  Select DEGs",
    "section": "4.5 four degs venn",
    "text": "4.5 four degs venn\n\nall_degs_venn &lt;- list(\n    DESeq2 = deg_filter(DEG_deseq2), \n    edgeR = deg_filter(DEG_edgeR), \n    limma = deg_filter(DEG_limma_voom), \n    Wilcoxon_test = deg_filter(outRst)\n)\nfour_degs_venn &lt;- four_degs_venn(all_degs_venn)\nfour_degs_venn"
  },
  {
    "objectID": "Select DEGs.html#reference",
    "href": "Select DEGs.html#reference",
    "title": "4  Select DEGs",
    "section": "4.6 Reference",
    "text": "4.6 Reference\n\n\nDESeq2:\n\n\nDifferential gene expression analysis based on the negative binomial distribution\nLove, M. I., Huber, W., & Anders, S. (2014). Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2. Genome Biology, 15(12), 550.\n\n\nedgeR:\n\n\nedgeR: differential analysis of sequence read count data\nRobinson, M. D., McCarthy, D. J., & Smyth, G. K. (2010). edgeR: a Bioconductor package for differential expression analysis of digital gene expression data. Bioinformatics, 26(1), 139-140. \n\n\nlimma:\n\n\nLinear Models for Microarray and RNA-Seq Data User’s Guide\nRitchie, M. E., Phipson, B., Wu, D., Hu, Y., Law, C. W., Shi, W., & Smyth, G. K. (2015). limma powers differential expression analyses for RNA-sequencing and microarray studies. Nucleic Acids Research, 43(7),e47-e47.\n\n\nWilcoxon Rank-Sum Test:\n\n\nLi, Y., Ge, X., Peng, F., Li, W., & Li, J. J. (2022). Exaggerated false positives by popular differential expression methods when analyzing human population samples. Genome Biology, 23(1), 79."
  },
  {
    "objectID": "Comparison of Six Methods.html",
    "href": "Comparison of Six Methods.html",
    "title": "5  Comparison of Six Methods",
    "section": "",
    "text": "6 Reference"
  },
  {
    "objectID": "Comparison of Six Methods.html#load-data",
    "href": "Comparison of Six Methods.html#load-data",
    "title": "5  Comparison of Six Methods",
    "section": "5.1 Load data",
    "text": "5.1 Load data\n\nfour_methods_degs_union_combined_features &lt;- read_csv(\"../test_TransProR/four_methods_degs_union_combined_features.csv\")\n\nRows: 1020 Columns: 1\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Feature\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nall_degs_count_exp_gene_feature_auc_mapping_0_5_0_9 &lt;- read_csv(\"../test_TransProR/all_degs_count_exp_gene_feature_auc_mapping_0.5_0.9.csv\")\n\nRows: 809 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Gene\ndbl (2): Feature, AUC\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nall_degs_count_exp_gene_feature_auc_mapping_0_9 &lt;- read_csv(\"../test_TransProR/all_degs_count_exp_gene_feature_auc_mapping_0.9.csv\")\n\nRows: 1421 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Gene\ndbl (2): Feature, AUC\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nNewMACFCmain&lt;- four_methods_degs_union_combined_features$Feature\n\nAutoFeatureSelection_0_5_0_9&lt;- all_degs_count_exp_gene_feature_auc_mapping_0_5_0_9$Gene\nAutoFeatureSelection_0_9&lt;- all_degs_count_exp_gene_feature_auc_mapping_0_9$Gene\n\nAutoFeatureSelection &lt;- c(AutoFeatureSelection_0_5_0_9, AutoFeatureSelection_0_9)\n\nDEG_deseq2 &lt;- readRDS(\"../test_TransProR/Select DEGs/DEG_deseq2.Rdata\")\nDEG_edgeR &lt;- readRDS(\"../test_TransProR/Select DEGs/DEG_deseq2.Rdata\")\nDEG_limma_voom &lt;- readRDS(\"../test_TransProR/Select DEGs/DEG_limma_voom.Rdata\")\noutRst &lt;- readRDS(\"../test_TransProR/Select DEGs/Wilcoxon_rank_sum_testoutRst.Rdata\")"
  },
  {
    "objectID": "Comparison of Six Methods.html#comparison-of-autofeatureselection-and-four-other-methods",
    "href": "Comparison of Six Methods.html#comparison-of-autofeatureselection-and-four-other-methods",
    "title": "5  Comparison of Six Methods",
    "section": "5.2 Comparison of AutoFeatureSelection and four other methods",
    "text": "5.2 Comparison of AutoFeatureSelection and four other methods\n\nfive_degs_venn1 &lt;- list(DESeq2 = deg_filter(DEG_deseq2), \n                         edgeR = deg_filter(DEG_edgeR), \n                         limma = deg_filter(DEG_limma_voom), \n                         Wilcoxon_test = deg_filter(outRst),\n                         AutoFeatureSelection = AutoFeatureSelection)\n\nedge_colors &lt;- c(alpha(\"#1b64bb\", 0.5), alpha(\"#13828e\", 0.5), alpha(\"#337c3a\", 0.5), alpha(\"#9e9d39\", 0.5), alpha(\"#0288d1\", 0.5))\n\nname_color &lt;- alpha(c(\"#1b64bb\",\"#13828e\",\"#337c3a\",\"#9e9d39\",\"#0288d1\"), 0.8)\n\nfill_colors &lt;- c(\"#e1f2f1\", \"#11786b\")\n\nAutoFeatureSelection_FourMethods_ContrastVenn &lt;- Contrast_Venn(five_degs_venn1, edge_colors, name_color, fill_colors, label_size = 2.5)\n\nAutoFeatureSelection_FourMethods_ContrastVenn"
  },
  {
    "objectID": "Comparison of Six Methods.html#comparison-of-autofeatureselection-and-four-other-methods-1",
    "href": "Comparison of Six Methods.html#comparison-of-autofeatureselection-and-four-other-methods-1",
    "title": "5  Comparison of Six Methods",
    "section": "5.3 Comparison of AutoFeatureSelection and four other methods",
    "text": "5.3 Comparison of AutoFeatureSelection and four other methods\n\nfive_degs_venn2 &lt;- list(DESeq2 = deg_filter(DEG_deseq2), \n                         edgeR = deg_filter(DEG_edgeR), \n                         limma = deg_filter(DEG_limma_voom), \n                         Wilcoxon_test = deg_filter(outRst),\n                         NewMACFCmain = NewMACFCmain)\n\nedge_colors &lt;- c(alpha(\"#1b64bb\", 0.5), alpha(\"#13828e\", 0.5), alpha(\"#337c3a\", 0.5), alpha(\"#9e9d39\", 0.5), alpha(\"#303f9f\", 0.5))\n\nname_color &lt;- alpha(c(\"#1b64bb\",\"#13828e\",\"#337c3a\",\"#9e9d39\",\"#303f9f\"), 0.8)\n\nfill_colors &lt;- c(\"#e1f2f1\", \"#11786b\")\n\nNewMACFCmain_FourMethods_ContrastVenn &lt;- Contrast_Venn(five_degs_venn2, edge_colors, name_color, fill_colors, label_size = 2.5)\n\nNewMACFCmain_FourMethods_ContrastVenn\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIn the domain of feature selection methodologies within the TransPro project, the TransProR and TransProPy components respectively introduce two distinct classes of approaches.\n\n\n\nTransProRTransProPy\n\n\nThe first class, as represented in TransProR, includes methods such as DESeq2, edgeR, limma, and the Wilcoxon rank-sum test, which focus on univariate statistical tests. These techniques evaluate the independent correlation between individual features, like gene expression levels, and outcome variables such as disease status. Defined by their unique statistical models and assumptions about data distribution and variability, these methods do not incorporate direct considerations for interactions between features. Their forte lies in identifying features that statistically stand out from control conditions.\n\n\nConversely, the second class, encapsulated within TransProPy, employs more sophisticated methodologies. This includes the mvAUC metric, MACFC algorithm, and the integration of advanced machine learning techniques seen in AutoGluon and the auto_feature_selection function. This suite of approaches goes beyond assessing the utility of solitary features, instead appraising their collective interactions and complementarity. They seek to discern sets of features that act in concert to influence the outcome variable.\n\nThe mvAUC metric evaluates the global complementarity among features, ascertaining the enhancement of classification capability when features are combined.\nThe method called New_MACFCmain, stemming from TransProPy, employs the MACFC algorithm, which in turn utilizes mvAUC to measure feature redundancy accurately. It captures both novel class-relevant information and the degree of redundancy across variables. This facilitates the algorithm in efficiently identifying complementary features and selecting effective combinations thereof.\nIncorporating techniques like ensemble learning and recursive feature elimination, AutoGluon and TransProPy’s auto_feature_selection approach accounts for the comprehensive performance of features within a predictive model framework.\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nThus, while the second class of methods adopts a more integrated and multifaceted perspective, involving multivariable analyses and ensemble learning to account for feature dependencies, the first is more inclined towards identifying individual or a small set of features with substantial influence, which may offer a more streamlined and swift resolution for certain analytical scenarios."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "6  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n\n\n\n\n\nNote\n\n\n\nPolars works fine with Matplotlib, Plotly, and Altair, but it doesn’t work with Seaborn, nor does it have its own .plot method. The latter two are very convenient for exploratory data analysis, so for these examples we’ll just use to_pandas followed by plot or a Seaborn function after doing all the data manipulation in Polars.\n\n\n\nTab 1Tab 2\n\n\nContent for the first tab.\n\n\nContent for the second tab.\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nPolars works fine with Matplotlib, Plotly, and Altair, but it doesn’t work with Seaborn, nor does it have its own .plot method. The latter two are very convenient for exploratory data analysis, so for these examples we’ll just use to_pandas followed by plot or a Seaborn function after doing all the data manipulation in Polars."
  }
]