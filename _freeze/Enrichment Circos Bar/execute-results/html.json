{
  "hash": "4c99fd5a361317c10e88152dfd25e819",
  "result": {
    "markdown": "# Enrichment Circos Bar\n::: {.callout-tip}\n\nThis script primarily carries out the reading and merging of transcriptomic data from tumor and normal samples, and processes this data through logarithmic transformation. Subsequently, it reads and handles differentially expressed gene data, performing multiple biological enrichment analyses, including <b style=\"color: #6a926b;\">biological processes, molecular functions, cellular components, KEGG pathways, disease ontology, and Reactome pathways.</b> Finally, the script filters specific enrichment results and uses ggplot2 to create a circular bar chart to visualize these results, effectively displaying differences in gene expression across various categories. This provides valuable insights for biomedical research, especially in exploring the expression differences between tumors and normal tissues.\n:::\n\n\n\n\n\n\n\n```r \nlibrary(TransProR)\nlibrary(clusterProfiler)\nlibrary(org.Hs.eg.db)\nlibrary(DOSE)\nlibrary(ReactomePA)\nlibrary(dplyr)\nlibrary(grid)\nlibrary(ggplot2)\nlibrary(magick)\nlibrary(htmlwidgets)\nlibrary(webshot)\nlibrary(graphics)\nlibrary(cowplot)\nlibrary(pcutils)\n```\n\n## Load data\n\n::: {.cell}\n\n```{.r .cell-code}\ntumor <- readRDS(\"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\")\nnormal <- readRDS('../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds')\n# Merge the datasets, ensuring both have genes as row names\nall_count_exp <- merge(tumor, normal, by = \"row.names\")\nall_count_exp <- tibble::column_to_rownames(all_count_exp, var = \"Row.names\")  # Set the row names\n\n# Drawing data\nall_count_exp <- log_transform(all_count_exp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"log2 transform finished\"\n```\n:::\n\n```{.r .cell-code}\nDEG_deseq2 <- readRDS('../test_TransProR/Select DEGs/DEG_deseq2.Rdata')\n#head(all_count_exp, 1)\nhead(DEG_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          baseMean log2FoldChange      lfcSE      stat pvalue padj change\nA1BG      134.6084      -2.549682 0.05677219 -44.91075      0    0   down\nA2M     30208.9912       3.251168 0.08394645  38.72907      0    0     up\nAADACL2   801.4538      -8.229956 0.18969649 -43.38486      0    0   down\nAARS2    1153.5493       1.624753 0.03283522  49.48202      0    0 stable\nAARSD1    567.8672      -2.082289 0.02275703 -91.50088      0    0 stable\n```\n:::\n:::\n\n\n## Convert from SYMBOL to ENTREZID\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert from SYMBOL to ENTREZID for convenient enrichment analysis later. It's crucial to do this now as a direct conversion may result in a reduced set of genes due to non-one-to-one correspondence.\n\n# DEG_deseq2\n# Retrieve gene list\ngene <- rownames(DEG_deseq2)\n# Perform conversion\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n'select()' returned 1:many mapping between keys and columns\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in bitr(gene, fromType = \"SYMBOL\", toType = \"ENTREZID\", OrgDb =\n\"org.Hs.eg.db\"): 43.37% of input gene IDs are fail to map...\n```\n:::\n\n```{.r .cell-code}\n# Remove duplicates and merge\ngene <- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\n# Extract the SYMBOL column as a vector from the first dataset\nsymbols_vector <- gene$SYMBOL\n# Use the SYMBOL column to filter corresponding rows from the second dataset by row names\nDEG_deseq2 <- DEG_deseq2[rownames(DEG_deseq2) %in% symbols_vector, ]\nhead(DEG_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          baseMean log2FoldChange      lfcSE      stat pvalue padj change\nA1BG      134.6084      -2.549682 0.05677219 -44.91075      0    0   down\nA2M     30208.9912       3.251168 0.08394645  38.72907      0    0     up\nAADACL2   801.4538      -8.229956 0.18969649 -43.38486      0    0   down\nAARS2    1153.5493       1.624753 0.03283522  49.48202      0    0 stable\nAARSD1    567.8672      -2.082289 0.02275703 -91.50088      0    0 stable\n```\n:::\n:::\n\n\n## Select differentially expressed genes\n\n::: {.cell}\n\n```{.r .cell-code}\nDiff_deseq2 <- filter_diff_genes(\n  DEG_deseq2, \n  p_val_col = \"pvalue\", \n  log_fc_col = \"log2FoldChange\",\n  p_val_threshold = 0.01, \n  log_fc_threshold = 8\n  )\n# First, obtain a list of gene names from the row names of the first dataset\ngene_names <- rownames(Diff_deseq2)\n# Find the matching rows in the second dataframe\nmatched_rows <- all_count_exp[gene_names, ]\n# Calculate the mean for each row\naverages <- rowMeans(matched_rows, na.rm = TRUE)\n# Append the averages as a new column to the first dataframe\nDiff_deseq2$average <- averages\nDiff_deseq2$ID <- rownames(Diff_deseq2)\nDiff_deseq2$changetype <- ifelse(Diff_deseq2$change == 'up', 1, -1)\n# Define a small threshold value\nsmall_value <- .Machine$double.xmin\n# Before calculating -log10, replace zeroes with the small threshold value and assign it to a new column\nDiff_deseq2$log_pvalue <- ifelse(Diff_deseq2$pvalue == 0, -log10(small_value), -log10(Diff_deseq2$pvalue))\n# Extract the expression data corresponding to the differentially expressed genes\nheatdata_deseq2 <- all_count_exp[rownames(Diff_deseq2), ]\n#head(heatdata_deseq2, 1)\n```\n:::\n\n\n\n## Diff_deseq2 Enrichment Analysis\n### Obtain the list of genes\n\n::: {.cell}\n\n```{.r .cell-code}\ngene <- rownames(Diff_deseq2)\n## Convert\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n'select()' returned 1:1 mapping between keys and columns\n```\n:::\n\n```{.r .cell-code}\n## Remove duplicates and merge\ngene <- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\ngene_df <- data.frame(logFC=Diff_deseq2$log2FoldChange,\n                      SYMBOL = rownames(Diff_deseq2))\ngene_df <- merge(gene_df, gene, by=\"SYMBOL\")\nGO_deseq2 <- gene_df$ENTREZID\n```\n:::\n\n\n### GO Analysis for Biological Processes (BP)\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform gene enrichment analysis\nerich.go.BP_deseq2 <- enrichGO(\n  gene = GO_deseq2,\n  OrgDb = org.Hs.eg.db,\n  keyType = \"ENTREZID\",\n  ont = 'BP', # Other categories: \"CC\", \"MF\" for molecular function\n  pvalueCutoff = 0.05,\n  qvalueCutoff = 0.05,\n  readable = TRUE)\nerich.go.BP.outdata_deseq2 <- as.data.frame(erich.go.BP_deseq2)\n# Uncomment to write output to CSV\n# write.csv(erich.go.BP.outdata_deseq2, \"E:/fruit/erich.go.BP.outdata.csv\")\nhead(erich.go.BP.outdata_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   ID                                         Description\nGO:0002377 GO:0002377                           immunoglobulin production\nGO:0002440 GO:0002440 production of molecular mediator of immune response\nGO:0016064 GO:0016064             immunoglobulin mediated immune response\nGO:0019724 GO:0019724                            B cell mediated immunity\nGO:0002449 GO:0002449                        lymphocyte mediated immunity\n           GeneRatio   BgRatio       pvalue     p.adjust       qvalue\nGO:0002377    34/179 196/18870 2.480604e-33 2.909749e-30 2.909749e-30\nGO:0002440    34/179 314/18870 3.023121e-26 1.773060e-23 1.773060e-23\nGO:0016064    29/179 205/18870 7.968166e-26 3.115553e-23 3.115553e-23\nGO:0019724    29/179 208/18870 1.224253e-25 3.590121e-23 3.590121e-23\nGO:0002449    30/179 368/18870 1.235430e-19 2.898319e-17 2.898319e-17\n                                                                                                                                                                                                                                                                                                          geneID\nGO:0002377 IGKV1-16/IGKV1-17/IGKV1-27/IGKV1-5/IGKV1-6/IGKV1-9/IGKV2D-29/IGKV3-15/IGKV3-20/IGKV3D-20/IGKV4-1/IGKV5-2/IGLV1-40/IGLV1-44/IGLV1-47/IGLV2-11/IGLV2-14/IGLV2-23/IGLV3-1/IGLV3-10/IGLV3-19/IGLV3-21/IGLV3-25/IGLV3-27/IGLV3-9/IGLV4-60/IGLV4-69/IGLV5-45/IGLV6-57/IGLV7-43/IGLV8-61/IGLV9-49/TREX1/XBP1\nGO:0002440 IGKV1-16/IGKV1-17/IGKV1-27/IGKV1-5/IGKV1-6/IGKV1-9/IGKV2D-29/IGKV3-15/IGKV3-20/IGKV3D-20/IGKV4-1/IGKV5-2/IGLV1-40/IGLV1-44/IGLV1-47/IGLV2-11/IGLV2-14/IGLV2-23/IGLV3-1/IGLV3-10/IGLV3-19/IGLV3-21/IGLV3-25/IGLV3-27/IGLV3-9/IGLV4-60/IGLV4-69/IGLV5-45/IGLV6-57/IGLV7-43/IGLV8-61/IGLV9-49/TREX1/XBP1\nGO:0016064                                                IGHG1/IGHG3/IGHM/IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-11/IGHV3-13/IGHV3-15/IGHV3-21/IGHV3-23/IGHV3-30/IGHV3-43/IGHV3-48/IGHV3-49/IGHV3-53/IGHV3-66/IGHV3-73/IGHV4-28/IGHV4-31/IGHV4-34/IGHV4-39/IGHV4-59/IGHV5-51/IGLC1/TREX1\nGO:0019724                                                IGHG1/IGHG3/IGHM/IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-11/IGHV3-13/IGHV3-15/IGHV3-21/IGHV3-23/IGHV3-30/IGHV3-43/IGHV3-48/IGHV3-49/IGHV3-53/IGHV3-66/IGHV3-73/IGHV4-28/IGHV4-31/IGHV4-34/IGHV4-39/IGHV4-59/IGHV5-51/IGLC1/TREX1\nGO:0002449                                         CLEC2A/IGHG1/IGHG3/IGHM/IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-11/IGHV3-13/IGHV3-15/IGHV3-21/IGHV3-23/IGHV3-30/IGHV3-43/IGHV3-48/IGHV3-49/IGHV3-53/IGHV3-66/IGHV3-73/IGHV4-28/IGHV4-31/IGHV4-34/IGHV4-39/IGHV4-59/IGHV5-51/IGLC1/TREX1\n           Count\nGO:0002377    34\nGO:0002440    34\nGO:0016064    29\nGO:0019724    29\nGO:0002449    30\n```\n:::\n:::\n\n\n\n### GO Analysis for Molecular Functions (MF)\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform gene enrichment analysis\nerich.go.MF_deseq2 <- enrichGO(\n  gene = GO_deseq2,\n  OrgDb = org.Hs.eg.db,\n  keyType = \"ENTREZID\",\n  ont = 'MF', # Other categories: \"CC\", \"MF\" for molecular function\n  pvalueCutoff = 0.05,\n  qvalueCutoff = 0.05,\n  readable = TRUE)\n\nerich.go.MF.outdata_deseq2 <- as.data.frame(erich.go.MF_deseq2)\n# Uncomment to write output to CSV\n# write.csv(erich.go.MF.outdata_deseq2, \"E:/fruit/erich.go.MF.outdata.csv\")\n\nhead(erich.go.MF.outdata_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   ID                              Description GeneRatio\nGO:0003823 GO:0003823                          antigen binding    49/188\nGO:0030280 GO:0030280 structural constituent of skin epidermis     7/188\nGO:0034987 GO:0034987          immunoglobulin receptor binding     3/188\n             BgRatio       pvalue     p.adjust       qvalue\nGO:0003823 178/18496 1.931643e-57 4.829108e-55 4.829108e-55\nGO:0030280  36/18496 6.521227e-08 8.151534e-06 8.151534e-06\nGO:0034987  16/18496 5.249729e-04 4.374774e-02 4.374774e-02\n                                                                                                                                                                                                                                                                                                                                                                                                                                            geneID\nGO:0003823 IGHG1/IGHG3/IGHM/IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-11/IGHV3-13/IGHV3-15/IGHV3-21/IGHV3-23/IGHV3-30/IGHV3-43/IGHV3-48/IGHV3-49/IGHV3-53/IGHV3-66/IGHV3-73/IGHV4-28/IGHV4-31/IGHV4-34/IGHV4-39/IGHV4-59/IGHV5-51/IGKV1-16/IGKV1-17/IGKV1-5/IGKV3-15/IGKV3-20/IGKV4-1/IGKV5-2/IGLC1/IGLV1-40/IGLV1-44/IGLV1-47/IGLV2-11/IGLV2-14/IGLV2-23/IGLV3-1/IGLV3-19/IGLV3-21/IGLV3-25/IGLV3-27/IGLV6-57/IGLV7-43/TRBV28\nGO:0030280                                                                                                                                                                                                                                                                                                                                                                                             KRT2/KRT71/KRT73/KRT77/KRT83/KRT85/KRTAP1-3\nGO:0034987                                                                                                                                                                                                                                                                                                                                                                                                                        IGHG1/IGHG3/IGHM\n           Count\nGO:0003823    49\nGO:0030280     7\nGO:0034987     3\n```\n:::\n:::\n\n\n\n\n### GO Analysis for Cellular Components (CC)\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform gene enrichment analysis\nerich.go.CC_deseq2 <- enrichGO(\n  gene = GO_deseq2,\n  OrgDb = org.Hs.eg.db,\n  keyType = \"ENTREZID\",\n  ont = 'CC', # Other categories: \"CC\", \"MF\" for molecular function\n  pvalueCutoff = 0.05,\n  qvalueCutoff = 0.05,\n  readable = TRUE)\n\nerich.go.CC.outdata_deseq2 <- as.data.frame(erich.go.CC_deseq2)\n# Uncomment to write output to CSV\n# write.csv(erich.go.CC.outdata_deseq2, \"E:/fruit/erich.go.CC.outdata.csv\")\n```\n:::\n\n\n\n### KEGG Analysis \n\n::: {.cell}\n\n```{.r .cell-code}\nkegg.out_deseq2 = enrichKEGG(\n  gene = GO_deseq2,\n  organism = \"hsa\",\n  keyType = \"kegg\",\n  pvalueCutoff = 0.15,\n  pAdjustMethod = \"BH\",\n  qvalueCutoff = 0.15)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nReading KEGG annotation online: \"https://rest.kegg.jp/link/hsa/pathway\"...\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nReading KEGG annotation online: \"https://rest.kegg.jp/list/pathway/hsa\"...\n```\n:::\n\n```{.r .cell-code}\nkegg.out.outdata_deseq2 <- as.data.frame(kegg.out_deseq2)\n# Uncomment to export the data, which are in ENTREZID format\n# write.csv(kegg.out.outdata_deseq2, \"E:/kegg.out.outdata.csv\")\n\n##### Convert numeric Entrez gene IDs or Ensembl gene IDs from above code to symbols\nlibrary(org.Hs.eg.db)\nkegg.out1_deseq2 = as.data.frame(kegg.out_deseq2)\nENTREZID = strsplit(kegg.out1_deseq2$geneID, \"/\")\nsymbol = sapply(ENTREZID, function(x) {\n  y = bitr(x, fromType = \"ENTREZID\", toType = \"SYMBOL\", OrgDb = \"org.Hs.eg.db\")\n  # In case of multiple matches, take the first one\n  y = y[!duplicated(y$ENTREZID), -1]\n  y = paste(y, collapse = \"/\")\n})\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n'select()' returned 1:1 mapping between keys and columns\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n'select()' returned 1:1 mapping between keys and columns\n'select()' returned 1:1 mapping between keys and columns\n```\n:::\n\n```{.r .cell-code}\nkegg.out1_deseq2$geneID = symbol\nkegg.out1.outdata_deseq2 <- as.data.frame(kegg.out1_deseq2)\n# Uncomment to export the converted data\n# write.csv(kegg.out1.outdata_deseq2, \"E:/fruit/kegg.out1.outdata.csv\")\nhead(kegg.out.outdata_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   category                   subcategory       ID\nhsa05150     Human Diseases Infectious disease: bacterial hsa05150\nhsa04915 Organismal Systems              Endocrine system hsa04915\nhsa04970 Organismal Systems              Digestive system hsa04970\n                             Description GeneRatio  BgRatio       pvalue\nhsa05150 Staphylococcus aureus infection      6/43 100/8842 7.819914e-06\nhsa04915      Estrogen signaling pathway      6/43 139/8842 5.118328e-05\nhsa04970              Salivary secretion      4/43  97/8842 1.210284e-03\n             p.adjust       qvalue                            geneID Count\nhsa05150 0.0006255931 0.0005926672 147183/353288/3881/3883/3886/8687     6\nhsa04915 0.0020473312 0.0019395769 147183/353288/3881/3883/3886/8687     6\nhsa04970 0.0322742503 0.0305756056              54831/1473/3346/3347     4\n```\n:::\n\n```{.r .cell-code}\nhead(kegg.out1.outdata_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   category                   subcategory       ID\nhsa05150     Human Diseases Infectious disease: bacterial hsa05150\nhsa04915 Organismal Systems              Endocrine system hsa04915\nhsa04970 Organismal Systems              Digestive system hsa04970\n                             Description GeneRatio  BgRatio       pvalue\nhsa05150 Staphylococcus aureus infection      6/43 100/8842 7.819914e-06\nhsa04915      Estrogen signaling pathway      6/43 139/8842 5.118328e-05\nhsa04970              Salivary secretion      4/43  97/8842 1.210284e-03\n             p.adjust       qvalue                               geneID Count\nhsa05150 0.0006255931 0.0005926672 KRT25/KRT26/KRT31/KRT33A/KRT35/KRT38     6\nhsa04915 0.0020473312 0.0019395769 KRT25/KRT26/KRT31/KRT33A/KRT35/KRT38     6\nhsa04970 0.0322742503 0.0305756056                 BEST2/CST5/HTN1/HTN3     4\n```\n:::\n:::\n\n\n\n### DO Analysis\n\n::: {.cell}\n\n```{.r .cell-code}\nerich.go.DO_deseq2 = enrichDO(gene = GO_deseq2,\n                              ont = \"DO\", # Other categories: \"CC\", \"MF\" for molecular function\n                              pvalueCutoff = 0.5,\n                              qvalueCutoff = 0.5,\n                              readable = TRUE)\n\nerich.go.DO.outdata_deseq2 <- as.data.frame(erich.go.DO_deseq2)\n# Uncomment to export the data\n# write.csv(erich.go.DO.outdata_deseq2, \"E:/fruit/erich.go.DO.outdata.csv\")\nhead(erich.go.DO.outdata_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       ID                          Description GeneRatio\nDOID:0060121 DOID:0060121 integumentary system benign neoplasm      3/71\nDOID:3165       DOID:3165                 skin benign neoplasm      3/71\nDOID:11132     DOID:11132                prostatic hypertrophy      3/71\nDOID:421         DOID:421                         hair disease      4/71\nDOID:2345       DOID:2345    plasma protein metabolism disease      2/71\n              BgRatio      pvalue  p.adjust    qvalue                 geneID\nDOID:0060121 27/10312 0.000812625 0.1178306 0.1178306     KRT31/KRT35/MAGEA4\nDOID:3165    27/10312 0.000812625 0.1178306 0.1178306     KRT31/KRT35/MAGEA4\nDOID:11132   34/10312 0.001606147 0.1552608 0.1552608   MAGEA1/MAGEA3/MAGEA4\nDOID:421     81/10312 0.002303062 0.1669720 0.1669720 CDSN/KRT25/KRT71/KRT83\nDOID:2345    16/10312 0.005269780 0.2547060 0.2547060         CPN1/SERPINA12\n             Count\nDOID:0060121     3\nDOID:3165        3\nDOID:11132       3\nDOID:421         4\nDOID:2345        2\n```\n:::\n:::\n\n\n\n### Reactome Pathway Analysis \n\n::: {.cell}\n\n```{.r .cell-code}\nerich.go.Reactome_deseq2 <- enrichPathway(gene = GO_deseq2, pvalueCutoff = 0.05, readable = TRUE)\n\nerich.go.Reactome.outdata_deseq2 <- as.data.frame(erich.go.Reactome_deseq2)\n# Uncomment to export the data\n# write.csv(erich.go.Reactome.outdata_deseq2, \"E:/fruit/erich.go.Reactome.outdata.csv\")\nhead(erich.go.Reactome.outdata_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                         ID                         Description GeneRatio\nR-HSA-6805567 R-HSA-6805567                      Keratinization     50/97\nR-HSA-6809371 R-HSA-6809371 Formation of the cornified envelope     16/97\n                BgRatio       pvalue     p.adjust       qvalue\nR-HSA-6805567 214/11009 3.658421e-61 6.694910e-59 6.694910e-59\nR-HSA-6809371 129/11009 1.744227e-14 1.595968e-12 1.595968e-12\n                                                                                                                                                                                                                                                                                                                                                                                                                                         geneID\nR-HSA-6805567 CDSN/KRT2/KRT25/KRT26/KRT31/KRT33A/KRT35/KRT38/KRT71/KRT73/KRT77/KRT83/KRT85/KRTAP1-1/KRTAP1-3/KRTAP10-1/KRTAP10-10/KRTAP10-11/KRTAP10-3/KRTAP10-5/KRTAP10-6/KRTAP10-7/KRTAP10-8/KRTAP11-1/KRTAP12-1/KRTAP12-2/KRTAP16-1/KRTAP17-1/KRTAP2-1/KRTAP2-2/KRTAP2-4/KRTAP24-1/KRTAP26-1/KRTAP3-1/KRTAP3-2/KRTAP3-3/KRTAP4-2/KRTAP4-3/KRTAP4-4/KRTAP4-6/KRTAP4-8/KRTAP4-9/KRTAP8-1/KRTAP9-3/KRTAP9-4/KRTAP9-7/KRTAP9-8/LCE1E/LCE2B/LCE2C\nR-HSA-6809371                                                                                                                                                                                                                                                                                                                                    CDSN/KRT2/KRT25/KRT26/KRT31/KRT33A/KRT35/KRT38/KRT71/KRT73/KRT77/KRT83/KRT85/LCE1E/LCE2B/LCE2C\n              Count\nR-HSA-6805567    50\nR-HSA-6809371    16\n```\n:::\n:::\n\n\n\n### Usage example\n\n::: {.cell}\n\n```{.r .cell-code}\n# Suppose you have a dataframe named data and a list of descriptions you want to filter\ndescriptions_to_filter <- c(\"immunoglobulin production\", \"B cell mediated immunity\")\nfiltered_data_BP <- extract_descriptions_counts(erich.go.BP.outdata_deseq2, descriptions_to_filter, \"#009688\")\nprint(filtered_data_BP)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                         Description Count   color\nGO:0002377 immunoglobulin production    34 #009688\nGO:0019724  B cell mediated immunity    29 #009688\n```\n:::\n\n```{.r .cell-code}\ndescriptions_to_filter <- c(\"immunoglobulin complex\", \"keratin filament\", \"IgG immunoglobulin complex\")\nfiltered_data_CC <- extract_descriptions_counts(erich.go.CC.outdata_deseq2, descriptions_to_filter, \"#3f51b5\")\nprint(filtered_data_CC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                          Description Count   color\nGO:0019814     immunoglobulin complex    60 #3f51b5\nGO:0045095           keratin filament    39 #3f51b5\nGO:0071735 IgG immunoglobulin complex     3 #3f51b5\n```\n:::\n\n```{.r .cell-code}\ndescriptions_to_filter <- c(\"integumentary system benign neoplasm\", \"prostatic hypertrophy\")\nfiltered_data_DO <- extract_descriptions_counts(erich.go.DO.outdata_deseq2, descriptions_to_filter, \"#673ab7\")\nprint(filtered_data_DO)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                      Description Count   color\nDOID:0060121 integumentary system benign neoplasm     3 #673ab7\nDOID:11132                  prostatic hypertrophy     3 #673ab7\n```\n:::\n\n```{.r .cell-code}\ndescriptions_to_filter <- c(\"antigen binding\", \"immunoglobulin receptor binding\")\nfiltered_data_MF <- extract_descriptions_counts(erich.go.MF.outdata_deseq2, descriptions_to_filter, \"#4caf50\")\nprint(filtered_data_MF)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                               Description Count   color\nGO:0003823                 antigen binding    49 #4caf50\nGO:0034987 immunoglobulin receptor binding     3 #4caf50\n```\n:::\n\n```{.r .cell-code}\ndescriptions_to_filter <- c(\"Keratinization\", \"Formation of the cornified envelope\")\nfiltered_data_Reactome <- extract_descriptions_counts(erich.go.Reactome.outdata_deseq2, descriptions_to_filter, \"#ffc107\")\nprint(filtered_data_Reactome)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                                      Description Count   color\nR-HSA-6805567                      Keratinization    50 #ffc107\nR-HSA-6809371 Formation of the cornified envelope    16 #ffc107\n```\n:::\n\n```{.r .cell-code}\ndescriptions_to_filter <- c(\"Staphylococcus aureus infection\", \"Salivary secretion\")\nfiltered_data_kegg <- extract_descriptions_counts(kegg.out1.outdata_deseq2, descriptions_to_filter, \"#ff9800\")\nprint(filtered_data_kegg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                             Description Count   color\nhsa05150 Staphylococcus aureus infection     6 #ff9800\nhsa04970              Salivary secretion     4 #ff9800\n```\n:::\n:::\n\n\n\n\n## enrich_circo_bar\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_list <- list(\n  filtered_data_BP, \n  filtered_data_CC, \n  filtered_data_DO,\n  filtered_data_MF, \n  filtered_data_Reactome, \n  filtered_data_kegg\n)\ncombined_and_visualized_data <- enrich_circo_bar(data_list)\n\nprint(combined_and_visualized_data)\n```\n\n::: {.cell-output-display}\n![](Enrichment-Circos-Bar_files/figure-html/unnamed-chunk-12-1.png){width=100%}\n:::\n:::\n\n\n\n## enrich_circo_bar and sunburst\n\n### data\n\n::: {.cell}\n\n```{.r .cell-code}\ndescriptions_to_filter <- c(\"IgG immunoglobulin complex\")\nfiltered_data_CC <- extract_descriptions_counts(erich.go.CC.outdata_deseq2, descriptions_to_filter, \"#ff9800\")\nprint(filtered_data_CC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                          Description Count   color\nGO:0071735 IgG immunoglobulin complex     3 #ff9800\n```\n:::\n\n```{.r .cell-code}\ndescriptions_to_filter <- c(\"prostatic hypertrophy\")\nfiltered_data_DO <- extract_descriptions_counts(erich.go.DO.outdata_deseq2, descriptions_to_filter, \"#4caf50\")\nprint(filtered_data_DO)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     Description Count   color\nDOID:11132 prostatic hypertrophy     3 #4caf50\n```\n:::\n\n```{.r .cell-code}\ndescriptions_to_filter <- c(\"immunoglobulin receptor binding\")\nfiltered_data_MF <- extract_descriptions_counts(erich.go.MF.outdata_deseq2, descriptions_to_filter, \"#009688\")\nprint(filtered_data_MF)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                               Description Count   color\nGO:0034987 immunoglobulin receptor binding     3 #009688\n```\n:::\n\n```{.r .cell-code}\ndescriptions_to_filter <- c(\"Staphylococcus aureus infection\",\"Salivary secretion\")\nfiltered_data_kegg <- extract_descriptions_counts(kegg.out1.outdata_deseq2, descriptions_to_filter, \"#3f51b5\")\nprint(filtered_data_kegg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                             Description Count   color\nhsa05150 Staphylococcus aureus infection     6 #3f51b5\nhsa04970              Salivary secretion     4 #3f51b5\n```\n:::\n\n```{.r .cell-code}\ndata_list <- list(\n  filtered_data_kegg,\n  filtered_data_MF,\n  filtered_data_DO,\n  filtered_data_CC\n)\n\n\n\nenrichment <- c (\"enrichment\",\"enrichment\",\"enrichment\",\n                 \"enrichment\",\"enrichment\",\"enrichment\",\n                 \"enrichment\",\"enrichment\",\"enrichment\",\n                 \"enrichment\",\"enrichment\",\"enrichment\",\"enrichment\",\n                 \"enrichment\",\"enrichment\",\"enrichment\",\"enrichment\",\"enrichment\",\"enrichment\")\n\n\nmethods1 <- c(\"go CC\",\"go CC\",\"go CC\",\n              \"go DO\",\"go DO\",\"go DO\",\n              \"go MF\",\"go MF\",\"go MF\",\n              \"KEGG\",\"KEGG\",\"KEGG\",\"KEGG\",\"KEGG\",\"KEGG\",\"KEGG\",\"KEGG\",\"KEGG\",\"KEGG\")\n\npathways1 <- c(\"IgG immunoglobulin complex\",\"IgG immunoglobulin complex\",\"IgG immunoglobulin complex\",\n               \"prostatic hypertrophy\",\"prostatic hypertrophy\",\"prostatic hypertrophy\",\n               \"immunoglobulin receptor binding\",\"immunoglobulin receptor binding\",\"immunoglobulin receptor binding\",\n               \"Salivary secretion\",\"Salivary secretion\",\"Salivary secretion\",\"Salivary secretion\",\n               \"Staphylococcus aureus infection\",\"Staphylococcus aureus infection\",\"Staphylococcus aureus infection\",\n               \"Staphylococcus aureus infection\",\"Staphylococcus aureus infection\",\"Staphylococcus aureus infection\")\n\nchange1 <- c(\"CC_up\",\"CC_up\", \"CC_down\",\n             \"DO_up\",\"DO_up\", \"DO_up\",\n             \"MF_up\",\"MF_up\", \"MF_up\",\n             \"KEGG1_down\",\"KEGG1_up\", \"KEGG1_up\", \"KEGG1_up\",\n             \"KEGG2_down\",\"KEGG2_down\",\"KEGG2_down\",\"KEGG2_down\",\"KEGG2_down\",\"KEGG2_down\")\n\ngenes1 <- c(\"CC IGHG1\",\"CC IGHG3\", \"IGLC1\",\n            \"MAGEA1\", \"MAGEA3\", \"MAGEA4\",\n            \"MF IGHG1\", \"MF IGHG3\", \"MF IGHM\",\n            \"BEST2\",\"CST5\",\"HTN1\",\"HTN3\",\n            \"KRT25\",\"KRT26\",\"KRT31\",\"KRT33A\",\"KRT35\",\"KRT38\")\n\n\nlogFC1<- c(8.79, 8.52, 8.55, \n           11.21, 11.28, 12.46, \n           8.79, 8.52, 8.77,\n           8.66, 8.97,12.70,13.31,\n           10.22, 8.31,8.48,8.42,9.21,8.43)\n\n\ntest1 <- data.frame(enrichment, methods1, pathways1, change1, genes1, logFC1)\n\n# Custom colors\ncolors <- rev(c(\"#009688\",\"#4caf50\",\"#ff9800\",\"#3f51b5\"))\n```\n:::\n\n\n\n### function\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to create the circular bar chart\nenrich_circo_bar1 <- function(data_list, num_dummy) {\n  # Combine data and arrange by Count\n  combined_data <- dplyr::bind_rows(data_list)\n  combined_data <- combined_data %>% dplyr::arrange(dplyr::desc(.data$Count)) %>%\n    dplyr::mutate(id = dplyr::row_number())\n  \n  # Add dummy rows to create empty space in the center\n  num_dummy <- num_dummy  # Number of dummy rows\n  dummy_data <- data.frame(\n    Description = rep(\"dummy\", num_dummy),\n    Count = rep(0, num_dummy),\n    color = rep(\"#FFFFFF\", num_dummy)  # White color for dummy bars\n  )\n  dummy_data <- dummy_data %>% dplyr::mutate(id = max(combined_data$id) + dplyr::row_number())\n  \n  # Combine real and dummy data\n  combined_data <- dplyr::bind_rows(combined_data, dummy_data)\n  \n  # Mutate Description to a factor with levels in the order of appearance\n  combined_data <- combined_data %>% dplyr::mutate(Description = factor(.data$Description, \n                                                                        levels = unique(.data$Description)))\n  \n  # Set fill colors, including dummy color\n  fill_colors <- c(combined_data$color[match(levels(combined_data$Description), combined_data$Description)], \"#FFFFFF\")\n  \n  # Calculate maximum values for limits\n  max_count <- max(combined_data$Count) + (max(combined_data$Count) / 5)\n  max_id <- max(combined_data$id) + 1.5\n  \n  # Create plot\n  p <- ggplot2::ggplot(combined_data, ggplot2::aes(x = .data$id, y = .data$Count, fill = .data$Description)) +\n    ggplot2::geom_bar(stat = \"identity\", width = 0.7) +\n    ggplot2::geom_text(ggplot2::aes(x = .data$id, y = 0, label = ifelse(.data$Description == \"dummy\", \"\", as.character(.data$Description)), \n                                    color = .data$Description), \n                       hjust = 1.03, size = 3.5) +  # Remove color assignment from here\n    ggplot2::scale_fill_manual(values = fill_colors, guide = \"none\") +\n    ggplot2::scale_color_manual(values = fill_colors, guide = \"none\") +  # Assign colors to text\n    ggplot2::scale_y_continuous(expand = c(0, 0), limits = c(0, max_count), position = \"right\") +\n    ggplot2::scale_x_reverse(expand = c(0, 0), limits = c(max_id, -0.1)) +  # Reverse the x-axis\n    ggplot2::coord_polar(theta = \"y\", start = 0) +\n    ggplot2::labs(title = \"Enrichment CircularBar Chart\", \n                  subtitle = \"Including: BP/MF/CC/DO/KEGG/Reactome\") +\n    ggplot2::theme_minimal() +\n    ggplot2::theme(plot.background = ggplot2::element_rect(fill = \"white\", color = \"white\"), \n                   axis.title = ggplot2::element_blank(), axis.text = ggplot2::element_blank())\n  \n  return(p)\n}\n\n\n\n\nmy_sunburst1 <- function (test, custom_colors = NULL, ...) \n{\n  test <- as.data.frame(test)\n  if (length(unique(test[, 1])) > 1) {\n    test <- cbind(Root = \" \", test)\n  }\n  nc <- ncol(test)\n  if (nc < 3) \n    stop(\"as least 3-columns dataframe\")\n  if (!is.numeric(test[, nc])) \n    stop(\"the last column must be numeric\")\n  \n  lib_ps(\"plotly\", library = FALSE)\n  target <- source <- weight <- NULL\n  links <- data.frame()\n  for (i in 1:(nc - 2)) {\n    tmp <- test[, c(i, i + 1, nc)]\n    colnames(tmp) <- c(\"source\", \"target\", \"weight\")\n    tmp <- dplyr::group_by(tmp, source, target) %>% dplyr::summarise(weight = sum(weight), \n                                                                     .groups = \"keep\")\n    links <- rbind(links, tmp)\n  }\n  \n  if (is.null(custom_colors)) {\n    # Use default colors if no custom colors provided\n    fig <- plotly::plot_ly(labels = links$target, parents = links$source, \n                           values = links$weight, text = links$weight, type = \"sunburst\", \n                           ...)\n  } else {\n    # Use custom colors\n    fig <- plotly::plot_ly(labels = links$target, parents = links$source, \n                           values = links$weight, text = links$weight, type = \"sunburst\", \n                           marker = list(colors = custom_colors), ...)\n  }\n  \n  fig\n}\n```\n:::\n\n\n### bar\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Call the function to create the plot\ncombined_and_visualized_data <- enrich_circo_bar1(data_list, 15)\n\n# Print the plot\nprint(combined_and_visualized_data)\n```\n\n::: {.cell-output-display}\n![](Enrichment-Circos-Bar_files/figure-html/unnamed-chunk-15-1.png){width=100%}\n:::\n:::\n\n\n\n### sunburst\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create the sunburst plot with custom colors\nfig <- my_sunburst1(test1, custom_colors = colors)\n\n# Display the plot\nfig\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-5f3342f5b9570b000e59\" style=\"width:100%;height:960px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-5f3342f5b9570b000e59\">{\"x\":{\"visdat\":{\"9dc04e886a29\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"9dc04e886a29\",\"attrs\":{\"9dc04e886a29\":{\"labels\":[\"KEGG\",\"go CC\",\"go DO\",\"go MF\",\"Salivary secretion\",\"Staphylococcus aureus infection\",\"IgG immunoglobulin complex\",\"prostatic hypertrophy\",\"immunoglobulin receptor binding\",\"CC_down\",\"CC_up\",\"KEGG1_down\",\"KEGG1_up\",\"KEGG2_down\",\"MF_up\",\"DO_up\",\"IGLC1\",\"CC IGHG1\",\"CC IGHG3\",\"MAGEA1\",\"MAGEA3\",\"MAGEA4\",\"BEST2\",\"CST5\",\"HTN1\",\"HTN3\",\"KRT25\",\"KRT26\",\"KRT31\",\"KRT33A\",\"KRT35\",\"KRT38\",\"MF IGHG1\",\"MF IGHG3\",\"MF IGHM\"],\"parents\":[\"enrichment\",\"enrichment\",\"enrichment\",\"enrichment\",\"KEGG\",\"KEGG\",\"go CC\",\"go DO\",\"go MF\",\"IgG immunoglobulin complex\",\"IgG immunoglobulin complex\",\"Salivary secretion\",\"Salivary secretion\",\"Staphylococcus aureus infection\",\"immunoglobulin receptor binding\",\"prostatic hypertrophy\",\"CC_down\",\"CC_up\",\"CC_up\",\"DO_up\",\"DO_up\",\"DO_up\",\"KEGG1_down\",\"KEGG1_up\",\"KEGG1_up\",\"KEGG1_up\",\"KEGG2_down\",\"KEGG2_down\",\"KEGG2_down\",\"KEGG2_down\",\"KEGG2_down\",\"KEGG2_down\",\"MF_up\",\"MF_up\",\"MF_up\"],\"values\":[96.710000000000008,25.859999999999999,34.950000000000003,26.079999999999998,43.640000000000001,53.07,25.859999999999999,34.950000000000003,26.079999999999998,8.5500000000000007,17.309999999999999,8.6600000000000001,34.980000000000004,53.07,26.079999999999998,34.950000000000003,8.5500000000000007,8.7899999999999991,8.5199999999999996,11.210000000000001,11.279999999999999,12.460000000000001,8.6600000000000001,8.9700000000000006,12.699999999999999,13.31,10.220000000000001,8.3100000000000005,8.4800000000000004,8.4199999999999999,9.2100000000000009,8.4299999999999997,8.7899999999999991,8.5199999999999996,8.7699999999999996],\"text\":[96.710000000000008,25.859999999999999,34.950000000000003,26.079999999999998,43.640000000000001,53.07,25.859999999999999,34.950000000000003,26.079999999999998,8.5500000000000007,17.309999999999999,8.6600000000000001,34.980000000000004,53.07,26.079999999999998,34.950000000000003,8.5500000000000007,8.7899999999999991,8.5199999999999996,11.210000000000001,11.279999999999999,12.460000000000001,8.6600000000000001,8.9700000000000006,12.699999999999999,13.31,10.220000000000001,8.3100000000000005,8.4800000000000004,8.4199999999999999,9.2100000000000009,8.4299999999999997,8.7899999999999991,8.5199999999999996,8.7699999999999996],\"marker\":{\"colors\":[\"#3f51b5\",\"#ff9800\",\"#4caf50\",\"#009688\"]},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"sunburst\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"labels\":[\"KEGG\",\"go CC\",\"go DO\",\"go MF\",\"Salivary secretion\",\"Staphylococcus aureus infection\",\"IgG immunoglobulin complex\",\"prostatic hypertrophy\",\"immunoglobulin receptor binding\",\"CC_down\",\"CC_up\",\"KEGG1_down\",\"KEGG1_up\",\"KEGG2_down\",\"MF_up\",\"DO_up\",\"IGLC1\",\"CC IGHG1\",\"CC IGHG3\",\"MAGEA1\",\"MAGEA3\",\"MAGEA4\",\"BEST2\",\"CST5\",\"HTN1\",\"HTN3\",\"KRT25\",\"KRT26\",\"KRT31\",\"KRT33A\",\"KRT35\",\"KRT38\",\"MF IGHG1\",\"MF IGHG3\",\"MF IGHM\"],\"parents\":[\"enrichment\",\"enrichment\",\"enrichment\",\"enrichment\",\"KEGG\",\"KEGG\",\"go CC\",\"go DO\",\"go MF\",\"IgG immunoglobulin complex\",\"IgG immunoglobulin complex\",\"Salivary secretion\",\"Salivary secretion\",\"Staphylococcus aureus infection\",\"immunoglobulin receptor binding\",\"prostatic hypertrophy\",\"CC_down\",\"CC_up\",\"CC_up\",\"DO_up\",\"DO_up\",\"DO_up\",\"KEGG1_down\",\"KEGG1_up\",\"KEGG1_up\",\"KEGG1_up\",\"KEGG2_down\",\"KEGG2_down\",\"KEGG2_down\",\"KEGG2_down\",\"KEGG2_down\",\"KEGG2_down\",\"MF_up\",\"MF_up\",\"MF_up\"],\"values\":[96.710000000000008,25.859999999999999,34.950000000000003,26.079999999999998,43.640000000000001,53.07,25.859999999999999,34.950000000000003,26.079999999999998,8.5500000000000007,17.309999999999999,8.6600000000000001,34.980000000000004,53.07,26.079999999999998,34.950000000000003,8.5500000000000007,8.7899999999999991,8.5199999999999996,11.210000000000001,11.279999999999999,12.460000000000001,8.6600000000000001,8.9700000000000006,12.699999999999999,13.31,10.220000000000001,8.3100000000000005,8.4800000000000004,8.4199999999999999,9.2100000000000009,8.4299999999999997,8.7899999999999991,8.5199999999999996,8.7699999999999996],\"text\":[96.710000000000008,25.859999999999999,34.950000000000003,26.079999999999998,43.640000000000001,53.07,25.859999999999999,34.950000000000003,26.079999999999998,8.5500000000000007,17.309999999999999,8.6600000000000001,34.980000000000004,53.07,26.079999999999998,34.950000000000003,8.5500000000000007,8.7899999999999991,8.5199999999999996,11.210000000000001,11.279999999999999,12.460000000000001,8.6600000000000001,8.9700000000000006,12.699999999999999,13.31,10.220000000000001,8.3100000000000005,8.4800000000000004,8.4199999999999999,9.2100000000000009,8.4299999999999997,8.7899999999999991,8.5199999999999996,8.7699999999999996],\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"colors\":[\"#3f51b5\",\"#ff9800\",\"#4caf50\",\"#009688\"],\"line\":{\"color\":\"rgba(255,255,255,1)\"}},\"type\":\"sunburst\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\n### combined_plot \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert ggplot to image\ncircular_bar_image <- image_graph(width = 1000, height = 1000, res = 96)\nprint(combined_and_visualized_data)\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\npng \n  2 \n```\n:::\n\n```{.r .cell-code}\n# Save the sunburst chart as HTML and convert it to an image\nhtml_file <- tempfile(fileext = \".html\")\npng_file <- tempfile(fileext = \".png\")\nsaveWidget(fig, html_file, selfcontained = TRUE)\nwebshot(html_file, png_file, vwidth = 800, vheight = 800, cliprect = c(0, 0, 800, 800))\n```\n\n::: {.cell-output-display}\n![](Enrichment-Circos-Bar_files/figure-html/unnamed-chunk-17-1.png){width=100%}\n:::\n\n```{.r .cell-code}\n# Read the saved image\nimg <- image_read(png_file)\n\n# Create a circular mask\nmask <- image_draw(image_blank(800, 800, color = \"none\"))\nsymbols(400, 400, circles = 400, inches = FALSE, add = TRUE, fg = \"grey50\", bg = \"grey50\")\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\npng \n  2 \n```\n:::\n\n```{.r .cell-code}\n# Apply the mask to generate a circular image\nimg_circular <- image_composite(img, mask, operator = \"copyopacity\")\n\n# Convert the generated circular bar chart and circular sunburst chart to ggplot objects\ncircular_bar_plot <- ggdraw() + draw_image(circular_bar_image, scale = 1)\nsunburst_plot <- ggdraw() + draw_image(img_circular, scale = 0.5)\n\n# Overlay the sunburst chart at the center of the circular bar chart\ncombined_plot <- circular_bar_plot + draw_plot(sunburst_plot, x = -0.02, y = -0.02, width = 1, height = 1)\n\n# Print the combined plot\nprint(combined_plot)\n```\n\n::: {.cell-output-display}\n![](Enrichment-Circos-Bar_files/figure-html/unnamed-chunk-17-2.png){width=100%}\n:::\n:::\n\n\n\n## Reference\n>\n> - **ggplot2**:\n> \n>><a href=\"https://github.com/tidyverse/ggplot2\" style=\"color: #758b76; font-weight: bold;\">github:ggplot2</a>\n>>\n>><a href=\"https://ggplot2.tidyverse.org/\" style=\"color: #758b76; font-weight: bold;\">An implementation of the Grammar of Graphics in R</a>\n>\n",
    "supporting": [
      "Enrichment-Circos-Bar_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\r\n<script src=\"site_libs/plotly-binding-4.10.4/plotly.js\"></script>\r\n<script src=\"site_libs/typedarray-0.1/typedarray.min.js\"></script>\r\n<script src=\"site_libs/jquery-3.5.1/jquery.min.js\"></script>\r\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\r\n<link href=\"site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}