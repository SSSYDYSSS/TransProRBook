{
  "hash": "44ff17c2488cdcb0eb1009b7549300de",
  "result": {
    "markdown": "# Enrichment ggtree\n::: {.callout-tip}\nThis image showcases an integrated scientific visualization, <b style=\"color: #6a926b;\">centralizing a circular phylogenetic tree with annotated nodes, surrounded by associated heatmaps and bar charts that represent gene expression data and functional pathway enrichments.</b>\n:::\n\n\n\n\n\n\n\n```r \nlibrary(TransProR)\nlibrary(ggtree)\nlibrary(ggtreeExtra)\nlibrary(org.Hs.eg.db)\nlibrary(clusterProfiler)\nlibrary(ReactomePA)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggnewscale)\n```\n\n## Load data\n\n::: {.cell}\n\n```{.r .cell-code}\ntumor <- readRDS(\"../test_TransProR/generated_data1/removebatch_SKCM_Skin_TCGA_exp_tumor.rds\")\nnormal <- readRDS('../test_TransProR/generated_data1/removebatch_SKCM_Skin_Normal_TCGA_GTEX_count.rds')\n# Merge the datasets, ensuring both have genes as row names\nall_count_exp <- merge(tumor, normal, by = \"row.names\")\nall_count_exp <- tibble::column_to_rownames(all_count_exp, var = \"Row.names\")  # Set the row names\n\n# Drawing data\nall_count_exp <- log_transform(all_count_exp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"log2 transform finished\"\n```\n:::\n\n```{.r .cell-code}\nDEG_deseq2 <- readRDS('../test_TransProR/Select DEGs/DEG_deseq2.Rdata')\n#head(all_count_exp, 1)\nhead(DEG_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          baseMean log2FoldChange      lfcSE      stat pvalue padj change\nA1BG      134.6084      -2.549682 0.05677219 -44.91075      0    0   down\nA2M     30208.9912       3.251168 0.08394645  38.72907      0    0     up\nAADACL2   801.4538      -8.229956 0.18969649 -43.38486      0    0   down\nAARS2    1153.5493       1.624753 0.03283522  49.48202      0    0 stable\nAARSD1    567.8672      -2.082289 0.02275703 -91.50088      0    0 stable\n```\n:::\n:::\n\n\n## Convert from SYMBOL to ENTREZID\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert from SYMBOL to ENTREZID for convenient enrichment analysis later. It's crucial to do this now as a direct conversion may result in a reduced set of genes due to non-one-to-one correspondence.\n\n# DEG_deseq2\n# Retrieve gene list\ngene <- rownames(DEG_deseq2)\n# Perform conversion\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n'select()' returned 1:many mapping between keys and columns\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in bitr(gene, fromType = \"SYMBOL\", toType = \"ENTREZID\", OrgDb =\n\"org.Hs.eg.db\"): 43.37% of input gene IDs are fail to map...\n```\n:::\n\n```{.r .cell-code}\n# Remove duplicates and merge\ngene <- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\n# Extract the SYMBOL column as a vector from the first dataset\nsymbols_vector <- gene$SYMBOL\n# Use the SYMBOL column to filter corresponding rows from the second dataset by row names\nDEG_deseq2 <- DEG_deseq2[rownames(DEG_deseq2) %in% symbols_vector, ]\nhead(DEG_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          baseMean log2FoldChange      lfcSE      stat pvalue padj change\nA1BG      134.6084      -2.549682 0.05677219 -44.91075      0    0   down\nA2M     30208.9912       3.251168 0.08394645  38.72907      0    0     up\nAADACL2   801.4538      -8.229956 0.18969649 -43.38486      0    0   down\nAARS2    1153.5493       1.624753 0.03283522  49.48202      0    0 stable\nAARSD1    567.8672      -2.082289 0.02275703 -91.50088      0    0 stable\n```\n:::\n:::\n\n\n\n## Select differentially expressed genes\n\n::: {.cell}\n\n```{.r .cell-code}\nDiff_deseq2 <- filter_diff_genes(\n  DEG_deseq2, \n  p_val_col = \"pvalue\", \n  log_fc_col = \"log2FoldChange\",\n  p_val_threshold = 0.01, \n  log_fc_threshold = 9.1\n  )\n# First, obtain a list of gene names from the row names of the first dataset\ngene_names <- rownames(Diff_deseq2)\n# Find the matching rows in the second dataframe\nmatched_rows <- all_count_exp[gene_names, ]\n# Calculate the mean for each row\naverages <- rowMeans(matched_rows, na.rm = TRUE)\n# Append the averages as a new column to the first dataframe\nDiff_deseq2$average <- averages\nDiff_deseq2$ID <- rownames(Diff_deseq2)\nDiff_deseq2$changetype <- ifelse(Diff_deseq2$change == 'up', 1, -1)\n# Define a small threshold value\nsmall_value <- .Machine$double.xmin\n# Before calculating -log10, replace zeroes with the small threshold value and assign it to a new column\nDiff_deseq2$log_pvalue <- ifelse(Diff_deseq2$pvalue == 0, -log10(small_value), -log10(Diff_deseq2$pvalue))\n# Extract the expression data corresponding to the differentially expressed genes\nheatdata_deseq2 <- all_count_exp[rownames(Diff_deseq2), ]\n#head(heatdata_deseq2, 1)\n```\n:::\n\n\n\n## Process heatdata for ggtree plotting\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nHeatdataDeseq2 <- process_heatdata(\n  heatdata_deseq2, \n  selection = 2, \n  custom_names = NULL, \n  num_names_per_group = 4, \n  prefix_length = 4\n  )\nhead(HeatdataDeseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                  TCGA_1   TCGA_2   TCGA_3   TCGA_4    GTEX_1    GTEX_2\nADIRF            0.00000  0.00000 0.000000 0.000000 10.426265  7.954196\nATP6V1G2-DDX39B  0.00000  0.00000 0.000000 2.000000  8.044394 10.769011\nBANCR           10.82655 10.68299 8.997179 5.491853  0.000000  0.000000\nBOLA2            0.00000  0.00000 0.000000 0.000000  6.700440  7.693487\nC1QTNF5          0.00000  0.00000 0.000000 0.000000  8.134426  8.658211\n                   GTEX_3    GTEX_4\nADIRF           10.194757 10.817783\nATP6V1G2-DDX39B  5.554589  8.335390\nBANCR            0.000000  1.000000\nBOLA2            6.554589  7.066089\nC1QTNF5          7.266787  8.071462\n```\n:::\n:::\n\n\n\n## Check nodes requiring staining\n\n::: {.cell}\n\n```{.r .cell-code}\nHclustDeseq2 <- hclust(dist(HeatdataDeseq2, method = \"euclidean\"), method = \"complete\")\np1 = ggtree(HclustDeseq2, branch.length = 'none', layout = \"circular\", size = 0.2, xlim = c(30, NA))\np1\n```\n\n::: {.cell-output-display}\n![](Enrichment-ggtree_files/figure-html/unnamed-chunk-5-1.png){width=100%}\n:::\n\n```{.r .cell-code}\n# Examine node points, note the x-coordinate in this df (tree_data)\n# Convert data generated by ggtree into a dataframe\ntree_data <- as.data.frame(p1$data)\np2 <- rotate_tree(p1, 90)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n:::\n\n```{.r .cell-code}\np2\n```\n\n::: {.cell-output-display}\n![](Enrichment-ggtree_files/figure-html/unnamed-chunk-5-2.png){width=100%}\n:::\n\n```{.r .cell-code}\n# Review nodes\np3 <- p2 + geom_text(aes(label = node)) + geom_tiplab(offset = 1, size = 3, hjust = -0.1)\np3\n```\n\n::: {.cell-output-display}\n![](Enrichment-ggtree_files/figure-html/unnamed-chunk-5-3.png){width=100%}\n:::\n:::\n\n\n\n##  Usage Example\n\n::: {.cell}\n\n```{.r .cell-code}\n# Please replace the following vectors with your specific values\nnodes <- c(117, 129, 125, 127, 119, 123, 139, 166, 124, 131, 217) # x-values of the nodes you want to highlight\nfill_colors <- c(\"#CD6600\", \"#CD6600\", \"#CD6600\", \"#CD6600\", \"#009933\", \"#009933\", \"#009933\", \"#009933\", \"#9B30FF\", \"#9B30FF\", \"#9B30FF\") # Fill colors\nalpha_values <- c(0.3, 0.3, 0.3, 0.3, 0.2, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3) # Transparency values\nextend_values <- c(25, 24, 24, 25, 25, 25, 24, 24, 25, 24, 24) # Values for the 'extend' parameter\n\n# Now, you can call this function to create your ggtree layer\n\np2 <- highlight_by_node(\n  p2, \n  nodes, \n  fill_colors, \n  alpha_values, \n  extend_values\n  )\np2\n```\n\n::: {.cell-output-display}\n![](Enrichment-ggtree_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## Diff_deseq2 Enrichment Analysis\n### Obtain the list of genes\n\n::: {.cell}\n\n```{.r .cell-code}\ngene <- rownames(Diff_deseq2)\n## Convert\ngene = bitr(gene, fromType=\"SYMBOL\", toType=\"ENTREZID\", OrgDb=\"org.Hs.eg.db\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n'select()' returned 1:1 mapping between keys and columns\n```\n:::\n\n```{.r .cell-code}\n## Remove duplicates and merge\ngene <- dplyr::distinct(gene, SYMBOL, .keep_all=TRUE)\ngene_df <- data.frame(logFC=Diff_deseq2$log2FoldChange,\n                      SYMBOL = rownames(Diff_deseq2))\ngene_df <- merge(gene_df, gene, by=\"SYMBOL\")\nGO_deseq2 <- gene_df$ENTREZID\n```\n:::\n\n\n### GO Analysis for Biological Processes (BP)\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform gene enrichment analysis\nerich.go.BP_deseq2 <- enrichGO(\n  gene = GO_deseq2,\n  OrgDb = org.Hs.eg.db,\n  keyType = \"ENTREZID\",\n  ont = 'BP', # Other categories: \"CC\", \"MF\" for molecular function\n  pvalueCutoff = 0.05,\n  qvalueCutoff = 0.05,\n  readable = TRUE)\nerich.go.BP.outdata_deseq2 <- as.data.frame(erich.go.BP_deseq2)\n# Uncomment to write output to CSV\n# write.csv(erich.go.BP.outdata_deseq2, \"E:/fruit/erich.go.BP.outdata.csv\")\nhead(erich.go.BP.outdata_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   ID\nGO:0016064 GO:0016064\nGO:0019724 GO:0019724\nGO:0002377 GO:0002377\nGO:0002449 GO:0002449\nGO:0002460 GO:0002460\n                                                                                                                         Description\nGO:0016064                                                                                   immunoglobulin mediated immune response\nGO:0019724                                                                                                  B cell mediated immunity\nGO:0002377                                                                                                 immunoglobulin production\nGO:0002449                                                                                              lymphocyte mediated immunity\nGO:0002460 adaptive immune response based on somatic recombination of immune receptors built from immunoglobulin superfamily domains\n           GeneRatio   BgRatio       pvalue     p.adjust       qvalue\nGO:0016064     14/80 205/18870 1.639824e-13 6.821238e-11 6.653066e-11\nGO:0019724     14/80 208/18870 2.003300e-13 6.821238e-11 6.653066e-11\nGO:0002377     12/80 196/18870 3.655475e-11 8.297927e-09 8.093349e-09\nGO:0002449     14/80 368/18870 4.233820e-10 7.208078e-08 7.030369e-08\nGO:0002460     14/80 380/18870 6.427551e-10 8.754324e-08 8.538494e-08\n                                                                                                                                 geneID\nGO:0016064 IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-15/IGHV3-21/IGHV3-23/IGHV4-31/IGHV4-34/IGHV4-39/IGHV5-51/TREX1\nGO:0019724 IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-15/IGHV3-21/IGHV3-23/IGHV4-31/IGHV4-34/IGHV4-39/IGHV5-51/TREX1\nGO:0002377                          IGKV1-16/IGKV4-1/IGLV1-40/IGLV2-23/IGLV3-10/IGLV3-19/IGLV3-21/IGLV3-25/IGLV4-60/IGLV4-69/TREX1/XBP1\nGO:0002449 IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-15/IGHV3-21/IGHV3-23/IGHV4-31/IGHV4-34/IGHV4-39/IGHV5-51/TREX1\nGO:0002460 IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-15/IGHV3-21/IGHV3-23/IGHV4-31/IGHV4-34/IGHV4-39/IGHV5-51/TREX1\n           Count\nGO:0016064    14\nGO:0019724    14\nGO:0002377    12\nGO:0002449    14\nGO:0002460    14\n```\n:::\n:::\n\n\n\n### GO Analysis for Molecular Functions (MF)\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform gene enrichment analysis\nerich.go.MF_deseq2 <- enrichGO(\n  gene = GO_deseq2,\n  OrgDb = org.Hs.eg.db,\n  keyType = \"ENTREZID\",\n  ont = 'MF', # Other categories: \"CC\", \"MF\" for molecular function\n  pvalueCutoff = 0.05,\n  qvalueCutoff = 0.05,\n  readable = TRUE)\n\nerich.go.MF.outdata_deseq2 <- as.data.frame(erich.go.MF_deseq2)\n# Uncomment to write output to CSV\n# write.csv(erich.go.MF.outdata_deseq2, \"E:/fruit/erich.go.MF.outdata.csv\")\n\nhead(erich.go.MF.outdata_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   ID                              Description GeneRatio\nGO:0003823 GO:0003823                          antigen binding     21/87\nGO:0030280 GO:0030280 structural constituent of skin epidermis      4/87\nGO:0042826 GO:0042826              histone deacetylase binding      5/87\n             BgRatio       pvalue     p.adjust       qvalue\nGO:0003823 178/18496 5.857929e-24 7.146673e-22 7.146673e-22\nGO:0030280  36/18496 2.397665e-05 1.462576e-03 1.462576e-03\nGO:0042826 127/18496 3.322487e-04 1.351145e-02 1.351145e-02\n                                                                                                                                                                                                geneID\nGO:0003823 IGHV1-18/IGHV1-24/IGHV1-58/IGHV1-69/IGHV1-69-2/IGHV2-26/IGHV3-15/IGHV3-21/IGHV3-23/IGHV4-31/IGHV4-34/IGHV4-39/IGHV5-51/IGKV1-16/IGKV4-1/IGLV1-40/IGLV2-23/IGLV3-19/IGLV3-21/IGLV3-25/TRBV28\nGO:0030280                                                                                                                                                                   KRT2/KRT71/KRT85/KRTAP1-3\nGO:0042826                                                                                                                                                         MAGEA1/MAGEA12/MAGEA3/MAGEA4/MAGEA6\n           Count\nGO:0003823    21\nGO:0030280     4\nGO:0042826     5\n```\n:::\n:::\n\n\n\n\n### GO Analysis for Cellular Components (CC)\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform gene enrichment analysis\nerich.go.CC_deseq2 <- enrichGO(\n  gene = GO_deseq2,\n  OrgDb = org.Hs.eg.db,\n  keyType = \"ENTREZID\",\n  ont = 'CC', # Other categories: \"CC\", \"MF\" for molecular function\n  pvalueCutoff = 0.05,\n  qvalueCutoff = 0.05,\n  readable = TRUE)\n\nerich.go.CC.outdata_deseq2 <- as.data.frame(erich.go.CC_deseq2)\n# Uncomment to write output to CSV\n# write.csv(erich.go.CC.outdata_deseq2, \"E:/fruit/erich.go.CC.outdata.csv\")\n```\n:::\n\n\n\n### KEGG Analysis \n\n::: {.cell}\n\n```{.r .cell-code}\nkegg.out_deseq2 = enrichKEGG(\n  gene = GO_deseq2,\n  organism = \"hsa\",\n  keyType = \"kegg\",\n  pvalueCutoff = 0.05,\n  pAdjustMethod = \"BH\",\n  qvalueCutoff = 0.05)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nReading KEGG annotation online: \"https://rest.kegg.jp/link/hsa/pathway\"...\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nReading KEGG annotation online: \"https://rest.kegg.jp/list/pathway/hsa\"...\n```\n:::\n\n```{.r .cell-code}\nkegg.out.outdata_deseq2 <- as.data.frame(kegg.out_deseq2)\n# Uncomment to export the data, which are in ENTREZID format\n# write.csv(kegg.out.outdata_deseq2, \"E:/kegg.out.outdata.csv\")\n\n##### Convert numeric Entrez gene IDs or Ensembl gene IDs from above code to symbols\nlibrary(org.Hs.eg.db)\nkegg.out1_deseq2 = as.data.frame(kegg.out_deseq2)\nENTREZID = strsplit(kegg.out1_deseq2$geneID, \"/\")\nsymbol = sapply(ENTREZID, function(x) {\n  y = bitr(x, fromType = \"ENTREZID\", toType = \"SYMBOL\", OrgDb = \"org.Hs.eg.db\")\n  # In case of multiple matches, take the first one\n  y = y[!duplicated(y$ENTREZID), -1]\n  y = paste(y, collapse = \"/\")\n})\nkegg.out1_deseq2$geneID = symbol\nkegg.out1.outdata_deseq2 <- as.data.frame(kegg.out1_deseq2)\n# Uncomment to export the converted data\n# write.csv(kegg.out1.outdata_deseq2, \"E:/fruit/kegg.out1.outdata.csv\")\nhead(kegg.out.outdata_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] category    subcategory ID          Description GeneRatio   BgRatio    \n [7] pvalue      p.adjust    qvalue      geneID      Count      \n<0 rows> (or 0-length row.names)\n```\n:::\n\n```{.r .cell-code}\nhead(kegg.out1.outdata_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] category    subcategory ID          Description GeneRatio   BgRatio    \n [7] pvalue      p.adjust    qvalue      geneID      Count      \n<0 rows> (or 0-length row.names)\n```\n:::\n:::\n\n\n\n### DO Analysis\n\n::: {.cell}\n\n```{.r .cell-code}\nerich.go.DO_deseq2 = enrichDO(gene = GO_deseq2,\n                              ont = \"DO\", # Other categories: \"CC\", \"MF\" for molecular function\n                              pvalueCutoff = 0.05,\n                              qvalueCutoff = 0.05,\n                              readable = TRUE)\n\nerich.go.DO.outdata_deseq2 <- as.data.frame(erich.go.DO_deseq2)\n# Uncomment to export the data\n# write.csv(erich.go.DO.outdata_deseq2, \"E:/fruit/erich.go.DO.outdata.csv\")\nhead(erich.go.DO.outdata_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   ID           Description GeneRatio  BgRatio       pvalue\nDOID:11132 DOID:11132 prostatic hypertrophy      3/34 34/10312 0.0001827545\n             p.adjust     qvalue               geneID Count\nDOID:11132 0.02668216 0.02481614 MAGEA1/MAGEA3/MAGEA4     3\n```\n:::\n:::\n\n\n\n### Reactome Pathway Analysis \n\n::: {.cell}\n\n```{.r .cell-code}\nerich.go.Reactome_deseq2 <- enrichPathway(gene = GO_deseq2, pvalueCutoff = 0.05, readable = TRUE)\n\nerich.go.Reactome.outdata_deseq2 <- as.data.frame(erich.go.Reactome_deseq2)\n# Uncomment to export the data\n# write.csv(erich.go.Reactome.outdata_deseq2, \"E:/fruit/erich.go.Reactome.outdata.csv\")\nhead(erich.go.Reactome.outdata_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                         ID                         Description GeneRatio\nR-HSA-6805567 R-HSA-6805567                      Keratinization     18/43\nR-HSA-6809371 R-HSA-6809371 Formation of the cornified envelope      6/43\n                BgRatio       pvalue     p.adjust       qvalue\nR-HSA-6805567 214/11009 3.032346e-20 2.850405e-18 2.649312e-18\nR-HSA-6809371 129/11009 9.843111e-06 4.626262e-04 4.299885e-04\n                                                                                                                                                        geneID\nR-HSA-6805567 CDSN/KRT2/KRT25/KRT35/KRT71/KRT85/KRTAP1-3/KRTAP10-5/KRTAP11-1/KRTAP2-1/KRTAP2-2/KRTAP2-4/KRTAP26-1/KRTAP3-3/KRTAP4-2/KRTAP8-1/KRTAP9-3/KRTAP9-8\nR-HSA-6809371                                                                                                                CDSN/KRT2/KRT25/KRT35/KRT71/KRT85\n              Count\nR-HSA-6805567    18\nR-HSA-6809371     6\n```\n:::\n:::\n\n\n\n### Filter and organize data by setting the count values of genes in pathways or by selecting pathway names of interest to the user.\n\n::: {.cell}\n\n```{.r .cell-code}\n# DEG_deseq2\n## Conversion\nGO_deseq2 = bitr(GO_deseq2, fromType=\"ENTREZID\", toType=\"SYMBOL\", OrgDb=\"org.Hs.eg.db\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n'select()' returned 1:1 mapping between keys and columns\n```\n:::\n\n```{.r .cell-code}\nGO_deseq2 <- GO_deseq2$SYMBOL\n\n# Usage Example\n# count\ncount_threshold <- 12\nresult_threshold_deseq2 <- pathway_count(GO_deseq2, count_threshold, erich.go.BP.outdata_deseq2)\n# Print the results\nhead(result_threshold_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           Symble                             Description Exists\n1           ADIRF immunoglobulin mediated immune response      0\n2 ATP6V1G2-DDX39B immunoglobulin mediated immune response      0\n3           BANCR immunoglobulin mediated immune response      0\n4           BOLA2 immunoglobulin mediated immune response      0\n5         C1QTNF5 immunoglobulin mediated immune response      0\n```\n:::\n\n```{.r .cell-code}\n# List of selected pathway names\nselected_pathways_names <- c(\"immunoglobulin production\", \"production of molecular mediator of immune response\")\n# Use function\nresult_names_deseq2 <- pathway_description(GO_deseq2, selected_pathways_names, erich.go.BP.outdata_deseq2)\n# View the results\nhead(result_names_deseq2, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           Symble               Description Exists\n1           ADIRF immunoglobulin production      0\n2 ATP6V1G2-DDX39B immunoglobulin production      0\n3           BANCR immunoglobulin production      0\n4           BOLA2 immunoglobulin production      0\n5         C1QTNF5 immunoglobulin production      0\n```\n:::\n:::\n\n\n\n### Label highly and lowly expressed genes and annotate corresponding colors\n\n::: {.cell}\n\n```{.r .cell-code}\nselected_genes_deseq2 <- result_threshold_deseq2 %>%\n  dplyr::filter(Exists == 1) %>%\n  dplyr::select(Symble) %>%\n  dplyr::distinct()\n\n# Invoke the function\nresult_deseq2 <- gene_color(selected_genes_deseq2, Diff_deseq2, \"#0000EE\", \"#fc4746\")\n\n# Add gene highlights to the plot\nadd_gene_highlights_p3 <- highlight_genes(p2, result_deseq2, hilight_extend = 26)\nadd_gene_highlights_p3\n```\n\n::: {.cell-output-display}\n![](Enrichment-ggtree_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n### heatmap\n\n::: {.cell}\n\n```{.r .cell-code}\np4<- gheatmap(\n  add_gene_highlights_p3+ geom_tiplab(offset=15,size=2.5),\n  HeatdataDeseq2,\n  width = 1, \n  colnames_offset_y = 0.5,\n  font.size= 2, \n  hjust = 0)+ scale_fill_gradientn(colors = c(low = \"#c2d5e5\", high = \"steelblue\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\n```\n:::\n\n```{.r .cell-code}\np4\n```\n\n::: {.cell-output-display}\n![](Enrichment-ggtree_files/figure-html/unnamed-chunk-16-1.png){width=100%}\n:::\n:::\n\n\n\n### ggtreeExtra::geom_fruit\n\n::: {.cell}\n\n```{.r .cell-code}\n## Shorten a name that was too long\nresult_threshold_deseq2$Description <- gsub(\"adaptive immune response based on somatic recombination of immune receptors built from immunoglobulin superfamily domains\",\n                                            \"adaptive immune response\", result_threshold_deseq2$Description)\n\n# Enhance the visualization with additional scale and elements\np7 <- p4 + new_scale_fill() +\n  geom_fruit(data = result_threshold_deseq2, geom = geom_tile,\n              mapping = aes(y = Symble, x = Description, alpha = Exists, fill = Description),\n              color = \"grey50\", pwidth = 0.5, offset = 1.02, size = 0.02) +\n  scale_alpha_continuous(range = c(0.2, 0.8),\n                          guide = guide_legend(keywidth = 0.3, keyheight = 0.3,  order = 2)) +\n  scale_fill_manual(values = c(\"#CD6600\", \"#009933\", \"#0000EE\", \"#9B30FF\", \"#FF4040\"), guide = guide_legend(keywidth = 0.3, keyheight = 0.3, order = 2))\n\np7\n```\n\n::: {.cell-output-display}\n![](Enrichment-ggtree_files/figure-html/unnamed-chunk-17-1.png){width=100%}\n:::\n:::\n\n\n\n### Bar plot section \n\n::: {.cell}\n\n```{.r .cell-code}\n# offset: Adjust the spacing between each bar\np8 <- p7 + new_scale_fill() + \n  geom_fruit(data = Diff_deseq2, geom = geom_bar, mapping = aes(y = ID, x = log_pvalue, fill = \"log_pvalue\"), pwidth = 0.3, offset = 0.1, orientation = \"y\", stat = \"identity\") +\n  geom_fruit(data = Diff_deseq2, geom = geom_bar, mapping = aes(y = ID, x = log2FoldChange, fill = \"log2FoldChange\"), pwidth = 0.3, offset = 0.2, orientation = \"y\", stat = \"identity\") +\n  geom_fruit(data = Diff_deseq2, geom = geom_bar, mapping = aes(y = ID, x = average, fill = \"average\"), pwidth = 0.3, offset = 0.04, orientation = \"y\", stat = \"identity\") +\n  scale_fill_manual(values = c(\"log_pvalue\" = \"#87CEFA\", \"log2FoldChange\" = \"#FFC125\", \"average\" = \"#7B68EE\"))\n\np8\n```\n\n::: {.cell-output-display}\n![](Enrichment-ggtree_files/figure-html/unnamed-chunk-18-1.png){width=100%}\n:::\n:::\n\n\n\n# Reference\n>   - <a href=\"https://doi.org/10.1111/2041-210X.12628\" style=\"color: #758b76; font-weight: bold;\">G Yu, DK Smith, H Zhu, Y Guan, TTY Lam*. ggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data. Methods in Ecology and Evolution. 2017, 8(1):28-36.</a>\n>   - <a href=\"https://doi.org/10.1093/molbev/msy194\" style=\"color: #758b76; font-weight: bold;\">G Yu*, TTY Lam, H Zhu, Y Guan*. Two methods for mapping and visualizing associated data on phylogeny using ggtree. Molecular Biology and Evolution, 2018, 35(2):3041-3043. </a>\n>   - <a href=\"https://doi.org/10.1093/molbev/msab166\" style=\"color: #758b76; font-weight: bold;\">S Xu, Z Dai, P Guo, X Fu, S Liu, L Zhou, W Tang, T Feng, M Chen, L Zhan, T Wu, E Hu, Y Jiang*, X Bo* and G Yu*. ggtreeExtra: Compact visualization of richly annotated phylogenetic data. Molecular Biology and Evolution. 2021, 38(9):4039-4042. </a>\n>   - <a href=\"https://doi.org/10.1016/j.xinn.2021.100141\" style=\"color: #758b76; font-weight: bold;\">T Wu#, E Hu#, S Xu, M Chen, P Guo, Z Dai, T Feng, L Zhou, W Tang, L Zhan, X Fu, S Liu, X Bo*, G Yu*. clusterProfiler 4.0: A universal enrichment tool for interpreting omics data. The Innovation. 2021, 2(3):100141. </a>\n>   - <a href=\"https://pubs.rsc.org/en/content/articlelanding/2016/mb/c5mb00663e\" style=\"color: #758b76; font-weight: bold;\">G Yu, QY He*. ReactomePA: an R/Bioconductor package for reactome pathway analysis and visualization. Molecular BioSystems 2016, 12(2):477-479.</a>\n>   - <a href=\"https://www.altmetric.com/details/2788597\" style=\"color: #758b76; font-weight: bold;\">G Yu, LG Wang, GR Yan, QY He. DOSE: an R/Bioconductor package for Disease Ontology Semantic and Enrichment analysis. Bioinformatics 2015, 31(4):608-609.</a>\n\n",
    "supporting": [
      "Enrichment-ggtree_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}